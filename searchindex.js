Search.setIndex({"docnames": ["api/hypercoil.engine.axisutil.orient_and_conform", "api/hypercoil.functional.activation", "api/hypercoil.functional.activation.amplitude_atanh", "api/hypercoil.functional.activation.amplitude_tanh", "api/hypercoil.functional.activation.corrnorm", "api/hypercoil.functional.activation.isochor", "api/hypercoil.functional.cmass", "api/hypercoil.functional.cmass.cmass", "api/hypercoil.functional.cmass.cmass_coor", "api/hypercoil.functional.cmass.cmass_reference", "api/hypercoil.functional.cmass.diffuse", "api/hypercoil.functional.connectopy", "api/hypercoil.functional.connectopy.diffusion_mapping", "api/hypercoil.functional.connectopy.laplacian_eigenmaps", "api/hypercoil.functional.cov", "api/hypercoil.functional.cov.conditionalcorr", "api/hypercoil.functional.cov.conditionalcov", "api/hypercoil.functional.cov.corr", "api/hypercoil.functional.cov.cov", "api/hypercoil.functional.cov.pairedcorr", "api/hypercoil.functional.cov.pairedcov", "api/hypercoil.functional.cov.partialcorr", "api/hypercoil.functional.cov.partialcov", "api/hypercoil.functional.cov.precision", "api/hypercoil.functional.fourier", "api/hypercoil.functional.fourier.analytic_signal", "api/hypercoil.functional.fourier.env_inst", "api/hypercoil.functional.fourier.envelope", "api/hypercoil.functional.fourier.hilbert_transform", "api/hypercoil.functional.fourier.instantaneous_frequency", "api/hypercoil.functional.fourier.instantaneous_phase", "api/hypercoil.functional.fourier.product_filter", "api/hypercoil.functional.fourier.product_filtfilt", "api/hypercoil.functional.fourier.unwrap", "api/hypercoil.functional.graph", "api/hypercoil.functional.graph.coaffiliation", "api/hypercoil.functional.graph.girvan_newman_null", "api/hypercoil.functional.graph.graph_laplacian", "api/hypercoil.functional.graph.modularity_matrix", "api/hypercoil.functional.graph.relaxed_modularity", "api/hypercoil.functional.interpolate", "api/hypercoil.functional.interpolate.hybrid_interpolate", "api/hypercoil.functional.interpolate.linear_interpolate", "api/hypercoil.functional.interpolate.spectral_interpolate", "api/hypercoil.functional.interpolate.weighted_interpolate", "api/hypercoil.functional.kernel", "api/hypercoil.functional.kernel.corr_kernel", "api/hypercoil.functional.kernel.cosine_kernel", "api/hypercoil.functional.kernel.cov_kernel", "api/hypercoil.functional.kernel.gaussian_kernel", "api/hypercoil.functional.kernel.linear_distance", "api/hypercoil.functional.kernel.linear_kernel", "api/hypercoil.functional.kernel.param_norm", "api/hypercoil.functional.kernel.polynomial_kernel", "api/hypercoil.functional.kernel.rbf_kernel", "api/hypercoil.functional.kernel.sigmoid_kernel", "api/hypercoil.functional.matrix", "api/hypercoil.functional.matrix.cholesky_invert", "api/hypercoil.functional.matrix.delete_diagonal", "api/hypercoil.functional.matrix.diag_embed", "api/hypercoil.functional.matrix.expand_outer", "api/hypercoil.functional.matrix.fill_diagonal", "api/hypercoil.functional.matrix.recondition_eigenspaces", "api/hypercoil.functional.matrix.spd", "api/hypercoil.functional.matrix.squareform", "api/hypercoil.functional.matrix.sym2vec", "api/hypercoil.functional.matrix.symmetric", "api/hypercoil.functional.matrix.toeplitz", "api/hypercoil.functional.matrix.toeplitz_2d", "api/hypercoil.functional.matrix.vec2sym", "api/hypercoil.functional.resid.residualise", "api/hypercoil.functional.semidefinite", "api/hypercoil.functional.semidefinite.cone_project_spd", "api/hypercoil.functional.semidefinite.mean_euc_spd", "api/hypercoil.functional.semidefinite.mean_geom_spd", "api/hypercoil.functional.semidefinite.mean_harm_spd", "api/hypercoil.functional.semidefinite.mean_logeuc_spd", "api/hypercoil.functional.semidefinite.tangent_project_spd", "api/hypercoil.functional.sparse", "api/hypercoil.functional.sparse.as_topk", "api/hypercoil.functional.sparse.block_serialise", "api/hypercoil.functional.sparse.dspdmm", "api/hypercoil.functional.sparse.full_as_topk", "api/hypercoil.functional.sparse.random_sparse", "api/hypercoil.functional.sparse.select_indices", "api/hypercoil.functional.sparse.sp_block_serialise", "api/hypercoil.functional.sparse.sparse_astype", "api/hypercoil.functional.sparse.spdiagmm", "api/hypercoil.functional.sparse.splr_hadamard", "api/hypercoil.functional.sparse.spsp_innerpaired", "api/hypercoil.functional.sparse.spsp_pairdiff", "api/hypercoil.functional.sparse.spspmm", "api/hypercoil.functional.sparse.spspmm_full", "api/hypercoil.functional.sparse.topk", "api/hypercoil.functional.sparse.topk_diagreplace", "api/hypercoil.functional.sparse.topk_diagzero", "api/hypercoil.functional.sparse.topk_to_bcoo", "api/hypercoil.functional.sparse.topkx", "api/hypercoil.functional.sparse.trace_spspmm", "api/hypercoil.functional.sphere", "api/hypercoil.functional.sphere.euclidean_conv", "api/hypercoil.functional.sphere.spatial_conv", "api/hypercoil.functional.sphere.sphere_to_latlong", "api/hypercoil.functional.sphere.sphere_to_normals", "api/hypercoil.functional.sphere.spherical_conv", "api/hypercoil.functional.sphere.spherical_geodesic", "api/hypercoil.functional.sylo", "api/hypercoil.functional.symmap", "api/hypercoil.functional.symmap.symexp", "api/hypercoil.functional.symmap.symlog", "api/hypercoil.functional.symmap.symmap", "api/hypercoil.functional.symmap.symsqrt", "api/hypercoil.functional.tsconv", "api/hypercoil.functional.tsconv.basischan", "api/hypercoil.functional.tsconv.basisconv2d", "api/hypercoil.functional.tsconv.conv", "api/hypercoil.functional.tsconv.polychan", "api/hypercoil.functional.tsconv.polyconv2d", "api/hypercoil.functional.tsconv.tsconv2d", "api/hypercoil.functional.utils", "api/hypercoil.functional.utils.amplitude_apply", "api/hypercoil.functional.utils.apply_mask", "api/hypercoil.functional.utils.complex_decompose", "api/hypercoil.functional.utils.complex_recompose", "api/hypercoil.functional.utils.conform_mask", "api/hypercoil.functional.utils.mask_tensor", "api/hypercoil.functional.vertcom.vertical_compression", "api/hypercoil.functional.window", "api/hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax", "api/hypercoil.functional.window.sample_nonoverlapping_windows_new_ax", "api/hypercoil.functional.window.sample_overlapping_windows_existing_ax", "api/hypercoil.functional.window.sample_overlapping_windows_new_ax", "api/hypercoil.functional.window.sample_windows", "api/hypercoil.init.atlas", "api/hypercoil.init.atlas.AtlasInitialiser", "api/hypercoil.init.atlas.BaseAtlas", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas", "api/hypercoil.init.atlas.DirichletInitBaseAtlas", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas", "api/hypercoil.init.atlas.MultiVolumetricAtlas", "api/hypercoil.init.atlas.MultifileVolumetricAtlas", "api/hypercoil.init.atlasmixins", "api/hypercoil.init.base", "api/hypercoil.init.base.ConstantInitialiser", "api/hypercoil.init.base.DistributionInitialiser", "api/hypercoil.init.base.IdentityInitialiser", "api/hypercoil.init.base.MappedInitialiser", "api/hypercoil.init.base.constant_init", "api/hypercoil.init.base.from_distr_init", "api/hypercoil.init.base.identity_init", "api/hypercoil.init.deltaplus", "api/hypercoil.init.dirichlet", "api/hypercoil.init.freqfilter", "api/hypercoil.init.freqfilter.FreqFilterSpec", "api/hypercoil.init.freqfilter.clamp_init_", "api/hypercoil.init.freqfilter.freqfilter_init_", "api/hypercoil.init.iirfilter", "api/hypercoil.init.laplace", "api/hypercoil.init.mapparam", "api/hypercoil.init.mapparam.AffineMappedParameter", "api/hypercoil.init.mapparam.AmplitudeProbabilitySimplexParameter", "api/hypercoil.init.mapparam.AmplitudeTanhMappedParameter", "api/hypercoil.init.mapparam.Clip", "api/hypercoil.init.mapparam.DomainMappedParameter", "api/hypercoil.init.mapparam.ForcePositiveDefinite", "api/hypercoil.init.mapparam.IdentityMappedParameter", "api/hypercoil.init.mapparam.IsochoricParameter", "api/hypercoil.init.mapparam.MappedLogits", "api/hypercoil.init.mapparam.MappedParameter", "api/hypercoil.init.mapparam.NormSphereParameter", "api/hypercoil.init.mapparam.OrthogonalParameter", "api/hypercoil.init.mapparam.PhaseAmplitudeMixin", "api/hypercoil.init.mapparam.ProbabilitySimplexParameter", "api/hypercoil.init.mapparam.Renormalise", "api/hypercoil.init.mapparam.TanhMappedParameter", "api/hypercoil.init.mpbl", "api/hypercoil.init.semidefinite", "api/hypercoil.init.semidefinite.SemidefiniteMean", "api/hypercoil.init.semidefinite.TangencyInitialiser", "api/hypercoil.init.sylo", "api/hypercoil.init.toeplitz", "api/hypercoil.loss.Loss", "api/hypercoil.loss.MSELoss", "api/hypercoil.loss.NormedLoss", "api/hypercoil.loss.ParameterisedLoss", "api/hypercoil.loss.auto_tol", "api/hypercoil.loss.batch_corr", "api/hypercoil.loss.bimodal_symmetric", "api/hypercoil.loss.bregman_divergence", "api/hypercoil.loss.compactness", "api/hypercoil.loss.connectopy", "api/hypercoil.loss.constraint_violation", "api/hypercoil.loss.det_gram", "api/hypercoil.loss.difference", "api/hypercoil.loss.dispersion", "api/hypercoil.loss.entropy", "api/hypercoil.loss.equilibrium", "api/hypercoil.loss.hinge_loss", "api/hypercoil.loss.identity", "api/hypercoil.loss.interhemispheric_tether", "api/hypercoil.loss.js_divergence", "api/hypercoil.loss.kl_divergence", "api/hypercoil.loss.log_det_gram", "api/hypercoil.loss.modularity", "api/hypercoil.loss.multivariate_kurtosis", "api/hypercoil.loss.qcfc", "api/hypercoil.loss.reference_tether", "api/hypercoil.loss.scalarise.max_scalarise", "api/hypercoil.loss.scalarise.mean_scalarise", "api/hypercoil.loss.scalarise.meansq_scalarise", "api/hypercoil.loss.scalarise.norm_scalarise", "api/hypercoil.loss.scalarise.selfwmean_scalarise", "api/hypercoil.loss.scalarise.sum_scalarise", "api/hypercoil.loss.scalarise.vnorm_scalarise", "api/hypercoil.loss.scalarise.wmean", "api/hypercoil.loss.scalarise.wmean_scalarise", "api/hypercoil.loss.scheme.LossApply", "api/hypercoil.loss.scheme.LossReturn", "api/hypercoil.loss.scheme.LossScheme", "api/hypercoil.loss.second_moment", "api/hypercoil.loss.smoothness", "api/hypercoil.loss.unilateral_loss", "api/hypercoil.loss.zero", "api/hypercoil.neuro.synth", "api/hypercoil.neuro.synth.match_cov_and_spectrum", "api/hypercoil.neuro.synth.match_covariance", "api/hypercoil.neuro.synth.match_reference", "api/hypercoil.neuro.synth.match_spectra", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum", "api/hypercoil.neuro.synth.synthesise_matched", "api/hypercoil.nn.activation", "api/hypercoil.nn.activation.CorrelationNorm", "api/hypercoil.nn.activation.Isochor", "api/hypercoil.nn.atlas", "api/hypercoil.nn.atlas.AtlasLinear", "api/hypercoil.nn.confound", "api/hypercoil.nn.confound.EliminationSelector", "api/hypercoil.nn.confound.LinearCombinationSelector", "api/hypercoil.nn.confound.LinearRFNN", "api/hypercoil.nn.cov", "api/hypercoil.nn.cov.BaseCovariance", "api/hypercoil.nn.cov.BinaryCovariance", "api/hypercoil.nn.cov.BinaryCovarianceTW", "api/hypercoil.nn.cov.BinaryCovarianceUW", "api/hypercoil.nn.cov.UnaryCovariance", "api/hypercoil.nn.cov.UnaryCovarianceTW", "api/hypercoil.nn.cov.UnaryCovarianceUW", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter", "api/hypercoil.nn.iirfilter", "api/hypercoil.nn.interpolate", "api/hypercoil.nn.interpolate.HybridInterpolate", "api/hypercoil.nn.interpolate.LinearInterpolate", "api/hypercoil.nn.interpolate.SpectralInterpolate", "api/hypercoil.nn.recombinator", "api/hypercoil.nn.recombinator.Recombinator", "api/hypercoil.nn.resid.Residualise", "api/hypercoil.nn.semidefinite", "api/hypercoil.nn.semidefinite.BatchTangentProject", "api/hypercoil.nn.semidefinite.TangentProject", "api/hypercoil.nn.spdnoise.SPDNoise", "api/hypercoil.nn.svm.SVM", "api/hypercoil.nn.sylo", "api/hypercoil.nn.sylo.Sylo", "api/hypercoil.nn.sylo.SyloResNet", "api/hypercoil.nn.tsconv", "api/hypercoil.nn.tsconv.BasisConv2D", "api/hypercoil.nn.tsconv.PolyConv2D", "api/hypercoil.nn.tsconv.TimeSeriesConv2D", "api/hypercoil.nn.vertcom", "api/hypercoil.nn.vertcom.VerticalCompression", "api/hypercoil.nn.window.WindowAmplifier", "diffprog", "engine", "eval", "functional", "index", "init", "installation", "loss", "modules", "neuro", "nn", "overview", "portal", "viz"], "filenames": ["api/hypercoil.engine.axisutil.orient_and_conform.rst", "api/hypercoil.functional.activation.rst", "api/hypercoil.functional.activation.amplitude_atanh.rst", "api/hypercoil.functional.activation.amplitude_tanh.rst", "api/hypercoil.functional.activation.corrnorm.rst", "api/hypercoil.functional.activation.isochor.rst", "api/hypercoil.functional.cmass.rst", "api/hypercoil.functional.cmass.cmass.rst", "api/hypercoil.functional.cmass.cmass_coor.rst", "api/hypercoil.functional.cmass.cmass_reference.rst", "api/hypercoil.functional.cmass.diffuse.rst", "api/hypercoil.functional.connectopy.rst", "api/hypercoil.functional.connectopy.diffusion_mapping.rst", "api/hypercoil.functional.connectopy.laplacian_eigenmaps.rst", "api/hypercoil.functional.cov.rst", "api/hypercoil.functional.cov.conditionalcorr.rst", "api/hypercoil.functional.cov.conditionalcov.rst", "api/hypercoil.functional.cov.corr.rst", "api/hypercoil.functional.cov.cov.rst", "api/hypercoil.functional.cov.pairedcorr.rst", "api/hypercoil.functional.cov.pairedcov.rst", "api/hypercoil.functional.cov.partialcorr.rst", "api/hypercoil.functional.cov.partialcov.rst", "api/hypercoil.functional.cov.precision.rst", "api/hypercoil.functional.fourier.rst", "api/hypercoil.functional.fourier.analytic_signal.rst", "api/hypercoil.functional.fourier.env_inst.rst", "api/hypercoil.functional.fourier.envelope.rst", "api/hypercoil.functional.fourier.hilbert_transform.rst", "api/hypercoil.functional.fourier.instantaneous_frequency.rst", "api/hypercoil.functional.fourier.instantaneous_phase.rst", "api/hypercoil.functional.fourier.product_filter.rst", "api/hypercoil.functional.fourier.product_filtfilt.rst", "api/hypercoil.functional.fourier.unwrap.rst", "api/hypercoil.functional.graph.rst", "api/hypercoil.functional.graph.coaffiliation.rst", "api/hypercoil.functional.graph.girvan_newman_null.rst", "api/hypercoil.functional.graph.graph_laplacian.rst", "api/hypercoil.functional.graph.modularity_matrix.rst", "api/hypercoil.functional.graph.relaxed_modularity.rst", "api/hypercoil.functional.interpolate.rst", "api/hypercoil.functional.interpolate.hybrid_interpolate.rst", "api/hypercoil.functional.interpolate.linear_interpolate.rst", "api/hypercoil.functional.interpolate.spectral_interpolate.rst", "api/hypercoil.functional.interpolate.weighted_interpolate.rst", "api/hypercoil.functional.kernel.rst", "api/hypercoil.functional.kernel.corr_kernel.rst", "api/hypercoil.functional.kernel.cosine_kernel.rst", "api/hypercoil.functional.kernel.cov_kernel.rst", "api/hypercoil.functional.kernel.gaussian_kernel.rst", "api/hypercoil.functional.kernel.linear_distance.rst", "api/hypercoil.functional.kernel.linear_kernel.rst", "api/hypercoil.functional.kernel.param_norm.rst", "api/hypercoil.functional.kernel.polynomial_kernel.rst", "api/hypercoil.functional.kernel.rbf_kernel.rst", "api/hypercoil.functional.kernel.sigmoid_kernel.rst", "api/hypercoil.functional.matrix.rst", "api/hypercoil.functional.matrix.cholesky_invert.rst", "api/hypercoil.functional.matrix.delete_diagonal.rst", "api/hypercoil.functional.matrix.diag_embed.rst", "api/hypercoil.functional.matrix.expand_outer.rst", "api/hypercoil.functional.matrix.fill_diagonal.rst", "api/hypercoil.functional.matrix.recondition_eigenspaces.rst", "api/hypercoil.functional.matrix.spd.rst", "api/hypercoil.functional.matrix.squareform.rst", "api/hypercoil.functional.matrix.sym2vec.rst", "api/hypercoil.functional.matrix.symmetric.rst", "api/hypercoil.functional.matrix.toeplitz.rst", "api/hypercoil.functional.matrix.toeplitz_2d.rst", "api/hypercoil.functional.matrix.vec2sym.rst", "api/hypercoil.functional.resid.residualise.rst", "api/hypercoil.functional.semidefinite.rst", "api/hypercoil.functional.semidefinite.cone_project_spd.rst", "api/hypercoil.functional.semidefinite.mean_euc_spd.rst", "api/hypercoil.functional.semidefinite.mean_geom_spd.rst", "api/hypercoil.functional.semidefinite.mean_harm_spd.rst", "api/hypercoil.functional.semidefinite.mean_logeuc_spd.rst", "api/hypercoil.functional.semidefinite.tangent_project_spd.rst", "api/hypercoil.functional.sparse.rst", "api/hypercoil.functional.sparse.as_topk.rst", "api/hypercoil.functional.sparse.block_serialise.rst", "api/hypercoil.functional.sparse.dspdmm.rst", "api/hypercoil.functional.sparse.full_as_topk.rst", "api/hypercoil.functional.sparse.random_sparse.rst", "api/hypercoil.functional.sparse.select_indices.rst", "api/hypercoil.functional.sparse.sp_block_serialise.rst", "api/hypercoil.functional.sparse.sparse_astype.rst", "api/hypercoil.functional.sparse.spdiagmm.rst", "api/hypercoil.functional.sparse.splr_hadamard.rst", "api/hypercoil.functional.sparse.spsp_innerpaired.rst", "api/hypercoil.functional.sparse.spsp_pairdiff.rst", "api/hypercoil.functional.sparse.spspmm.rst", "api/hypercoil.functional.sparse.spspmm_full.rst", "api/hypercoil.functional.sparse.topk.rst", "api/hypercoil.functional.sparse.topk_diagreplace.rst", "api/hypercoil.functional.sparse.topk_diagzero.rst", "api/hypercoil.functional.sparse.topk_to_bcoo.rst", "api/hypercoil.functional.sparse.topkx.rst", "api/hypercoil.functional.sparse.trace_spspmm.rst", "api/hypercoil.functional.sphere.rst", "api/hypercoil.functional.sphere.euclidean_conv.rst", "api/hypercoil.functional.sphere.spatial_conv.rst", "api/hypercoil.functional.sphere.sphere_to_latlong.rst", "api/hypercoil.functional.sphere.sphere_to_normals.rst", "api/hypercoil.functional.sphere.spherical_conv.rst", "api/hypercoil.functional.sphere.spherical_geodesic.rst", "api/hypercoil.functional.sylo.rst", "api/hypercoil.functional.symmap.rst", "api/hypercoil.functional.symmap.symexp.rst", "api/hypercoil.functional.symmap.symlog.rst", "api/hypercoil.functional.symmap.symmap.rst", "api/hypercoil.functional.symmap.symsqrt.rst", "api/hypercoil.functional.tsconv.rst", "api/hypercoil.functional.tsconv.basischan.rst", "api/hypercoil.functional.tsconv.basisconv2d.rst", "api/hypercoil.functional.tsconv.conv.rst", "api/hypercoil.functional.tsconv.polychan.rst", "api/hypercoil.functional.tsconv.polyconv2d.rst", "api/hypercoil.functional.tsconv.tsconv2d.rst", "api/hypercoil.functional.utils.rst", "api/hypercoil.functional.utils.amplitude_apply.rst", "api/hypercoil.functional.utils.apply_mask.rst", "api/hypercoil.functional.utils.complex_decompose.rst", "api/hypercoil.functional.utils.complex_recompose.rst", "api/hypercoil.functional.utils.conform_mask.rst", "api/hypercoil.functional.utils.mask_tensor.rst", "api/hypercoil.functional.vertcom.vertical_compression.rst", "api/hypercoil.functional.window.rst", "api/hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax.rst", "api/hypercoil.functional.window.sample_nonoverlapping_windows_new_ax.rst", "api/hypercoil.functional.window.sample_overlapping_windows_existing_ax.rst", "api/hypercoil.functional.window.sample_overlapping_windows_new_ax.rst", "api/hypercoil.functional.window.sample_windows.rst", "api/hypercoil.init.atlas.rst", "api/hypercoil.init.atlas.AtlasInitialiser.rst", "api/hypercoil.init.atlas.BaseAtlas.rst", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.rst", "api/hypercoil.init.atlas.DirichletInitBaseAtlas.rst", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas.rst", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas.rst", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultiVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultifileVolumetricAtlas.rst", "api/hypercoil.init.atlasmixins.rst", "api/hypercoil.init.base.rst", "api/hypercoil.init.base.ConstantInitialiser.rst", "api/hypercoil.init.base.DistributionInitialiser.rst", "api/hypercoil.init.base.IdentityInitialiser.rst", "api/hypercoil.init.base.MappedInitialiser.rst", "api/hypercoil.init.base.constant_init.rst", "api/hypercoil.init.base.from_distr_init.rst", "api/hypercoil.init.base.identity_init.rst", "api/hypercoil.init.deltaplus.rst", "api/hypercoil.init.dirichlet.rst", "api/hypercoil.init.freqfilter.rst", "api/hypercoil.init.freqfilter.FreqFilterSpec.rst", "api/hypercoil.init.freqfilter.clamp_init_.rst", "api/hypercoil.init.freqfilter.freqfilter_init_.rst", "api/hypercoil.init.iirfilter.rst", "api/hypercoil.init.laplace.rst", "api/hypercoil.init.mapparam.rst", "api/hypercoil.init.mapparam.AffineMappedParameter.rst", "api/hypercoil.init.mapparam.AmplitudeProbabilitySimplexParameter.rst", "api/hypercoil.init.mapparam.AmplitudeTanhMappedParameter.rst", "api/hypercoil.init.mapparam.Clip.rst", "api/hypercoil.init.mapparam.DomainMappedParameter.rst", "api/hypercoil.init.mapparam.ForcePositiveDefinite.rst", "api/hypercoil.init.mapparam.IdentityMappedParameter.rst", "api/hypercoil.init.mapparam.IsochoricParameter.rst", "api/hypercoil.init.mapparam.MappedLogits.rst", "api/hypercoil.init.mapparam.MappedParameter.rst", "api/hypercoil.init.mapparam.NormSphereParameter.rst", "api/hypercoil.init.mapparam.OrthogonalParameter.rst", "api/hypercoil.init.mapparam.PhaseAmplitudeMixin.rst", "api/hypercoil.init.mapparam.ProbabilitySimplexParameter.rst", "api/hypercoil.init.mapparam.Renormalise.rst", "api/hypercoil.init.mapparam.TanhMappedParameter.rst", "api/hypercoil.init.mpbl.rst", "api/hypercoil.init.semidefinite.rst", "api/hypercoil.init.semidefinite.SemidefiniteMean.rst", "api/hypercoil.init.semidefinite.TangencyInitialiser.rst", "api/hypercoil.init.sylo.rst", "api/hypercoil.init.toeplitz.rst", "api/hypercoil.loss.Loss.rst", "api/hypercoil.loss.MSELoss.rst", "api/hypercoil.loss.NormedLoss.rst", "api/hypercoil.loss.ParameterisedLoss.rst", "api/hypercoil.loss.auto_tol.rst", "api/hypercoil.loss.batch_corr.rst", "api/hypercoil.loss.bimodal_symmetric.rst", "api/hypercoil.loss.bregman_divergence.rst", "api/hypercoil.loss.compactness.rst", "api/hypercoil.loss.connectopy.rst", "api/hypercoil.loss.constraint_violation.rst", "api/hypercoil.loss.det_gram.rst", "api/hypercoil.loss.difference.rst", "api/hypercoil.loss.dispersion.rst", "api/hypercoil.loss.entropy.rst", "api/hypercoil.loss.equilibrium.rst", "api/hypercoil.loss.hinge_loss.rst", "api/hypercoil.loss.identity.rst", "api/hypercoil.loss.interhemispheric_tether.rst", "api/hypercoil.loss.js_divergence.rst", "api/hypercoil.loss.kl_divergence.rst", "api/hypercoil.loss.log_det_gram.rst", "api/hypercoil.loss.modularity.rst", "api/hypercoil.loss.multivariate_kurtosis.rst", "api/hypercoil.loss.qcfc.rst", "api/hypercoil.loss.reference_tether.rst", "api/hypercoil.loss.scalarise.max_scalarise.rst", "api/hypercoil.loss.scalarise.mean_scalarise.rst", "api/hypercoil.loss.scalarise.meansq_scalarise.rst", "api/hypercoil.loss.scalarise.norm_scalarise.rst", "api/hypercoil.loss.scalarise.selfwmean_scalarise.rst", "api/hypercoil.loss.scalarise.sum_scalarise.rst", "api/hypercoil.loss.scalarise.vnorm_scalarise.rst", "api/hypercoil.loss.scalarise.wmean.rst", "api/hypercoil.loss.scalarise.wmean_scalarise.rst", "api/hypercoil.loss.scheme.LossApply.rst", "api/hypercoil.loss.scheme.LossReturn.rst", "api/hypercoil.loss.scheme.LossScheme.rst", "api/hypercoil.loss.second_moment.rst", "api/hypercoil.loss.smoothness.rst", "api/hypercoil.loss.unilateral_loss.rst", "api/hypercoil.loss.zero.rst", "api/hypercoil.neuro.synth.rst", "api/hypercoil.neuro.synth.match_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.match_covariance.rst", "api/hypercoil.neuro.synth.match_reference.rst", "api/hypercoil.neuro.synth.match_spectra.rst", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.synthesise_matched.rst", "api/hypercoil.nn.activation.rst", "api/hypercoil.nn.activation.CorrelationNorm.rst", "api/hypercoil.nn.activation.Isochor.rst", "api/hypercoil.nn.atlas.rst", "api/hypercoil.nn.atlas.AtlasLinear.rst", "api/hypercoil.nn.confound.rst", "api/hypercoil.nn.confound.EliminationSelector.rst", "api/hypercoil.nn.confound.LinearCombinationSelector.rst", "api/hypercoil.nn.confound.LinearRFNN.rst", "api/hypercoil.nn.cov.rst", "api/hypercoil.nn.cov.BaseCovariance.rst", "api/hypercoil.nn.cov.BinaryCovariance.rst", "api/hypercoil.nn.cov.BinaryCovarianceTW.rst", "api/hypercoil.nn.cov.BinaryCovarianceUW.rst", "api/hypercoil.nn.cov.UnaryCovariance.rst", "api/hypercoil.nn.cov.UnaryCovarianceTW.rst", "api/hypercoil.nn.cov.UnaryCovarianceUW.rst", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter.rst", "api/hypercoil.nn.iirfilter.rst", "api/hypercoil.nn.interpolate.rst", "api/hypercoil.nn.interpolate.HybridInterpolate.rst", "api/hypercoil.nn.interpolate.LinearInterpolate.rst", "api/hypercoil.nn.interpolate.SpectralInterpolate.rst", "api/hypercoil.nn.recombinator.rst", "api/hypercoil.nn.recombinator.Recombinator.rst", "api/hypercoil.nn.resid.Residualise.rst", "api/hypercoil.nn.semidefinite.rst", "api/hypercoil.nn.semidefinite.BatchTangentProject.rst", "api/hypercoil.nn.semidefinite.TangentProject.rst", "api/hypercoil.nn.spdnoise.SPDNoise.rst", "api/hypercoil.nn.svm.SVM.rst", "api/hypercoil.nn.sylo.rst", "api/hypercoil.nn.sylo.Sylo.rst", "api/hypercoil.nn.sylo.SyloResNet.rst", "api/hypercoil.nn.tsconv.rst", "api/hypercoil.nn.tsconv.BasisConv2D.rst", "api/hypercoil.nn.tsconv.PolyConv2D.rst", "api/hypercoil.nn.tsconv.TimeSeriesConv2D.rst", "api/hypercoil.nn.vertcom.rst", "api/hypercoil.nn.vertcom.VerticalCompression.rst", "api/hypercoil.nn.window.WindowAmplifier.rst", "diffprog.rst", "engine.rst", "eval.rst", "functional.rst", "index.rst", "init.rst", "installation.rst", "loss.rst", "modules.rst", "neuro.rst", "nn.rst", "overview.rst", "portal.rst", "viz.rst"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">orient_and_conform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_tanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corrnorm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isochor</span></code>: PSD normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass, array coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass_coor</span></code>: Centre of mass, any coordinates", "Displacement from a reference centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffuse</span></code>: Diffuseness around centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">connectopy</span></code>: Connectopic manifolds", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffusion_mapping</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplacian_eigenmaps</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariances and correlations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcorr</span></code>: Conditional correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcov</span></code>: Conditional covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr</span></code>: Pearson correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcorr</span></code>: Paired correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcov</span></code>: Paired covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcorr</span></code>: Partial correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcov</span></code>: Partial covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">precision</span></code>: Inverse covariance (precision)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fourier</span></code>: Frequency-domain filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">analytic_signal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">env_inst</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">envelope</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hilbert_transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantaneous_frequency</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantaneous_phase</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filtfilt</span></code>: Zero-phase filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unwrap</span></code>: Unwrap phase", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph</span></code>: Graphs and networks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coaffiliation</span></code>: Community coaffiliation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">girvan_newman_null</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph_laplacian</span></code>: Graph Laplacian", "<code class=\"docutils literal notranslate\"><span class=\"pre\">modularity_matrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">relaxed_modularity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation and imputation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hybrid_interpolate</span></code>: Linear + spectral interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_interpolate</span></code>: Linear interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spectral_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">weighted_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kernel</span></code>: Parameterised kernels", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cosine_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gaussian_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_distance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">param_norm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polynomial_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rbf_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sigmoid_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">matrix</span></code>: Matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cholesky_invert</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">delete_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diag_embed</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_outer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recondition_eigenspaces</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">squareform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sym2vec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmetric</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz_2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vec2sym</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>: Positive semidefinite cone", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cone_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_euc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_geom_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_harm_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_logeuc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tangent_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sparse</span></code>: Sparse matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">as_topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">block_serialise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dspdmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">full_as_topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">random_sparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">select_indices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sp_block_serialise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sparse_astype</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spdiagmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">splr_hadamard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spsp_innerpaired</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spsp_pairdiff</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spspmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spspmm_full</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diagreplace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk_diagzero</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk_to_bcoo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topkx</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">trace_spspmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code>: Spherical coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">euclidean_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spatial_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_latlong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_normals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_geodesic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>: Sylo function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>: Symmetric matrix maps", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symexp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symlog</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symsqrt</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basischan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basisconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polychan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polyconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">utils</span></code>: Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_apply</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apply_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_decompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_recompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conform_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mask_tensor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertical_compression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">window</span></code>: Random windowing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_nonoverlapping_windows_existing_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_nonoverlapping_windows_new_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_overlapping_windows_existing_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_overlapping_windows_new_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_windows</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas initialisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CortexSubcortexCIfTIAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitBaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitSurfaceAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DiscreteVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultifileVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlasmixins</span></code>: Atlas mixins", "<code class=\"docutils literal notranslate\"><span class=\"pre\">base</span></code>: Base initialisations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DistributionInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">IdentityInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MappedInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constant_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">from_distr_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">identity_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deltaplus</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dirichlet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency band init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">FreqFilterSpec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">clamp_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mapparam</span></code>: Mapped parameters and parameter maps", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AffineMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeProbabilitySimplexParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeTanhMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Clip</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DomainMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ForcePositiveDefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">IdentityMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">IsochoricParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MappedLogits</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NormSphereParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OrthogonalParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">PhaseAmplitudeMixin</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ProbabilitySimplexParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Renormalise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TanhMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mpbl</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SemidefiniteMean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangencyInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Loss</span></code>: Base class for scalar-valued losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MSELoss</span></code>: Mean squared error", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NormedLoss</span></code>: Normed parameter regularisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParameterisedLoss</span></code>: Extensible class for custom parameterised losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto_tol</span></code>: Significance tolerance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">batch_corr</span></code>: Batch-axis correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">bimodal_symmetric</span></code>: Minimal distance from 2 modes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">bregman_divergence</span></code>: Bregman divergences", "<code class=\"docutils literal notranslate\"><span class=\"pre\">compactness</span></code>: Compactness", "<code class=\"docutils literal notranslate\"><span class=\"pre\">connectopy</span></code>: Generalised connectopy", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constraint_violation</span></code>: Soft constraints", "<code class=\"docutils literal notranslate\"><span class=\"pre\">det_gram</span></code>: Gramian determinant", "<code class=\"docutils literal notranslate\"><span class=\"pre\">difference</span></code>: Elementwise difference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dispersion</span></code>: Vector dispersion", "<code class=\"docutils literal notranslate\"><span class=\"pre\">entropy</span></code>: Categorical entropy", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equilibrium</span></code>: Equilibrium loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hinge_loss</span></code>: SVM hinge loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">identity</span></code>: Identity function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interhemispheric_tether</span></code>: Inter-hemispheric tethering loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">js_divergence</span></code>: Jensen-Shannon divergence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kl_divergence</span></code>: Kullback-Leibler divergence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">log_det_gram</span></code>: Gram log-determinant loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">modularity</span></code>: Relaxed modularity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multivariate_kurtosis</span></code>: Time series stationarity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">qcfc</span></code>: QC-FC measures and loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reference_tether</span></code>: Spatial tether to reference points", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_scalarise</span></code>: Maximum-value scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_scalarise</span></code>: Mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meansq_scalarise</span></code>: Squared mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">norm_scalarise</span></code>: Norm scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">selfwmean_scalarise</span></code>: Self-weighted mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sum_scalarise</span></code>: Sum scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vnorm_scalarise</span></code>: Vector norm scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wmean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wmean_scalarise</span></code>: Weighted mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossApply</span></code>: Selectively apply loss to parameters", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossReturn</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossScheme</span></code>: Scheme for multiple losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">second_moment</span></code>: Second moments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">smoothness</span></code>: Backwards differences", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unilateral_loss</span></code>: Unilateral penalties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">zero</span></code>: Zero function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synth</span></code>: Data synthesis", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_covariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_reference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_spectra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_from_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_matched</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions as modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CorrelationNorm</span></code>: Correlation normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Isochor</span></code>: Isochoric normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasLinear</span></code>: Linear atlas layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">confound</span></code>: Confound Models", "<code class=\"docutils literal notranslate\"><span class=\"pre\">EliminationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearCombinationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearRFNN</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseCovariance</span></code>: Covariance base class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency-domain filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HybridInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SpectralInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchTangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SPDNoise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SVM</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SyloResNet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BasisConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">PolyConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeSeriesConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertcom</span></code>: Vertex compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VerticalCompression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">WindowAmplifier</span></code>", "Framework", "<code class=\"docutils literal notranslate\"><span class=\"pre\">engine</span></code>: Differentiable engine", "<code class=\"docutils literal notranslate\"><span class=\"pre\">eval</span></code>: Benchmarks and evaluation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">functional</span></code>: Functions and functionals", "A differentiable program for mapping brain function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">init</span></code>: Initialisation schemes", "Installation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">loss</span></code>: Loss and regularisation", "API reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">neuro</span></code>: Neuroscience data utilities", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nn</span></code>: Neural network modules", "Technical overview", "Poster landing page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">viz</span></code>: Visualisation"], "terms": {"addit": [1, 4, 5, 27, 29, 30, 31, 32, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 67, 72, 74, 76, 77, 97, 109, 110, 111, 114, 117, 143], "neural": [1, 276, 277, 281, 284], "network": [1, 39, 276, 277, 281, 284], "layer": [1, 106, 158, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 281, 283, 284], "amplitude_tanh": [1, 276], "amplitude_atanh": [1, 276], "corrnorm": [1, 276], "isochor": [1, 168, 232, 276, 283], "psd": [1, 276], "normalis": [1, 4, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 158, 159, 171, 175, 232, 276, 283], "hypercoil": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 276, 277, 279, 284], "function": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 148, 152, 154, 155, 156, 157, 159, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 280, 281, 283, 285], "activ": [2, 3, 4, 5, 276, 281, 283, 284], "input": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 84, 88, 95, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 122, 123, 126, 128, 129, 130, 131, 133, 143, 152, 153, 162, 174, 177, 284], "union": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 151, 152, 153, 155, 157, 159, 177], "devicearraybas": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 151, 152, 153, 155, 157, 159, 177], "ndarrai": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 151, 152, 153, 155, 157, 159, 177], "sourc": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "invers": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 54, 57, 72, 75, 76, 77, 162, 170, 171, 174, 276], "hyperbol": [2, 3, 163, 176], "tangent": [2, 3, 71, 72, 74, 77, 163, 176, 284], "arctang": 2, "appli": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 41, 110, 114, 117, 118, 120, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 155, 162, 173, 280, 281], "amplitud": [2, 3, 32, 120, 122, 123, 155, 162, 163, 173, 284], "onli": [2, 3, 19, 20, 68, 82, 84, 91, 97, 98, 102, 103, 105, 121, 135, 136, 137, 138, 139, 140, 141, 142, 155, 157, 158, 171, 177], "The": [2, 3, 5, 7, 10, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 31, 32, 33, 35, 36, 37, 38, 39, 41, 44, 47, 49, 51, 52, 53, 54, 55, 57, 60, 63, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 78, 84, 87, 89, 97, 98, 101, 104, 106, 114, 115, 117, 123, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 152, 155, 158, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 277, 284], "absolut": [2, 3, 63, 284], "valu": [2, 3, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 35, 38, 39, 41, 42, 43, 44, 62, 63, 67, 68, 84, 97, 98, 101, 102, 103, 110, 122, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 156, 157, 162, 163, 164, 165, 168, 169, 173, 176, 177, 280, 281, 284], "i": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 97, 98, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 155, 158, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 277, 279, 284, 285], "transform": [2, 3, 24, 25, 26, 27, 28, 29, 30, 41, 43, 72, 74, 76, 77, 85, 97, 106, 108, 109, 110, 111, 113, 114, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 170, 284], "accord": [2, 3, 7, 15, 17, 19, 31, 32, 41, 60, 84, 97, 98, 106], "mathrm": [2, 3, 4, 62, 114, 117, 118], "arctanh": 2, "x": [2, 3, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 63, 64, 66, 70, 72, 74, 75, 76, 77, 81, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 177, 284], "while": [2, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 38, 39, 41, 42, 43, 44, 89, 114, 117, 136, 138, 175], "phase": [2, 3, 24, 25, 26, 27, 29, 30, 31, 122, 123, 155, 158, 173, 276], "complex": [2, 3, 25, 120, 122, 123, 162, 163, 173, 277], "argument": [2, 3, 4, 6, 32, 43, 44, 67, 72, 77, 80, 89, 97, 133, 143, 145, 147, 148, 153, 171], "preserv": [2, 3, 106, 175], "thi": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 49, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 84, 86, 89, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 118, 121, 124, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 151, 152, 155, 157, 158, 165, 168, 169, 171, 172, 173, 174, 175, 177, 277, 284, 285], "map": [2, 3, 4, 11, 12, 35, 39, 78, 101, 106, 110, 113, 114, 116, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 276, 278, 281, 284], "open": [2, 3, 284], "unit": [2, 3, 155, 158, 171], "disc": [2, 3], "plane": [2, 3, 25], "entir": [2, 91, 143], "origin": [2, 3, 5, 31, 32, 41, 42, 43, 44, 72, 74, 76, 77, 80, 102, 109, 110, 111, 162, 168, 170, 171, 174, 175, 177], "itself": [2, 3, 46, 47, 48, 49, 50, 51, 53, 54, 55, 106, 133, 163, 165, 169, 176], "circumfer": [2, 3], "infin": [2, 177], "dimens": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 62, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 84, 87, 89, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 122, 123, 126, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 156, 157, 177, 284], "As": [2, 3, 4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 70, 72, 73, 74, 75, 76, 77, 105, 106, 108, 109, 110, 111, 114, 117, 118, 156, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "elementwis": [2, 3, 39, 47, 124, 162, 174, 280, 281], "conserv": [2, 3, 110], "output": [2, 3, 4, 5, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 63, 66, 67, 70, 72, 73, 74, 75, 76, 77, 84, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 122, 123, 126, 148, 177, 284], "same": [2, 3, 35, 36, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 63, 67, 70, 74, 78, 106, 113, 114, 116, 117, 118, 122, 123, 126, 135, 136, 137, 138, 139, 140, 141, 142, 155, 158, 163, 165, 169, 176, 277], "shape": [2, 3, 12, 37, 67, 68, 78, 83, 106, 122, 123, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159], "paramet": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 84, 91, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 278, 280, 281, 284], "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 86, 91, 93, 96, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 163, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 284], "whose": [2, 3, 7, 8, 15, 16, 41, 43, 67, 87, 102, 114, 117, 133, 135, 136, 138, 139, 140, 141, 142, 143, 155, 162, 163, 171, 172, 174, 177], "return": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 81, 84, 87, 91, 92, 93, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 122, 123, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 148, 152, 155, 156, 157, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 284], "out": [2, 3, 15, 16, 35, 36, 37, 39, 60, 67, 95, 101, 104, 106, 116, 126, 148, 162, 163, 164, 165, 169, 171, 174, 175, 176, 284, 285], "tanh": [3, 55], "distant": 3, "region": [3, 8, 10, 135, 136, 138, 139, 140, 141, 142, 143], "ar": [3, 5, 7, 8, 10, 12, 13, 25, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 67, 68, 70, 72, 74, 76, 77, 78, 80, 84, 97, 98, 101, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 126, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 153, 155, 157, 162, 163, 165, 168, 169, 171, 172, 174, 175, 176, 177, 276, 277, 284, 285], "factor": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 72, 74, 76, 77, 109, 110, 111, 177], "none": [4, 5, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 38, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 67, 68, 72, 74, 76, 77, 80, 83, 89, 91, 97, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 151, 152, 155, 156, 158, 159, 168, 169, 177, 284], "tupl": [4, 12, 13, 26, 37, 51, 66, 67, 68, 102, 103, 114, 115, 117, 118, 122, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 165, 171, 177], "gradpath": 4, "liter": [4, 38, 39, 44, 60, 63, 70, 72, 74, 76, 77, 84, 97, 98, 106, 109, 110, 111, 117, 118, 159], "both": [4, 71, 118, 123, 277, 284], "correl": [4, 16, 18, 20, 22, 23, 46, 70, 232, 276, 280, 281, 283, 284], "divid": [4, 5, 41, 177], "each": [4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 60, 63, 65, 67, 70, 72, 74, 76, 77, 78, 80, 84, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 122, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 153, 155, 177, 284], "entri": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 35, 39, 67, 78, 84, 93, 97, 98, 122, 134, 143, 152, 155, 158, 162, 163, 169, 171, 174, 175, 176], "a_": 4, "ij": [4, 15, 17, 19, 35, 39], "matrix": [4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 81, 82, 84, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 101, 106, 108, 109, 110, 111, 126, 151, 171, 177, 276, 281, 284], "A": [4, 10, 12, 36, 37, 38, 39, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 62, 72, 74, 76, 77, 87, 91, 92, 109, 110, 111, 113, 116, 119, 132, 155, 156, 157, 165, 170, 173, 177], "product": [4, 39, 60, 88, 91, 101, 105, 106, 155, 158], "sign": [4, 38, 39, 63, 126], "squar": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 44, 47, 50, 52, 58, 61, 64, 65, 66, 70, 72, 77, 89, 107, 111, 168, 280, 281], "root": [4, 47, 72, 77, 107, 111], "correspond": [4, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 36, 37, 38, 44, 60, 67, 101, 114, 116, 117, 133, 136, 138, 140, 155, 284], "diagon": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 63, 65, 67, 69, 72, 74, 76, 77, 81, 87, 95, 106, 109, 110, 111, 126], "bar": [4, 75, 76], "_": [4, 10, 15, 17, 19, 35, 39, 47, 52], "frac": [4, 5, 10, 15, 17, 19, 31, 32, 36, 37, 38, 47, 49, 53, 54, 55, 60, 62, 73, 75, 76, 106], "sgn": 4, "ii": [4, 15, 17, 19, 155, 158, 165], "jj": [4, 15, 17, 19], "sqrt": [4, 5, 15, 17, 19, 47, 52, 111], "epsilon": 4, "default": [4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 84, 91, 97, 98, 101, 103, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 153, 155, 158, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177], "behaviour": [4, 39, 106, 152, 155], "which": [4, 7, 10, 12, 25, 26, 27, 28, 29, 30, 33, 35, 36, 38, 39, 41, 43, 63, 66, 72, 73, 74, 75, 76, 77, 78, 84, 97, 98, 101, 104, 109, 110, 111, 114, 117, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 152, 153, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 277, 284], "covari": [4, 15, 17, 19, 21, 43, 48, 49, 54, 70, 276, 281, 283, 284], "pearson": [4, 14, 15, 16, 18, 19, 20, 21, 276, 284], "can": [4, 5, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 43, 49, 54, 57, 60, 67, 70, 72, 74, 76, 77, 78, 84, 87, 97, 98, 101, 104, 106, 109, 110, 111, 114, 117, 118, 119, 126, 133, 134, 135, 143, 151, 152, 153, 155, 168, 170, 175, 177, 277, 284], "overriden": 4, "provid": [4, 5, 7, 12, 13, 31, 32, 37, 39, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 82, 91, 101, 105, 106, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 158, 168, 177, 277, 284], "detail": [4, 100, 104, 114, 117, 133, 137, 145, 146, 147, 152, 153, 155, 158, 273, 277], "below": 4, "also": [4, 49, 54, 60, 68, 84, 91, 98, 106, 126, 135, 143, 148, 170, 284, 285], "similar": [4, 44, 45, 106, 160, 284], "version": [4, 9, 152, 170], "oper": [4, 6, 12, 13, 32, 33, 43, 62, 70, 71, 72, 74, 76, 77, 82, 84, 89, 91, 92, 97, 98, 99, 106, 109, 110, 111, 143, 155, 157, 171, 276, 277, 281, 284], "graph": [4, 12, 13, 35, 36, 38, 39, 106, 177, 276, 281, 284], "laplacian": [4, 12, 13, 34, 276, 284], "p": [4, 5, 36, 38, 46, 47, 48, 49, 51, 53, 54, 55, 89, 284], "denot": [4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 63, 67, 70, 72, 73, 74, 75, 76, 77, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 123, 156, 157], "row": [4, 5, 8, 37, 47, 49, 51, 52, 53, 54, 55, 57, 60, 67, 68, 72, 73, 74, 75, 76, 77, 78, 88, 106, 108, 109, 110, 111, 126, 135, 136, 138, 139, 140, 141, 142], "column": [4, 5, 8, 10, 47, 49, 51, 52, 53, 54, 55, 57, 60, 67, 68, 72, 73, 74, 75, 76, 77, 88, 106, 108, 109, 110, 111, 126], "matric": [4, 5, 12, 13, 23, 35, 36, 38, 39, 57, 58, 61, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 90, 91, 98, 106, 107, 108, 109, 110, 111, 126, 133, 134, 147, 171, 284], "ani": [4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 41, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 68, 70, 72, 73, 74, 75, 76, 77, 80, 86, 97, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 134, 148, 153, 155, 157, 165, 168, 173, 175, 276], "number": [4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 43, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 91, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 123, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 152, 153, 155, 156, 157, 168, 169, 177], "abov": [4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 70, 72, 73, 74, 75, 76, 77, 106, 108, 109, 110, 111, 114, 117, 118, 156, 284], "iter": [4, 7, 44, 74, 135, 136, 137, 138, 139, 140, 141, 142, 143, 177, 284], "If": [4, 5, 7, 8, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 32, 35, 36, 37, 38, 39, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 60, 63, 64, 67, 70, 72, 75, 76, 80, 84, 89, 91, 97, 98, 101, 104, 105, 106, 114, 117, 126, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 151, 155, 158, 168, 171, 175, 177, 285], "explicitli": [4, 6, 46, 47, 48, 49, 50, 51, 53, 54, 55, 114, 117, 137, 276], "specifi": [4, 5, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 44, 47, 53, 54, 55, 60, 63, 66, 67, 74, 80, 88, 89, 91, 97, 106, 109, 110, 111, 114, 116, 117, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 153, 155, 157, 158, 162, 163, 168, 169, 171, 174, 175, 176, 276, 284], "follow": [4, 22, 33, 41, 62, 65, 69, 78, 101, 135, 152, 155, 157, 285], "divis": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 80, 171], "directli": [4, 91, 148, 170], "option": [4, 5, 7, 8, 9, 10, 18, 19, 20, 25, 26, 27, 28, 29, 30, 33, 35, 38, 39, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 67, 68, 72, 74, 76, 77, 80, 83, 84, 89, 91, 98, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 149, 151, 152, 156, 159, 177, 277], "mostli": [4, 33, 67], "compat": [4, 33, 47, 49, 51, 52, 53, 54, 55, 82, 84, 93, 97, 98], "non": [4, 23, 39, 41, 43, 52, 70, 78, 109, 133, 135, 136, 138, 139, 140, 141, 142, 163, 165, 166, 169, 176], "pair": [4, 14, 21, 22, 33, 36, 89, 101, 105, 143, 155, 174, 276], "outer": [4, 60, 88, 106], "str": [4, 70, 134, 135, 136, 137, 138, 139, 140, 141, 142, 171], "set": [4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 36, 38, 39, 41, 43, 44, 47, 50, 53, 54, 55, 65, 69, 72, 74, 76, 77, 84, 86, 91, 98, 105, 106, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 152, 155, 165, 168, 177, 277, 284], "us": [4, 5, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 63, 67, 68, 70, 72, 74, 76, 77, 78, 80, 84, 89, 91, 97, 98, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 121, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 155, 157, 158, 162, 165, 168, 170, 171, 172, 174, 175, 177, 277, 279, 284], "gradient": [4, 74, 163, 165, 169, 176], "block": [4, 36, 38, 39, 58, 61, 62, 63, 64, 65, 66, 67, 69, 70, 80, 85, 91, 106], "from": [4, 6, 7, 12, 15, 16, 41, 43, 47, 49, 51, 52, 53, 54, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 74, 76, 77, 84, 97, 102, 103, 105, 106, 109, 110, 111, 115, 123, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 150, 152, 153, 155, 156, 157, 177, 276, 277, 279, 280, 281, 284, 285], "flow": 4, "backward": [4, 33, 44, 71, 165, 280, 281], "through": [4, 5, 62, 72, 74, 76, 77, 106, 109, 110, 111, 135, 153, 163, 168, 169, 176], "comput": [4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 53, 54, 55, 73, 74, 75, 76, 89, 91, 101, 104, 105, 106, 107, 108, 109, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 171, 276], "volum": [5, 133, 140, 141, 142, 143, 168], "float": [5, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 33, 38, 39, 41, 43, 46, 47, 48, 49, 53, 54, 55, 61, 62, 63, 67, 68, 70, 72, 74, 76, 77, 84, 98, 100, 101, 103, 104, 105, 109, 110, 111, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 151, 152, 155, 158, 159, 162, 163, 165, 168, 169, 171, 174, 176, 177], "1": [5, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 49, 53, 54, 55, 60, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 80, 85, 91, 93, 100, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 153, 155, 158, 159, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 284], "max_condit": [5, 168], "softmax_temp": [5, 168], "symmetr": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 56, 57, 60, 63, 64, 65, 69, 72, 77, 89, 106, 108, 109, 110, 111, 168, 171, 276, 281, 284], "posit": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 60, 62, 63, 72, 73, 74, 76, 77, 89, 106, 107, 108, 109, 110, 111, 135, 136, 138, 139, 140, 141, 142, 166, 168, 171, 276, 281, 284], "definit": [5, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 63, 72, 74, 76, 77, 89, 106, 108, 109, 110, 111, 166, 168], "first": [5, 15, 16, 32, 33, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 63, 67, 69, 97, 106, 114, 117, 148, 155, 156, 158, 170, 175, 177, 284, 285], "find": 5, "eigendecomposit": [5, 63, 110], "eigenvalu": [5, 12, 13, 62, 63, 72, 74, 76, 77, 108, 109, 110, 111, 168], "n": [5, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 69, 70, 72, 73, 74, 75, 76, 77, 89, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 126, 152, 155, 156, 157, 158], "v_": [5, 133], "target": [5, 37], "determin": [5, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 98, 114, 117, 168, 177, 280, 281], "befor": [5, 31, 32, 33, 37, 43, 74, 106, 126, 135, 136, 137, 138, 139, 140, 141, 142, 168], "rescal": [5, 171], "softmax": [5, 162, 168, 174, 177], "enforc": [5, 60, 106, 114, 117, 168], "maxim": 5, "condit": [5, 14, 17, 19, 20, 21, 22, 70, 72, 74, 76, 77, 109, 110, 111, 143, 168, 276, 277, 284], "being": [5, 65, 72, 77, 149], "repres": [5, 72, 77, 82, 168, 284], "ellipsoid": [5, 168], "instanc": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 39, 60, 67, 72, 74, 76, 77, 106, 109, 110, 111, 126, 133, 135, 141, 142, 143, 148, 153, 155, 157, 175, 177, 284], "constrain": [5, 163, 168, 169, 176, 284], "eccentr": [5, 168], "those": [5, 15, 16, 43, 44, 67, 171, 177], "final": [5, 31, 32, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 65, 87, 114, 117, 118, 147, 153, 177, 284], "reconstitut": [5, 63, 123], "eigenvector": 5, "contain": [5, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 43, 47, 49, 51, 52, 53, 54, 55, 67, 70, 84, 91, 98, 101, 102, 103, 104, 105, 113, 116, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157], "procedur": [5, 33, 171, 175, 177], "all": [5, 7, 12, 15, 16, 21, 22, 33, 35, 36, 39, 41, 43, 49, 54, 62, 63, 71, 72, 74, 76, 77, 78, 84, 87, 97, 98, 106, 109, 110, 111, 114, 117, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 152, 153, 175, 276], "have": [5, 62, 70, 78, 80, 126, 149, 155, 162, 174, 285], "infti": [5, 168], "maximum": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 38, 39, 41, 43, 44, 53, 60, 63, 74, 101, 104, 106, 114, 116, 117, 118, 135, 136, 137, 138, 139, 140, 141, 142, 163, 165, 168, 169, 176, 177, 280, 281], "permiss": [5, 168], "among": [5, 18, 63, 72, 74, 76, 77, 109, 110, 111, 177, 277, 284], "To": [5, 41, 43, 109, 111, 114, 117, 148, 152, 155, 158, 168], "replac": [5, 7, 33, 60, 72, 74, 76, 77, 84, 98, 106, 109, 110, 111, 168, 170], "convex": [5, 42, 72, 74, 76, 77, 109, 110, 111, 168, 171], "combin": [5, 41, 42, 72, 74, 76, 77, 109, 110, 111, 133, 135, 136, 137, 138, 139, 140, 141, 142, 148, 168, 277, 284], "vector": [5, 7, 36, 47, 49, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 68, 69, 70, 87, 88, 89, 102, 103, 105, 106, 168, 171, 172, 177, 280, 281], "ones": [5, 168], "largest": [5, 168], "more": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 41, 68, 78, 104, 108, 133, 151, 162, 168, 169, 174, 175, 284], "than": [5, 10, 23, 33, 41, 43, 49, 54, 63, 74, 78, 82, 108, 110, 111, 143, 168, 170, 175, 284], "time": [5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 39, 41, 42, 43, 44, 89, 106, 114, 117, 118, 126, 133, 135, 136, 137, 138, 139, 140, 141, 142, 152, 168, 276, 277, 280, 281, 284, 285], "smallest": [5, 63, 168], "note": [5, 23, 32, 33, 63, 67, 72, 74, 76, 77, 91, 92, 102, 103, 106, 109, 110, 111, 143, 155, 157, 162, 163, 165, 168, 169, 171, 174, 175, 176, 279, 284], "alwai": [5, 168, 277, 284], "potenti": [5, 31, 32, 84, 98, 106, 111, 143, 168, 177], "isotrop": [5, 49, 101, 104, 168], "scale": [5, 12, 47, 53, 54, 55, 63, 100, 104, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 163, 168, 169, 171, 175, 176], "ident": [5, 35, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 72, 74, 76, 77, 105, 109, 110, 111, 135, 136, 138, 139, 140, 141, 142, 147, 151, 167, 168, 280, 281], "pass": [5, 31, 32, 38, 39, 60, 71, 80, 106, 114, 117, 143, 148, 155, 158, 168, 171, 284], "temperatur": [5, 162, 168, 174, 177], "other": [5, 15, 16, 21, 22, 33, 87, 101, 106, 112, 139, 151, 168, 277, 284], "process": [5, 168, 284], "differenti": [6, 7, 8, 12, 14, 62, 71, 72, 74, 76, 77, 107, 109, 110, 111, 155, 157, 276, 279, 281], "weight": [6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 101, 106, 114, 115, 117, 118, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 280, 281, 284], "": [6, 7, 8, 10, 35, 39, 106, 113, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 160, 284, 285], "avail": [6, 68, 135, 143, 277], "intrins": 6, "mesh": [6, 136, 138, 143], "grid": [6, 9], "coordin": [6, 9, 10, 12, 13, 101, 102, 103, 104, 105, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 276, 281], "cmass_reference_displacement_grid": [6, 9], "take": [6, 97, 101, 106, 133, 143, 148, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 284], "last": [6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 46, 47, 48, 49, 50, 51, 53, 54, 55, 65, 66, 70, 114, 117, 151, 152, 168], "axi": [6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 67, 70, 73, 74, 75, 76, 80, 93, 114, 117, 121, 124, 125, 128, 129, 130, 131, 132, 136, 138, 153, 162, 171, 174, 280, 281, 284], "differ": [6, 31, 32, 33, 35, 38, 39, 43, 47, 49, 51, 52, 53, 54, 55, 67, 74, 90, 135, 136, 137, 138, 139, 140, 141, 142, 165, 175, 177, 280, 281, 284], "locat": [6, 8, 10, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 169, 171], "accept": [6, 177], "second": [6, 8, 15, 16, 46, 47, 48, 49, 50, 51, 53, 54, 55, 68, 105, 106, 114, 117, 143, 155, 156, 158, 177, 280, 281], "indic": [6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 41, 42, 43, 44, 66, 70, 72, 74, 75, 76, 77, 78, 84, 91, 93, 97, 98, 102, 103, 109, 110, 111, 113, 114, 116, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155], "cmass_coor": [6, 9, 276], "diffus": [6, 12, 276], "cmass_reference_displac": [6, 9], "arrai": [6, 33, 89, 101, 104, 123, 152, 177, 276, 284], "around": [6, 46, 48, 91, 150, 276], "displac": [6, 276], "refer": [6, 72, 77, 106, 133, 135, 136, 138, 139, 140, 141, 142, 143, 276, 277, 278, 280, 284], "ax": [7, 9, 61, 65, 66, 67, 73, 74, 75, 76, 143, 147, 151, 152, 168], "sequenc": [7, 9, 44, 73, 74, 75, 76, 80, 83, 85, 97, 114, 115, 117, 118, 124, 125, 135, 136, 137, 138, 139, 140, 141, 142, 156, 157, 159], "int": [7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 41, 44, 53, 59, 61, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 80, 83, 85, 91, 93, 97, 100, 101, 104, 114, 115, 116, 117, 118, 121, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 171, 174, 177], "na_rm": [7, 9], "bool": [7, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 52, 66, 70, 72, 74, 75, 76, 77, 79, 80, 84, 87, 93, 97, 98, 106, 109, 110, 111, 113, 114, 116, 117, 126, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 177], "fals": [7, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 38, 39, 41, 42, 43, 44, 52, 66, 70, 72, 74, 75, 76, 77, 80, 84, 87, 97, 98, 106, 109, 110, 111, 113, 114, 116, 117, 124, 126, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 177], "regularis": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 277, 281], "so": [7, 43, 63, 97, 118, 133, 171, 175], "its": [7, 10, 31, 32, 33, 60, 62, 66, 106, 123, 133, 134, 143, 151, 157, 163, 168, 171, 173, 176, 279, 284], "close": [7, 12, 133, 155, 157], "k_1": 7, "k_2": 7, "k_n": 7, "batch": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 36, 38, 39, 43, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 87, 98, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 124, 280, 281], "interven": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 36, 38, 39, 70, 72, 73, 74, 75, 76, 77, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118], "k_i": [7, 36], "along": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 65, 67, 69, 72, 74, 76, 77, 80, 109, 110, 111, 121, 128, 129, 130, 131, 132, 147, 152, 153, 162, 168, 171, 174], "togeth": [7, 41, 44, 101, 104, 114, 117, 133, 135, 136, 137, 138, 139, 140, 141, 142], "defin": [7, 10, 15, 16, 17, 19, 23, 36, 38, 39, 44, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 284], "slice": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 63, 65, 66, 147, 151, 153, 162, 166, 171, 172, 174], "within": [7, 284], "singl": [7, 67, 84, 98, 113, 114, 116, 117, 118, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 155, 175, 177], "across": [7, 41, 43, 60, 66, 78, 84, 98, 113, 114, 116, 117, 141, 142, 143], "3": [7, 12, 41, 43, 53, 102, 103, 105, 162, 163, 169, 174, 176, 284], "2": [7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 37, 49, 60, 62, 65, 66, 67, 69, 72, 77, 102, 103, 104, 105, 106, 114, 116, 117, 152, 168, 169, 177, 280, 281, 284], "separ": [7, 15, 16, 41, 43, 84, 91, 97, 98, 101, 104, 133, 143, 155], "dimension": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 121, 277], "span": [7, 70], "three": [7, 136, 138, 177], "ha": [7, 19, 20, 32, 37, 47, 49, 51, 52, 53, 54, 55, 62, 67, 74, 78, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 277, 279], "zero": [7, 24, 31, 43, 62, 67, 70, 72, 74, 76, 77, 78, 95, 103, 109, 110, 111, 169, 276, 280, 281], "undefin": [7, 57, 72], "popul": [7, 67, 69, 150], "nan": [7, 72, 74, 76, 77, 109, 110, 111], "how": [7, 115, 277, 284], "handl": [7, 85, 133, 162, 163, 164, 165, 166, 169, 171, 174, 176], "left": [7, 10, 31, 32, 38, 39, 60, 62, 63, 75, 76, 81, 91, 98, 106, 133, 135, 136, 138, 143, 173], "intact": 7, "order": [7, 8, 31, 32, 53, 65, 69, 80, 155, 158, 171, 177], "specif": [7, 9, 114, 117, 148, 155, 156, 157, 158, 173, 284], "cmass": [8, 9, 10, 276, 281], "coor": [8, 9, 10, 100, 101, 102, 103, 104, 135, 136, 138, 139, 140, 141, 142], "radiu": [8, 9, 10, 103, 104, 105], "w": [8, 10, 12, 13, 37, 60, 106], "l": [8, 10, 12, 13, 35, 37, 39, 60, 106], "preced": [8, 10, 12, 13, 35, 37, 39, 57, 60], "e": [8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 49, 54, 70, 84, 114, 117, 118, 143, 284], "g": [8, 10, 84], "an": [8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 33, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 63, 68, 72, 74, 76, 77, 84, 96, 97, 98, 101, 104, 106, 109, 110, 111, 118, 121, 133, 135, 136, 137, 138, 139, 143, 148, 151, 152, 155, 157, 158, 162, 168, 170, 174, 175, 177, 277, 284, 285], "atla": [8, 10, 134, 135, 136, 137, 138, 139, 140, 141, 142, 278, 281, 283, 284], "voxel": [8, 10, 133, 134, 135, 143], "d": [8, 10, 37, 57, 72, 73, 74, 75, 76, 77, 81, 101, 104, 108, 109, 110, 111, 133, 152, 285], "embed": [8, 10, 101, 104], "space": [8, 10, 74, 101, 104, 133, 135, 143, 284], "project": [8, 43, 70, 71, 72, 74, 77, 162, 171, 174, 277, 284], "onto": [8, 43, 70, 162, 169, 171, 174], "sphere": [8, 10, 100, 101, 102, 103, 104, 105, 171, 276, 281, 284], "ref": [9, 135, 136, 138, 139, 140, 141, 142], "point": [9, 10, 33, 43, 44, 72, 74, 77, 101, 102, 103, 104, 105, 135, 136, 137, 138, 139, 140, 141, 142, 155, 156, 164, 280, 281, 284], "explicit": [9, 60, 106], "see": [9, 26, 29, 30, 68, 100, 104, 114, 117, 133, 137, 145, 146, 147, 152, 153, 175, 273], "norm": [10, 47, 52, 74, 89, 101, 155, 158, 171, 280, 281], "floor": 10, "0": [10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 46, 48, 53, 55, 59, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 84, 85, 97, 98, 109, 110, 111, 115, 125, 128, 129, 130, 131, 140, 143, 149, 151, 152, 155, 158, 159, 162, 169, 171, 174, 177, 284], "compact": [10, 280, 281], "score": [10, 284], "mathbf": [10, 36, 39, 62, 81], "interc": [10, 15, 16, 35, 36, 39, 47, 49, 51, 52, 53, 54, 55, 60, 91, 92, 106, 108, 109, 111], "circ": [10, 39], "c": [10, 17, 18, 21, 22, 23, 35, 39, 60, 67, 68, 101, 104, 106, 113, 114, 116, 117, 118, 126], "ac": 10, "right": [10, 31, 32, 38, 39, 60, 62, 63, 75, 76, 81, 91, 98, 106, 133, 135, 136, 138, 143, 170], "col": [10, 88], "type": [10, 33, 38, 39, 84, 86, 97, 98, 101, 106, 135, 136, 138, 139, 140, 141, 142, 155, 158, 177, 284], "distanc": [10, 45, 50, 101, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 175, 280, 281, 284], "closer": [10, 68], "assign": [10, 35, 38, 39, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 177, 284], "measur": [10, 14, 21, 22, 25, 34, 106, 114, 117, 280, 281, 284], "about": 10, "base": [11, 43, 68, 133, 135, 136, 137, 139, 143, 145, 146, 147, 148, 149, 150, 151, 241, 277, 278, 280, 281, 283, 284], "brainspac": [11, 12], "laplacian_eigenmap": [11, 12, 276], "diffusion_map": [11, 13, 276], "connectopi": [12, 13, 276, 280, 281], "k": [12, 13, 33, 35, 37, 39, 47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 113, 114, 116, 117, 118, 276], "10": [12, 13, 74, 284], "alpha": [12, 277, 285], "5": [12, 155, 284], "diffusion_tim": 12, "manifold": [12, 13, 71, 74, 101, 276, 281, 284], "estim": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 74, 177, 284], "adapt": 12, "veri": [12, 44, 72, 74, 76, 77, 109, 110, 111], "some": [12, 14, 33, 70, 72, 77, 104, 114, 117, 143, 163, 165, 171, 176, 284], "minor": 12, "spars": [12, 13, 37, 46, 47, 48, 49, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 276, 281], "current": [12, 13, 33, 44, 71, 86, 101, 114, 117, 133, 143, 151, 172, 177, 277, 279, 284], "unsupport": [12, 13, 143], "becaus": [12, 13, 41, 43, 105, 135, 136, 137, 138, 139, 140, 141, 142, 155, 175, 277, 285], "implement": [12, 13, 33, 44, 64, 71, 91, 92, 100, 104, 108, 111, 115, 133, 135, 143, 148, 155, 156, 157, 170, 172, 284], "extrem": [12, 13, 175], "solver": [12, 13], "doe": [12, 13, 64, 106, 162, 174], "yet": [12, 13, 284], "exist": [12, 13, 119, 132, 133, 134, 139, 143, 284], "jax": [12, 13, 26, 29, 30, 33, 68, 70, 86, 91, 108, 110, 111, 115, 121, 152, 153, 177, 277, 284], "For": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 36, 37, 38, 47, 49, 51, 52, 53, 54, 55, 57, 72, 74, 76, 77, 81, 107, 109, 110, 111, 114, 117, 121, 133, 138, 139, 143, 155, 157, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 279, 284], "generalis": [12, 13, 277, 280, 281], "connectop": [12, 13, 78, 276, 281], "instead": [12, 13, 15, 16, 21, 22, 23, 33, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 70, 75, 76, 89, 97, 117, 141, 142, 143, 148, 155, 157, 158, 170, 277], "onc": [12, 13, 114, 117, 118], "we": [12, 13, 15, 16, 68, 70, 105, 133, 162, 174, 277, 284, 285], "vjp": [12, 13], "rule": [12, 13, 31, 32], "elementari": [12, 13, 276], "anywai": [12, 13], "anisotrop": 12, "kind": 12, "produc": [12, 57, 60, 97, 118, 148, 152], "algorithm": [12, 74, 177, 284], "eigenmap": [12, 13], "random": [12, 72, 74, 76, 77, 83, 109, 110, 111, 133, 138, 139, 148, 152, 153, 155, 177, 276, 281, 284], "walk": 12, "style": 12, "fokker": 12, "planck": 12, "laplac": [12, 278, 281], "beltrami": 12, "vertic": [12, 13, 35, 36, 37, 38, 39, 126, 133, 136, 138, 177], "edg": [12, 13, 35, 36, 37, 38, 39, 177, 277], "should": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 37, 38, 39, 41, 43, 46, 47, 48, 49, 51, 53, 54, 55, 62, 65, 66, 67, 69, 70, 72, 74, 76, 77, 87, 97, 106, 109, 110, 111, 113, 114, 116, 117, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 155, 158, 165, 177, 277], "edge_index": [12, 13, 37], "q": [12, 13, 39], "adjac": [12, 13, 33, 36, 37, 38, 39, 277], "affin": [12, 13, 161], "multi": [12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 121, 143], "consid": [12, 38, 39, 41, 43, 72, 74, 76, 77, 109, 110, 111, 175], "valid": [12, 143, 277, 284], "etc": 12, "true": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 39, 41, 42, 43, 44, 52, 70, 72, 74, 75, 76, 77, 79, 84, 93, 97, 98, 106, 109, 110, 111, 126, 132, 135, 136, 137, 138, 139, 140, 141, 142, 155, 157, 177], "otherwis": [13, 37, 41, 44, 60, 67, 97, 106, 132], "list": [13, 37, 101, 113, 155, 156, 157], "degre": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 37, 38, 39, 53, 114, 116, 117, 118], "deriv": [14, 25, 277], "connect": [14, 35, 36, 38, 39, 177, 277, 284], "statist": 14, "relationship": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70], "between": [14, 15, 16, 19, 20, 21, 22, 33, 35, 36, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 60, 64, 74, 88, 90, 101, 105, 106, 155, 163, 165, 169, 175, 176, 284], "localis": 14, "seri": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 114, 117, 118, 133, 152, 276, 280, 281, 284], "signal": [14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 152, 155, 158, 277], "It": [14, 15, 16, 19, 20, 21, 22, 39, 43, 44, 70, 72, 74, 77, 91, 101, 118, 121, 140, 143, 155, 157, 170, 171, 277], "typic": [14, 101, 107, 143, 277], "operationalis": [14, 101], "most": [14, 175, 277], "often": [14, 41, 43, 106, 143, 170, 277], "corr": [14, 18, 21, 276], "partialcov": [14, 16, 21, 23, 276], "partial": [14, 17, 18, 23, 113, 276, 284], "partialcorr": [14, 15, 17, 18, 22, 23, 276], "pairedcov": [14, 18, 48, 276], "pairedcorr": [14, 20, 46, 276], "conditionalcov": [14, 15, 20, 22, 276], "conditionalcorr": [14, 16, 17, 21, 276, 284], "precis": [14, 18, 22, 276], "cov": [15, 16, 17, 19, 20, 21, 22, 23, 276, 281, 283, 284], "y": [15, 16, 19, 20, 70, 102, 103, 105], "require_nonsingular": [15, 16, 21, 22, 23, 75, 76], "param": [15, 16, 17, 19, 21, 22, 23, 31, 32, 38, 39, 114, 117, 118, 134], "variabl": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 113, 114, 116, 117, 118], "one": [15, 16, 62, 84, 89, 97, 98, 121, 133, 158, 177, 284], "anoth": [15, 16, 92, 133, 135, 136, 137, 138, 139, 140, 141, 142], "sigma_": [15, 16], "xx": [15, 16], "yy": [15, 16], "xy": [15, 16], "schur": [15, 16], "complement": [15, 16, 33], "equival": [15, 16, 35, 39, 60, 106, 114, 117, 118, 279], "after": [15, 16, 33, 63, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143], "residualis": [15, 16, 276, 281, 283, 284], "them": [15, 16, 41, 42, 43, 44, 164, 166], "respect": [15, 16, 33, 70], "plu": [15, 16, 69, 152], "intercept": [15, 16, 113, 114, 116, 117], "term": [15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 49, 54, 60, 70, 106, 113, 114, 116, 117], "interpret": [15, 16, 21, 22, 49, 54, 143, 155, 158], "interest": [15, 16, 36, 38, 39, 285], "control": [15, 16, 41, 43], "effect": [15, 16, 19, 20, 32, 33, 37, 67], "confound": [15, 16, 284], "nuisanc": [15, 16], "obtain": [15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 84, 97, 98, 101], "via": [15, 17, 19, 21, 22, 27, 29, 30, 31, 32, 63, 70, 72, 74, 77, 106, 114, 117], "given": [15, 17, 19, 35, 37, 38, 39, 43, 68, 72, 77, 113, 153], "hat": [15, 17, 19], "sigma": [15, 16, 17, 18, 19, 20, 22, 49, 54, 134, 135, 136, 137, 138, 139, 140, 141, 142], "mathbb": [15, 17, 19, 35, 36, 39, 89], "r": [15, 17, 19, 21, 35, 36, 39, 53, 55, 60, 67, 68, 89, 103, 104, 105, 106, 114, 117, 118, 155, 158], "r_": [15, 17, 19], "c_x": [15, 16, 19, 20, 70], "ob": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 113, 114, 116, 117, 118], "size": [15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 67, 70, 72, 73, 74, 75, 76, 77, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 128, 129, 130, 131, 143, 169, 177], "data": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 67, 70, 78, 80, 85, 86, 89, 100, 101, 104, 106, 112, 113, 114, 116, 117, 118, 135, 136, 137, 138, 139, 140, 141, 142, 143, 175, 277, 281, 284], "channel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 67, 70, 84, 97, 98, 101, 104, 106, 113, 114, 116, 117, 118, 284], "observ": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 70, 101, 104, 113, 114, 116, 117, 118, 175], "per": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 101, 104, 113, 114, 116, 117, 118], "c_y": [15, 16, 19, 20, 70], "sampl": [15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 72, 74, 76, 77, 97, 109, 110, 111, 128, 129, 130, 131, 132, 133, 137, 138, 139, 143, 150, 152, 153, 155, 158], "multivari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32], "influenc": [15, 16], "wish": [15, 16, 72, 74, 76, 77, 109, 110, 111], "remov": [15, 16, 70, 106, 126], "penultim": [15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 114, 117], "gener": [15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 72, 74, 76, 77, 83, 88, 97, 106, 108, 109, 110, 111, 133, 137, 148, 152, 153, 162, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 284], "limit": [15, 16, 60], "must": [15, 16, 17, 18, 19, 20, 21, 22, 23, 43, 57, 67, 75, 76, 80, 84, 98, 106, 113, 123, 135, 141, 142, 148, 155], "nonsingular": [15, 16, 21, 22, 23, 75, 76], "moor": [15, 16, 21, 22, 23, 57, 75, 76], "penros": [15, 16, 21, 22, 23, 57, 75, 76], "pseudoinvers": [15, 16, 21, 22, 23, 57, 75, 76], "rowvar": [15, 16, 17, 18, 19, 20, 21, 22, 23, 70], "transpos": [15, 16, 17, 18, 19, 20, 21, 22, 23, 60, 66, 70, 106], "bia": [15, 16, 17, 18, 19, 20, 21, 22, 23, 106, 114, 115, 117, 118], "bias": [15, 16, 17, 18, 19, 20, 21, 22, 23, 106], "unweight": [15, 16, 17, 18, 19, 20, 21, 22, 23], "case": [15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 38, 39, 57, 67, 70, 72, 74, 76, 77, 78, 84, 98, 109, 110, 111, 133, 151, 177, 277], "perform": [15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 84, 91, 97, 98, 101, 114, 117, 118, 143, 171], "By": [15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 39, 44, 65, 66, 69, 135, 136, 138, 140, 141, 142, 152, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 284], "unbias": [15, 16, 17, 18, 19, 20, 21, 22, 23, 133], "ddof": [15, 16, 17, 18, 19, 20, 21, 22, 23], "freedom": [15, 16, 17, 18, 19, 20, 21, 22, 23], "overrid": [15, 16, 17, 18, 19, 20, 21, 22, 23], "automat": [15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 53, 54, 55, 97, 117, 118, 136, 143, 148, 277, 279, 284], "import": [15, 16, 17, 18, 19, 20, 21, 22, 23, 284], "coupl": [15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 60, 106], "semidefinit": [15, 16, 17, 18, 19, 20, 21, 22, 23, 57, 60, 62, 63, 72, 73, 74, 75, 76, 77, 106, 107, 110, 171, 276, 278, 281, 283, 284], "In": [15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 44, 67, 72, 74, 76, 77, 101, 106, 109, 110, 111, 133, 155, 157, 175, 177, 277, 285], "again": [15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 63], "rel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 155, 158, 174, 175], "off": [15, 16, 17, 18, 19, 20, 21, 22, 23, 67], "band": [15, 16, 17, 18, 19, 20, 21, 22, 23, 67, 155, 158, 278, 281, 284], "inter": [15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 280, 281, 284], "tempor": [15, 16, 17, 18, 19, 20, 21, 22, 23, 284], "l2": [15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 48, 50, 52, 70, 100, 101, 284], "nonneg": [15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 39, 74, 110, 162, 168, 174], "add": [15, 16, 17, 18, 19, 20, 21, 22, 23], "likelihood": [15, 16, 17, 18, 19, 20, 21, 22, 23], "intermedi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 97], "empir": [15, 16, 17, 18, 19, 20, 22, 23, 284], "unnormalis": 15, "two": [19, 20, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 65, 90, 98, 101, 105, 114, 117, 147, 151, 156, 177, 284], "includ": [19, 20, 44, 65, 69, 97, 101, 104, 113, 114, 116, 117, 133, 135, 143, 155, 177, 277, 284], "conform": [19, 20, 64, 67, 113, 124], "direct": [21, 22, 37, 39, 44, 47, 49, 51, 52, 53, 54, 55, 279], "effici": [21, 27, 29, 30, 82, 104], "success": 21, "accompani": 21, "negat": [21, 22, 163, 176], "singular": [23, 62, 63, 109, 111], "less": [23, 41, 43, 74, 82, 110], "ensur": [23, 62, 63, 72, 74, 76, 77, 84, 98, 105, 109, 110, 111, 277, 279], "done": 23, "altern": [23, 284], "omega": [23, 35, 39, 53, 72, 77], "product_filt": [24, 32, 276], "product_filtfilt": [24, 31, 276], "unwrap": [24, 26, 29, 30, 276], "analytic_sign": [24, 26, 27, 28, 29, 30, 276], "hilbert_transform": [24, 25, 26, 27, 29, 30, 276], "envelop": [24, 25, 26, 28, 29, 30, 276], "instantaneous_phas": [24, 25, 26, 27, 28, 29, 276], "instantaneous_frequ": [24, 25, 26, 27, 28, 30, 276], "env_inst": [24, 25, 27, 28, 29, 30, 276], "fourier": [25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 43, 276, 281, 284], "analyt": [25, 26, 27, 29, 30, 277], "helic": 25, "represent": [25, 46, 47, 48, 49, 50, 51, 53, 54, 55, 135, 143], "Its": [25, 143], "real": [25, 31, 32, 123, 169], "imaginari": 25, "part": [25, 135, 136, 138, 139, 140, 141, 142], "relat": [25, 277], "hilbert": [25, 28], "properti": [25, 37, 78], "quickli": 25, "instantan": [25, 26, 27, 29, 30], "frequenc": [25, 26, 27, 28, 29, 30, 31, 32, 41, 43, 155, 156, 157, 158, 276, 278, 281, 283, 284], "compon": [25, 26, 27, 28, 29, 30, 32, 120, 122, 277, 284], "f": [26, 29, 80, 85, 97, 155, 156, 157, 158, 284], "period": [26, 29, 30, 33, 41, 43], "6": [26, 29, 30, 33, 284], "283185307179586": [26, 29, 30, 33], "decompos": [26, 63, 122], "pi": [26, 29, 30, 33], "rang": [26, 29, 30, 33, 163, 165, 169, 175, 176, 284], "over": [26, 29, 30, 33, 43, 44, 73, 74, 75, 76, 80, 84, 97, 98, 108, 113, 114, 117, 118, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 171, 284], "wrap": [26, 29, 30, 33, 170], "numpi": [26, 29, 30, 33, 38, 39, 64, 101, 106, 177, 277, 284], "analytic_signal_sampling_frequ": [26, 29], "you": [27, 29, 30, 72, 74, 76, 77, 80, 101, 104, 109, 110, 111, 117, 175, 285], "requir": [27, 29, 30, 72, 74, 76, 77, 97, 104, 109, 110, 111, 113, 143, 168], "convolv": [31, 101, 104, 114, 117, 118, 135, 136, 137, 138, 139, 140, 141, 142, 143], "multipl": [31, 32, 81, 84, 87, 91, 92, 98, 141, 142, 143, 155, 177, 280, 281], "domain": [31, 32, 148, 154, 155, 157, 162, 163, 164, 165, 169, 171, 174, 175, 176, 276, 277, 281, 283, 284], "filter": [31, 43, 106, 152, 154, 155, 156, 157, 276, 278, 281, 283, 284], "guarante": [31, 60, 63, 72, 106, 177, 284], "even": [31, 155, 157], "when": [31, 39, 41, 43, 70, 74, 97, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 155, 157, 162, 174], "strictli": [31, 32, 35, 39, 82, 155], "lfloor": [31, 32], "rfloor": [31, 32], "analogu": [31, 32], "gain": [31, 32], "bin": [31, 32, 41, 43, 155, 156, 157], "spectrum": [31, 32, 43, 155, 157, 284], "low": [31, 32, 60, 88, 106, 155, 158], "high": [31, 32, 43, 155, 158, 277], "broadcast": [31, 32, 87, 123, 149, 152], "jnp": [31, 32, 155, 171, 284], "fft": [31, 32], "rfft": [31, 32], "irfft": [31, 32], "digit": 32, "revers": [32, 44], "copi": 32, "quadrat": [32, 47], "delai": [32, 155, 158], "could": [32, 37, 101, 105, 114, 117, 177, 284], "make": 32, "sens": [32, 155, 157], "simpli": 32, "depend": [32, 37, 97, 155, 158], "context": 32, "discont": 33, "larg": [33, 37, 38, 39, 67, 277, 284], "delta": [33, 152], "retain": 33, "new": [33, 74, 113, 116, 132, 133, 170, 177, 277, 284], "code": [33, 143, 277, 284], "contigu": 33, "greater": [33, 143], "discontinu": 33, "half": 33, "radian": [33, 122, 123], "achiev": 33, "ad": [33, 63, 70, 72, 74, 76, 77, 106, 109, 110, 111, 134, 152, 277], "appropri": [33, 70, 87, 113], "cast": 33, "exceed": 33, "continu": [33, 133, 135, 141, 142, 143], "smaller": [33, 38, 39, 63], "girvan_newman_nul": [34, 38, 39, 276], "modularity_matrix": [34, 276], "coaffili": [34, 39, 276], "commun": [34, 38, 39, 177, 276, 284], "relaxed_modular": [34, 38, 276], "graph_laplacian": [34, 276], "c_o": [35, 39, 114, 117, 118], "exclude_diag": [35, 39], "normalise_coaffili": [35, 39], "under": [35, 39, 143, 169, 170, 284], "structur": [35, 38, 39, 43, 67, 68], "affili": [35, 39], "node": [35, 36, 39, 106, 143, 177], "o": [35, 36, 38, 39], "sink": [35, 36, 38, 39], "coeffici": [35, 47, 53, 54, 55, 60, 106, 158], "h": [35, 39, 60, 106], "c_i": [35, 39], "total": [35, 36, 38, 39, 156, 157, 177], "propos": [35, 39], "partit": [35, 38, 39], "emit": [35, 36, 38, 39], "receiv": [35, 36, 38, 39, 285], "encod": [35, 39, 106, 133, 135, 143, 153], "uncertainti": [35, 39], "vertex": [35, 39, 133, 136, 138, 177, 281, 283], "jk": [35, 39], "probabl": [35, 39, 68, 86, 110, 143, 153, 162, 174, 284, 285], "j": [35, 39], "binari": [35, 39], "reflect": [35, 39, 148], "determinist": [35, 39, 177], "assum": [35, 39, 47, 49, 51, 52, 53, 54, 55, 126, 140], "equal": [35, 39, 65, 67, 78, 87, 114, 117, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 171], "l_": [35, 39, 133], "assort": [35, 39], "preferenti": [35, 39], "remain": [35, 39, 284], "disaffili": [35, 39], "self": [35, 39, 134, 280, 281, 284], "link": [35, 39, 285], "max": [35, 38, 39, 159, 163, 169, 175, 176], "girvan": [36, 38, 39], "newman": [36, 38, 39], "null": [36, 38, 39, 143], "model": [36, 38, 39, 134, 136, 138, 143, 148, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 279, 284], "expect": [36, 43, 175, 277], "cut": 36, "result": [36, 38, 39, 43, 57, 63, 70, 72, 81, 91, 97, 105, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 155, 157, 162, 174, 177], "stub": 36, "randomli": [36, 155, 177], "rewir": 36, "k_o": 36, "2m": [36, 38], "yield": 36, "p_": 36, "gn": 36, "quantiti": [36, 38, 39], "compris": [36, 38, 143, 284], "topk": [37, 78, 276], "bcoo": [37, 50, 51, 52, 79, 81, 82, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 276], "mani": [37, 38, 39, 78, 143, 171, 177, 277], "applic": [37, 78, 277, 284], "tend": 37, "domin": 37, "desir": [37, 38, 39, 143, 148, 163, 165, 169, 176, 279], "further": [37, 163, 165, 168, 169, 176, 277, 285], "analysi": [37, 284], "widetild": [37, 72, 74, 76, 77, 109, 110, 111], "undirect": 37, "duplic": 37, "index": [37, 78, 84, 91, 98], "swap": 37, "either": [37, 43, 44, 57, 64, 74, 126, 133, 143], "convent": [37, 47, 49, 51, 52, 53, 54, 55], "adopt": 37, "top": [37, 47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 276], "jaxlib": [38, 39, 101, 106, 177], "xla_extens": [38, 39, 101, 106, 177], "gamma": [38, 39, 47, 49, 53, 54, 55], "callabl": [38, 39, 44, 80, 85, 97, 101, 106, 110, 113, 114, 117, 118, 120, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177], "normalise_modular": [38, 39], "modular": [38, 39, 280, 281, 284], "suitabl": [38, 39, 72, 74, 76, 77, 109, 110, 111], "b": [38, 39, 91, 92], "resolut": [38, 39], "larger": [38, 39, 41, 43, 101, 175], "small": [38, 39, 72, 74, 76, 77, 109, 110, 111, 284], "mai": [38, 39, 70], "necessari": [38, 39, 72, 143], "where": [38, 39, 47, 49, 51, 53, 54, 55, 65, 69, 70, 72, 74, 76, 77, 78, 106, 109, 110, 111, 133, 134, 148, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 277, 284], "arg": [38, 39, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 153, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176], "relax": [39, 280, 281], "support": [39, 68, 99, 112, 277, 279, 284], "linkag": 39, "revert": 39, "standard": [39, 49, 82, 100, 126, 134, 155, 170, 284], "sum": [39, 63, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 159, 280, 281, 284], "hadamard": [39, 88], "method": [40, 41, 43, 63, 68, 72, 74, 76, 77, 104, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 152, 153, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 277, 284], "extrapol": 40, "unseen": [40, 41, 42, 44], "censor": [40, 284], "frame": [40, 41, 42, 43, 44, 114, 117, 284], "hybrid_interpol": [40, 276], "linear": [40, 51, 70, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 235, 276, 283], "spectral": [40, 43, 276], "linear_interpol": [40, 276], "weighted_interpol": [40, 276], "spectral_interpol": [40, 276], "mask": [41, 42, 43, 44, 121, 124, 125, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 278], "max_consecutive_linear": 41, "oversampling_frequ": [41, 43], "8": [41, 43, 284], "maximum_frequ": [41, 43], "sampling_period": [41, 43], "frequency_thresh": [41, 43], "hybrid": 41, "approach": [41, 43, 60, 106, 108, 111, 177, 277], "awai": [41, 135, 136, 140, 141, 142], "seen": [41, 44, 114, 117], "imput": [41, 42, 43, 44, 165, 276, 281], "proce": [41, 44, 101, 135], "group": [41, 104, 119], "boolean": [41, 42, 43, 44, 84, 98, 135, 136, 138, 139, 140, 141, 142, 143, 155, 156], "whether": [41, 42, 43, 44, 66, 70, 114, 117, 132], "good": [41, 42, 43, 44], "thei": [41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 63, 119, 284], "bad": [41, 42, 43, 44], "miss": [41, 42, 43, 44, 86], "flag": [41, 42, 43, 44, 135, 136, 137, 138, 139, 140, 141, 142], "consecut": [41, 43], "cannot": [41, 155], "sine": [41, 43], "cosin": [41, 43, 47], "spectra": [41, 43, 155], "oversampl": [41, 43], "fit": [41, 43, 70, 89], "fraction": [41, 43], "nyquist": [41, 43, 155, 158], "orthogon": [41, 43, 70, 172], "basi": [41, 43, 106, 113, 114, 116, 117], "spuriou": [41, 43], "varianc": [41, 43, 70, 114, 117, 152, 175], "captur": [41, 43, 284], "dataset": [41, 42, 43, 44, 101, 113, 114, 116, 117, 118, 175, 277], "proxim": 42, "nearest": [42, 44, 284], "neighbour": [42, 44], "interpol": [43, 44, 276, 281, 283, 284], "corrupt": 43, "proxi": 43, "reconstruct": [43, 63, 177], "user": [43, 133, 135, 143], "advis": [43, 70, 143], "accordingli": 43, "might": [43, 72, 74, 76, 77, 101, 104, 106, 109, 110, 111, 133, 148, 163, 165, 169, 176, 277], "share": [43, 60, 78], "inspir": 43, "previou": [43, 74], "work": [43, 74, 101, 102, 103, 104, 105, 106, 121, 171, 175, 285], "anish": 43, "mitra": 43, "jonathan": 43, "power": [43, 116, 117, 277], "turn": 43, "lomb": 43, "scargl": 43, "periodogram": 43, "temporarili": 43, "omiss": 43, "due": [43, 72, 74, 76, 77, 109, 110, 111], "artefact": [43, 284], "content": [43, 143], "reduc": [43, 52, 80, 91, 97, 133], "disrupt": 43, "autocorrel": 43, "introduc": [43, 277], "artefactu": 43, "outlier": [43, 175], "arguabl": 43, "linearli": 43, "convolut": [43, 44, 100, 106, 114, 115, 117, 118, 134, 152, 276, 281, 284], "relev": [43, 134], "plai": 43, "role": 43, "easili": 43, "tmask": 43, "your": [43, 89, 117, 279], "unsqueez": 43, "start_stag": 44, "max_stag": 44, "auto": [44, 174], "stage": [44, 277], "map_to_kernel": 44, "averag": [44, 60, 66, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142], "progress": 44, "longer": 44, "window": [44, 114, 117, 118, 128, 129, 130, 131, 132, 276, 281], "kernel": [44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 100, 101, 104, 106, 114, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 276, 281, 284], "mark": [44, 143], "next": [44, 63, 177, 284], "until": [44, 67], "everi": [44, 89, 101, 105, 135, 136, 137, 138, 139, 140, 141, 142, 171], "practic": [44, 155, 157], "ineffici": 44, "mean": [44, 72, 73, 74, 75, 76, 77, 84, 98, 155, 280, 281, 284, 285], "govern": 44, "initi": [44, 60, 106, 117, 118, 284], "boxcar": 44, "forward": [44, 71, 106, 162, 165, 170, 174, 284], "integ": [44, 84, 98, 133, 143], "creat": [44, 67, 106, 113, 116, 117, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 170, 284], "metric": [45, 100, 101, 106, 284], "linear_kernel": [45, 276], "param_norm": [45, 276], "linear_dist": [45, 276], "polynomial_kernel": [45, 276], "sigmoid_kernel": [45, 276], "gaussian_kernel": [45, 54, 276], "rbf_kernel": [45, 49, 276], "cosine_kernel": [45, 276], "cov_kernel": [45, 276], "corr_kernel": [45, 276], "x0": [46, 47, 48, 49, 50, 51, 53, 54, 55], "x1": [46, 47, 48, 49, 50, 51, 53, 54, 55], "theta": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 72, 77], "parameteris": [46, 47, 48, 49, 51, 52, 53, 54, 55, 148, 276, 277, 280, 281], "thin": [46, 48, 150], "wrapper": [46, 48, 80, 85, 91, 150], "featur": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "dens": [46, 47, 48, 49, 51, 53, 54, 55, 106], "m": [46, 47, 48, 49, 51, 53, 54, 55, 86, 89, 279], "unparameteris": [46, 47, 48, 49, 50, 51, 53, 54, 55], "gram": [46, 47, 48, 49, 51, 53, 54, 55, 280, 281], "x_0": [47, 49, 51, 53, 54, 55], "x_1": [47, 49, 51, 53, 54, 55], "k_": [47, 49, 51, 53, 54, 55], "a_i": 47, "form": [47, 52, 64, 65, 69, 72, 77, 87, 89, 123, 133], "here": [47, 49, 51, 52, 53, 54, 55, 67, 68, 71, 104, 139, 162, 174, 284], "frequent": [47, 49, 51, 52, 53, 54, 55, 135], "literatur": [47, 49, 51, 52, 53, 54, 55], "howev": [47, 49, 51, 52, 53, 54, 55, 72, 165, 285], "benefit": [47, 49, 51, 52, 53, 54, 55], "format": [47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 85, 87, 91, 92, 93, 96, 97, 98, 102, 103, 105, 276], "gaussian": [49, 100, 104, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152], "deviat": [49, 126, 134, 155], "pairwis": [49, 54, 90, 101, 105, 284], "rather": [49, 54, 143, 170, 284], "euclidean": [50, 73, 74, 75, 76, 101, 105, 135, 136, 137, 138, 139, 140, 141, 142, 143, 171], "mahalanobi": [50, 171], "intermediate_indic": 51, "x_i": [52, 62], "polynomi": [53, 114, 116, 117, 118], "offset": [53, 55, 59, 61, 65, 69], "rbf": 54, "sigmoid": 55, "special": 56, "cholesky_invert": [56, 276], "spd": [56, 110, 276], "expand_out": [56, 276], "recondition_eigenspac": [56, 276], "delete_diagon": [56, 276], "diag_emb": [56, 276], "fill_diagon": [56, 276], "toeplitz_2d": [56, 276], "toeplitz": [56, 68, 276, 278, 281], "sym2vec": [56, 276], "vec2sym": [56, 276], "squareform": [56, 276], "invert": 57, "choleski": 57, "decomposit": [57, 62, 63, 72, 74, 76, 77, 109, 110, 111, 172], "rais": [57, 116, 117], "linalgerror": 57, "ainv": 57, "delet": 58, "infer": [58, 61, 143], "v": 59, "emb": 59, "symmetri": [60, 66, 106, 126], "cross": [60, 105, 106], "skew": [60, 66, 106], "multipli": [60, 126, 128, 129, 130, 131, 132], "rank": [60, 88, 106], "inner": [60, 87], "height": [60, 106], "expand": [60, 106, 113, 116, 277, 285], "width": [60, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 159], "expans": [60, 106], "modul": [60, 106, 133, 144, 148, 160, 276, 277, 281, 284], "toggl": [60, 106], "neg": [60, 63, 106, 111], "constraint": [60, 106, 280, 281], "impos": [60, 63, 66, 106], "templat": [60, 106, 137, 138], "subtract": [60, 106], "fill": [61, 67, 68], "select": [61, 84, 93, 97, 98, 135, 136, 137, 138, 139, 140, 141, 142, 177, 277, 280, 281], "psi": [62, 72, 74, 76, 77, 109, 110, 111, 284], "xi": [62, 72, 74, 76, 77, 109, 110, 111], "kei": [62, 72, 74, 76, 77, 83, 109, 110, 111, 128, 129, 130, 131, 133, 134, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 177, 284], "recondit": [62, 72, 74, 76, 77, 109, 110, 111, 284], "eigenspac": [62, 72, 74, 76, 77, 109, 110, 111], "help": [62, 177], "stabilis": 62, "modifi": [62, 63], "sim": 62, "uniform": 62, "foral": 62, "nonzero": [62, 78, 84, 97, 98], "nondegener": [62, 89], "ep": [63, 74], "1e": [63, 74, 162, 174, 284], "06": [63, 74], "eig": 63, "svd": [63, 72, 74, 76, 77, 109, 110, 111], "made": [63, 151, 284], "symmetris": [63, 66, 69, 106], "diagonalis": [63, 108, 109, 111], "identifi": [63, 133], "threshold": [63, 74, 84, 97, 98], "theori": 63, "up": [63, 116], "thu": [63, 74, 89, 97, 133, 155, 157, 163, 169, 171, 176], "error": [63, 72, 74, 76, 77, 106, 109, 110, 111, 280, 281], "minimum": [63, 162, 163, 165, 169, 174, 176], "possibl": [63, 80, 104, 114, 117, 170], "unus": 63, "recomposit": 63, "treat": 63, "though": 63, "were": [63, 277], "therebi": [63, 284], "least": [63, 70, 177], "margin": 63, "occasion": 63, "insuffici": 63, "avoid": 63, "numer": [63, 71, 72, 74, 76, 77, 109, 110, 111, 135, 136, 138, 139, 140, 141, 142], "convert": [64, 65, 69, 79, 87, 96, 97, 102, 103, 284], "unlik": 64, "matlab": 64, "verifi": [64, 70], "vectoris": 64, "sym": [65, 69], "ravel": [65, 69], "upper": [65, 69], "triangl": [65, 69], "main": [65, 69, 133, 279], "begin": [65, 69, 177, 277], "vec": [65, 69, 72, 77], "delin": 66, "antisymmetri": 66, "fill_valu": [67, 68, 125], "element": [67, 69, 72, 74, 76, 77, 78, 84, 97, 98, 109, 110, 111, 126, 153, 155, 284], "match": [67, 87, 155, 159, 284], "scipi": [67, 68, 108, 110, 155, 158], "check": 67, "event": 67, "ignor": [67, 126], "opposit": 67, "propag": [67, 177], "unless": [67, 72, 276], "dim": [67, 284], "concaten": 67, "stack": [67, 106, 126, 128, 129, 130, 131, 277], "unspecifi": 67, "extend": [67, 165], "construct": [68, 135, 136, 138, 139, 140, 141, 142, 284], "2d": 68, "post": [68, 285], "mattjj": 68, "evalu": [68, 101, 113, 114, 117, 277, 281], "blakehechtman": 68, "http": [68, 104, 115, 279], "github": [68, 279, 285], "com": [68, 115, 279], "googl": [68, 115], "issu": 68, "1646": 68, "issuecom": 68, "1139044324": 68, "appar": 68, "underperform": 68, "tpu": 68, "But": 68, "big": 68, "deal": 68, "our": [68, 273, 277, 284, 285], "flexibl": [68, 133, 151], "admit": [68, 148, 165], "without": [68, 143, 284], "circul": 68, "api": [68, 86, 115, 277, 284], "complet": [68, 101, 104, 135, 136, 138, 140, 141, 142], "document": [68, 114, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 158, 277, 285], "lead": [68, 78], "length": [69, 155], "choos": [69, 277], "place": [69, 152], "resid": [70, 135, 136, 138, 139, 140, 141, 142, 284], "return_mod": 70, "residu": 70, "ordinari": 70, "torch": [70, 114, 115, 117, 153, 160, 279], "found": [70, 285], "wa": [70, 135, 136, 138, 139, 140, 141, 142], "incorrect": [70, 284], "reason": 70, "clear": [70, 135, 136, 140, 141, 142], "linalg": [70, 108, 110, 111, 171], "lstsq": 70, "although": [70, 105, 110, 143], "correct": 70, "pinv": 70, "caution": 70, "orthogonalis": 70, "subspac": [70, 71, 72, 77, 284], "explanatori": 70, "explain": 70, "solut": [70, 177], "penalti": [70, 280, 281], "cost": 70, "proper": [71, 171], "riemann": 71, "nearli": [71, 175], "exhibit": 71, "instabl": 71, "tangent_project_spd": [71, 72, 276], "cone_project_spd": [71, 77, 276], "mean_euc_spd": [71, 276], "mean_harm_spd": [71, 276], "mean_logeuc_spd": [71, 276], "mean_geom_spd": [71, 276], "convexcombin": [72, 74, 76, 77, 109, 110, 111], "fill_nan": [72, 74, 76, 77, 109, 110, 111], "truncate_eigenvalu": [72, 74, 76, 77, 109, 110, 111], "cone": [72, 73, 74, 76, 77, 276, 281, 284], "tangenc": [72, 74, 77, 284], "exp": [72, 76, 108], "exponenti": [72, 76, 106, 107, 108, 159], "well": [72, 78, 174, 277], "occur": [72, 74, 76, 77, 109, 110, 111], "promot": [72, 74, 76, 77, 109, 110, 111, 284], "pseudo": [72, 74, 76, 77, 109, 110, 111, 152, 153], "nois": [72, 74, 76, 77, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152], "independ": [72, 74, 76, 77, 109, 110, 111], "uniformli": [72, 74, 76, 77, 109, 110, 111], "degener": [72, 74, 76, 77, 109, 110, 111], "repeat": [72, 74, 76, 77, 109, 110, 111], "nondegeneraci": [72, 74, 76, 77, 109, 110, 111], "truncat": [72, 74, 76, 77, 100, 101, 104, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 163, 165, 169, 176], "do": [72, 74, 76, 77, 86, 89, 109, 110, 111, 124, 133, 148, 155, 277], "wise": [73, 74, 76], "familiar": 73, "arithmet": [73, 74], "sum_": [73, 75, 76], "x_": [73, 75, 76], "log": [73, 74, 75, 76, 77, 109, 280, 281], "max_it": 74, "geometr": [74, 284], "descent": 74, "geodes": [74, 105, 284], "brief": 74, "initialis": [74, 134, 137, 138, 139, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 174, 177, 277, 281, 284], "back": 74, "now": [74, 101, 102, 103, 104, 119], "becom": 74, "termin": 74, "converg": 74, "frobeniu": 74, "been": 74, "attain": [74, 163, 165, 169, 176], "run": [74, 80, 101, 104, 177, 284], "harmon": 75, "logarithm": [76, 77, 107, 109, 162, 174], "util": [78, 120, 121, 122, 123, 124, 125, 160, 276, 277, 281, 284], "variou": [78, 155, 284], "One": [78, 106], "common": [78, 177, 284], "n_row": 78, "singleton": 78, "channel_dim": 78, "substitut": [78, 143], "batch_siz": 78, "spdiagmm": [78, 276], "dspdmm": [78, 276], "spspmm_full": [78, 276], "as_topk": [78, 276], "full_as_topk": [78, 276], "sparse_astyp": [78, 276], "trace_spspmm": [78, 276], "spspmm": [78, 89, 276], "spsp_pairdiff": [78, 276], "select_indic": [78, 97, 276], "topkx": [78, 276], "sp_block_serialis": [78, 276], "splr_hadamard": [78, 276], "spsp_innerpair": [78, 276], "topk_to_bcoo": [78, 276], "topk_diagzero": [78, 276], "diagreplac": [78, 276], "block_serialis": [78, 276], "descend": [79, 93], "n_block": [80, 85, 91], "retnum": [80, 85, 97], "in_ax": [80, 85], "out_ax": [80, 85], "carrier_fn": 80, "carry_init": 80, "return_carri": 80, "postprocess_fn": 80, "serialis": [80, 85, 91], "memori": [80, 91, 97, 101, 104, 135, 136, 137, 138, 139, 140, 141, 142], "footprint": 80, "call": [80, 87, 97, 134, 143], "keyword": [80, 143, 148], "write": [80, 277], "diag": 81, "full": [82, 92, 97, 155], "prngkei": [83, 128, 129, 130, 131, 134, 149, 150, 151, 152, 153, 155, 156, 157, 159, 177, 284], "threshold_typ": [84, 97, 98], "ab": [84, 97, 98], "top_k": [84, 98], "top_k_reduct": [84, 98], "fix_indices_over_channel_dim": [84, 97, 98], "prepar": 84, "sparsif": 84, "surviv": [84, 98], "jit": [84, 97, 98, 121, 177], "compil": [84, 97, 98, 177, 284], "fix": [84, 97, 98, 168, 171, 284], "allow": [84, 97, 98, 132, 164], "vari": [84, 97, 98], "sp_argnum": 85, "sp_retnum": 85, "sp_retshap": 85, "conveni": [85, 91, 118], "dtype": [86, 135, 136, 138, 139, 140, 141, 142], "unnecessari": 86, "wai": [86, 104, 106, 124, 277, 284], "lh": [87, 89, 90, 91, 92, 98], "rh": [87, 89, 90, 91, 92, 98], "lhs_diag": 87, "vmap": 87, "bilinear": 89, "signatur": [89, 113], "inform": [89, 177, 284], "rightarrow": [89, 126], "schema": 89, "bcoo_dot_gener": 91, "usag": [91, 97, 146, 152, 277], "addition": [91, 133, 143, 285], "pre": [91, 277, 284], "topktensor": [91, 98], "hand": [91, 98], "side": [91, 98], "split": [91, 284], "unstructur": [96, 133], "auto_index": 97, "step": [97, 106, 135, 148, 284], "trace": 98, "system": [99, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 284], "spherical_geodes": [99, 101, 276], "sphere_to_norm": [99, 276], "sphere_to_latlong": [99, 276], "spatial_conv": [99, 100, 104, 276], "spherical_conv": [99, 276], "euclidean_conv": [99, 276], "max_bin": [100, 101, 104, 135, 136, 137, 138, 139, 140, 141, 142], "10000": [100, 101, 104, 135, 136, 137, 138, 139, 140, 141, 142], "spatial": [100, 101, 104, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 280, 281], "kernel_gaussian": 101, "associ": [101, 104, 143], "load": [101, 133, 135, 136, 138, 140, 141, 142, 143, 284], "shorter": 101, "n_i": 101, "spheric": [101, 102, 103, 105, 135, 136, 137, 138, 139, 140, 141, 142, 143, 276, 281, 284], "great": [101, 105], "circl": [101, 105], "try": [101, 104], "decreas": [101, 104], "data_conv": [101, 104], "normal": [102, 103, 105, 148, 155], "latitud": [102, 103, 105], "longitud": [102, 103, 105], "z": [102, 103], "centr": [102, 103, 152, 171, 276, 281], "pretti": 104, "much": [104, 175], "dumbest": 104, "like": [104, 106, 115, 133, 143, 171, 277, 284, 285], "lie": 104, "thing": 104, "openreview": 104, "net": 104, "pdf": 104, "id": 104, "hkbd5xzrb": 104, "haversin": 105, "pleas": [105, 273], "express": [105, 143, 152], "n_x": 105, "n_y": 105, "surfac": [105, 133, 136, 138, 139, 143, 284], "just": 105, "get": [105, 143], "don": 105, "t": [105, 149, 284], "dist": 105, "brainnetcnn": 106, "equip": 106, "induct": 106, "favour": 106, "learn": [106, 114, 117, 277], "unord": 106, "design": [106, 133, 143, 277, 284], "analogi": 106, "There": [106, 124], "still": [106, 143, 277], "lot": 106, "quirk": 106, "usabl": 106, "crosshair_similar": 106, "remove_diagon": [106, 126], "local": [106, 277], "bank": 106, "summari": 106, "c_": 106, "precursor": 106, "nonsquar": 106, "bipartit": [106, 177], "count": 106, "doubl": [106, 159], "attribut": [106, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 148, 152, 158, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "subject": 106, "parametris": [106, 153], "symexp": [107, 276], "symlog": [107, 276], "symsqrt": [107, 276], "symmap": [108, 109, 111, 276, 281], "q_x": [108, 109, 111], "lambda_x": [108, 109, 111], "recompos": [108, 109, 111], "principl": [108, 111, 277, 284], "faster": [108, 110, 111], "robust": [108, 111, 133], "expm": 108, "stabl": [108, 110], "recommend": [108, 279], "infeas": [109, 111], "guard": [109, 110, 111], "against": [109, 110, 111], "funm": 110, "hermitian": 110, "reli": 110, "round": [110, 111], "sqrtm": 111, "conv": [112, 276], "tsconv2d": [112, 117, 276], "basischan": [112, 276], "basisconv2d": [112, 266, 276], "polychan": [112, 276], "polyconv2d": [112, 266, 276], "tsconv": [113, 114, 115, 116, 117, 118, 276, 281], "basis_funct": [113, 114], "include_const": [113, 114, 116, 117], "ith": [113, 114, 116, 117], "constitut": [113, 276], "constant": [113, 114, 116, 117, 145, 149], "pad": [114, 115, 117, 118], "conv_fn": [114, 117, 118], "view": [114, 117, 118, 285], "sequenti": [114, 117], "past": [114, 117], "futur": [114, 117, 151], "permit": [114, 117], "divers": [114, 117, 133], "consist": [114, 117, 139], "penalis": [114, 117], "spread": [114, 117], "conv2d": [114, 117], "stride": 115, "dilat": 115, "basic": [115, 277, 284], "pilfer": 115, "stackoverflow": 115, "question": [115, 277, 285], "69571976": 115, "grad": [115, 284], "zeroth": 116, "alreadi": [117, 143], "configur": [118, 152, 162, 174, 277, 284], "hideou": 119, "disorganis": 119, "hopefulli": 119, "somedai": 119, "disappear": 119, "altogeth": 119, "move": 119, "elsewher": 119, "sad": 119, "blemish": 119, "conform_mask": [119, 121, 276], "apply_mask": [119, 124, 276], "mask_tensor": [119, 121, 276], "complex_decompos": [119, 123, 276], "complex_recompos": [119, 122, 276], "amplitude_appli": [119, 276], "func": 120, "decor": 120, "msk": 121, "strongli": 121, "discourag": 121, "incompat": [121, 177], "ampl": [122, 123], "store": [123, 133, 140, 141, 142], "almost": 124, "certainli": [124, 277], "better": [124, 143], "sylo": [126, 276, 278, 281, 283], "row_compressor": 126, "col_compressor": 126, "renormalis": [126, 160, 278], "fold_channel": 126, "compress": [126, 177, 281, 283], "h_": 126, "w_": 126, "compressor": 126, "sample_window": [127, 276], "sample_nonoverlapping_windows_existing_ax": [127, 276], "sample_nonoverlapping_windows_new_ax": [127, 276], "sample_overlapping_windows_new_ax": [127, 276], "sample_overlapping_windows_existing_ax": [127, 276], "window_s": [128, 129, 130, 131], "num_window": [128, 129, 130, 131], "windowing_axi": [128, 129, 130, 131], "multiplying_axi": [128, 129, 130, 131, 132], "allow_overlap": 132, "create_new_axi": 132, "overlap": [132, 133, 140, 141, 142, 143], "insert": 132, "tool": [133, 154, 158, 277, 284], "brain": [133, 136, 138, 284], "atlas": [133, 137, 140, 141, 142, 143, 284], "neuroimag": [133, 277, 284], "princip": [133, 277], "distribut": [133, 137, 138, 139, 143, 146, 150, 152, 153, 155, 284], "volumetr": [133, 136, 138, 139, 143, 284], "discret": [133, 135, 140, 143, 284], "hard": 133, "label": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "parcel": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 284], "leverag": 133, "prior": [133, 143], "knowledg": [133, 284], "class": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 152, 153, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 241, 280, 281, 283, 284], "atlasinit": 133, "object": [133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 150, 156, 157, 162, 163, 165, 169, 171, 174, 176, 177], "subclass": [133, 134, 148, 170], "abstract": [133, 137, 278], "baseatla": [133, 134, 137, 278], "incorpor": [133, 284], "mixin": [133, 135, 173, 278, 281], "These": [133, 143, 155, 177, 284], "pointer": [133, 135, 136, 138, 139, 140, 141, 142], "previous": [133, 134], "annot": 133, "discretevolumetricatla": [133, 278], "imag": [133, 134, 135, 137, 140, 141, 142, 143, 162, 165, 170, 174, 284], "uniqu": [133, 162, 174], "multivolumetricatla": [133, 142, 278], "multifilevolumetricatla": [133, 141, 278], "file": [133, 136, 138, 140, 141, 142, 143, 284], "cortexsubcortexciftiatla": [133, 278], "cifti": [133, 136, 138, 143], "compartmentalis": 133, "cerebr": 133, "cortex": [133, 136, 138, 284], "subcortex": [133, 136, 138], "dirichletinitvolumetricatla": [133, 138, 278], "dirichlet": [133, 137, 138, 139, 143, 174, 278, 281, 284], "dirichletinitsurfaceatla": [133, 139, 278], "would": [133, 285], "eventu": [133, 277], "enough": 133, "straightforwardli": 133, "realiti": 133, "dictionari": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155], "isol": [133, 135, 143], "compart": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 278], "distinct": 133, "dirichletinitbaseatla": [133, 278], "atlasinitialis": [133, 278], "init": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 277, 281], "kwarg": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 153, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176], "characteris": 134, "subset": 134, "instanti": [134, 135, 143, 148, 170, 284], "blur": 134, "pointwis": 134, "inject": [134, 135, 136, 137, 138, 139, 140, 141, 142], "kernel_sigma": 134, "smooth": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 162, 174, 280, 281], "establish": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "topologi": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "noise_sigma": 134, "__call__": [134, 135, 136, 137, 138, 139, 140, 141, 142, 278, 284], "inherit": [135, 173], "sever": [135, 284], "cover": [135, 277], "scenario": 135, "own": 135, "composition": [135, 284], "_load_refer": 135, "referencemixin": [135, 278], "_create_mask": 135, "maskmixin": [135, 278], "_compartment_names_dict": 135, "compartmentmixin": [135, 278], "_create_compart": 135, "_configure_decod": 135, "labelmixin": [135, 278], "_populate_map_from_ref": 135, "_init_coor": 135, "meshmixin": [135, 278], "_configure_sigma": 135, "convmixin": [135, 278], "_convolv": 135, "abstractli": 135, "creation": [135, 136, 140, 141, 142], "overal": [135, 137, 139, 143, 177], "candid": 135, "inclus": [135, 136, 138, 139, 140, 141, 142, 143, 155], "subcompart": [135, 136, 137, 138, 139, 140, 141, 142, 143], "cortic": [135, 136, 138, 143], "hemispher": [135, 136, 138, 143, 280, 281], "decod": [135, 136, 138, 139, 140, 141, 142, 143], "present": [135, 143, 285], "ref_point": [135, 136, 140, 141, 142, 143], "path": [135, 136, 138, 140, 141, 142, 143], "mask_sourc": [135, 137, 139], "datatyp": [135, 136, 138, 139, 140, 141, 142], "long": [135, 136, 138, 139, 140, 141, 142, 149], "devic": [135, 136, 138, 139, 140, 141, 142], "clear_cach": [135, 136, 140, 141, 142], "statu": [135, 136, 138, 139, 140, 141, 142, 143], "dict": [135, 136, 137, 138, 139, 140, 141, 142, 155], "extent": [135, 136, 138, 139, 140, 141, 142], "cached_ref_data": [135, 136, 138, 139, 140, 141, 142], "enabl": [135, 136, 137, 138, 139, 140, 141, 142, 155], "purg": [135, 136, 138, 140, 141, 142], "spherical_scal": [135, 136, 137, 138, 139, 140, 141, 142], "substanti": [135, 136, 137, 138, 139, 140, 141, 142, 143, 277], "overhead": [135, 136, 137, 138, 139, 140, 141, 142], "ceil": [135, 136, 137, 138, 139, 140, 141, 142], "dure": [135, 136, 137, 138, 139, 140, 141, 142], "subcort": [136, 138, 143], "grei": [136, 138], "matter": [136, 138], "endow": [136, 138], "mask_l": [136, 138], "gifti": [136, 138], "32k": [136, 138], "fslr": [136, 138], "exclud": [136, 138, 143], "medial": [136, 138, 143], "wall": [136, 138, 143], "mask_r": [136, 138], "surf_l": [136, 138], "cortex_l": [136, 138], "cortex_r": [136, 138], "name": [136, 137, 138, 143], "cifti_structure_cortex_left": [136, 138], "cifti_structure_cortex_right": [136, 138], "nb": [136, 138, 139, 140, 141, 142], "nifti1imag": [136, 138, 139, 140, 141, 142], "to_imag": [136, 138, 143, 278], "save": [136, 138], "compartment_label": [137, 138, 143], "conc": [137, 138, 139], "concentr": [137, 138, 139, 284], "template_imag": 137, "categor": [138, 139, 153, 280, 281, 284], "cifti_templ": 138, "n_label": 139, "noth": 139, "field": [139, 170, 277], "nifti": [140, 141, 142, 143], "therefor": [141, 142, 153, 155], "probabilist": [141, 142, 284], "segment": [141, 142], "ica": [141, 142], "_volumeobjectreferencemixin": [143, 278], "_surfaceobjectreferencemixin": [143, 278], "_volumesinglereferencemixin": [143, 278], "disk": 143, "_surfacesinglereferencemixin": [143, 278], "_volumemultireferencemixin": [143, 278], "_phantomreferencemixin": [143, 278], "unimport": 143, "_ciftireferencemixin": [143, 278], "model_axi": 143, "facilit": 143, "access": [143, 170], "loader": 143, "_objectreferencemixin": 143, "_singlereferencemixin": 143, "_logicmaskmixin": [143, 278], "nest": 143, "logic": 143, "tree": 143, "maskintersect": 143, "maskthreshold": 143, "filesystem": 143, "leaf": 143, "_cortexsubcortexciftimaskmixin": [143, 278], "exclus": 143, "_fromnullmaskmixin": [143, 278], "background": 143, "_singlecompartmentmixin": [143, 278], "_multicompartmentmixin": [143, 278], "With": 143, "extra": [143, 148], "constructor": 143, "_cortexsubcortexcifticompartmentmixin": [143, 278], "_discretelabelmixin": [143, 278], "_continuouslabelmixin": [143, 278], "scheme": [143, 152, 277, 280, 281], "discretelabelmixin": 143, "_dirichletlabelmixin": [143, 278], "_volumetricmeshmixin": [143, 278], "evenli": 143, "_vertexciftimeshmixin": [143, 278], "_evenlysampledconvmixin": [143, 278], "_spatialconvmixin": [143, 278], "axobj": 143, "thank": 143, "chri": 143, "markiewicz": 143, "tutori": 143, "dataobj": 143, "header": [143, 284], "model_axobj": 143, "model_shap": 143, "model_zoom": 143, "modelobj": 143, "ndim": 143, "nifti_head": 143, "other_ax": 143, "zoom": 143, "cache_dataobj": 143, "cache_modelobj": 143, "cifti_model_ax": 143, "dataobj_from_imobj": 143, "imobj_from_point": 143, "load_imobj": 143, "purge_cach": 143, "map_to_mask": 143, "mask_arrai": 143, "dynamic_slice_map": 143, "compartmentset": [143, 278], "item": 143, "map_to_contigu": 143, "from_distr_init": [144, 146, 278], "constant_init": [144, 145, 278], "identity_init": [144, 147, 278], "mappedinitialis": [144, 145, 146, 147, 152, 153, 278], "distributioninitialis": [144, 278], "identityinitialis": [144, 278], "throughout": [145, 149], "re": [148, 284, 285], "suppli": 148, "_init": 148, "request": 148, "thereaft": [148, 170], "ultim": 148, "handler": [148, 162, 163, 165, 169, 171, 174, 175, 176], "mapper": [148, 160, 161, 167], "doesn": 149, "actual": [149, 155], "scalar": [149, 177, 280, 281, 284], "distr": [150, 153], "distrax": 150, "shift": 151, "loc": [152, 159, 169, 171], "var": [152, 159], "approxim": [152, 155, 157, 284], "lag": 152, "magnitud": [152, 163, 165, 169, 176, 284], "chang": [152, 155, 158, 173, 277], "deltaplus_init_": 152, "1d": [153, 162, 174], "understood": 153, "emul": [154, 155, 157, 158], "replic": 154, "transfer": [154, 155, 156, 157], "freqfilterspec": [154, 156, 157, 278, 284], "freqfilt": [155, 156, 157, 278, 281, 283], "respons": 155, "curv": 155, "iir": [155, 157, 278, 281, 283], "butterworth": [155, 157, 158], "action": [155, 157], "iirfilt": [155, 157, 278, 281, 283], "chebyshev": [155, 158], "ellipt": [155, 158], "bessel": [155, 158], "thompson": [155, 158], "ideal": [155, 158, 177, 284], "overst": 155, "remot": 155, "recurs": [155, 158], "contrast": 155, "exact": 155, "wn": [155, 158, 284], "thereof": 155, "critic": [155, 158], "cutoff": [155, 158], "worn": 155, "btype": [155, 158], "lowpass": [155, 158], "highpass": [155, 158], "bandpass": [155, 158, 284], "stop": [155, 158], "rippl": [155, 158], "rp": [155, 158, 284], "consult": [155, 158], "ampl_loc": 155, "ampl_scal": 155, "phase_loc": 155, "phase_scal": 155, "clamp": [155, 156], "clampabl": 155, "particular": [155, 175, 284], "closest": [155, 164], "get_clamp": [155, 278], "initialise_spectrum": [155, 278], "filter_spec": [156, 157, 284], "points_tensor": 156, "spec": [156, 157], "values_tensor": 156, "ftype": [158, 284], "butter": 158, "cheby1": 158, "cheby2": 158, "ellip": 158, "kuznetsov": 158, "bandstop": 158, "20": 158, "mag": 158, "initialise_coef": [158, 278], "02": 159, "excl_axi": 159, "equinox": [160, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 284], "pytorch": [160, 279], "nn": [160, 276, 277, 281], "parametr": 160, "mappedparamet": [160, 165, 278], "domainmappedparamet": [160, 278], "identitymappedparamet": [160, 278], "affinemappedparamet": [160, 278], "tanhmappedparamet": [160, 278], "amplitudetanhmappedparamet": [160, 278], "mappedlogit": [160, 278, 284], "normsphereparamet": [160, 278], "probabilitysimplexparamet": [160, 278, 284], "amplitudeprobabilitysimplexparamet": [160, 278], "orthogonalparamet": [160, 278], "isochoricparamet": [160, 278], "clip": [160, 162, 163, 165, 169, 171, 174, 175, 176, 278], "forcepositivedefinit": [160, 278], "phaseamplitudemixin": [160, 278], "mapparam": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 278, 281, 284], "image_map_impl": [161, 165, 168, 169, 171, 174, 176], "preimage_map_impl": [161, 165, 168, 169, 171, 174, 176], "simplex": [162, 174, 284], "natur": [162, 174], "pytre": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "belong": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "tree_at": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "exampl": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 277, 279], "lambda": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "mlp": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "retriev": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "outofdomainhandl": [162, 163, 165, 169, 171, 174, 176], "lower": [162, 174], "prescrib": [162, 163, 165, 169, 174, 175, 176], "bound": [162, 165, 174, 175], "increas": [162, 174], "higher": [162, 174], "entropi": [162, 174, 280, 281], "equiprob": [162, 174], "finit": [163, 169, 176], "preimage_bound": [163, 165, 169, 176], "min": [163, 169, 175, 176], "preimag": [163, 165, 169, 170, 176], "necessarili": [163, 165, 169, 176], "infimum": [163, 165, 169, 176], "supremum": [163, 165, 169, 176], "neglig": [163, 165, 169, 176], "mechan": [165, 284], "image_bound": 165, "outsid": [165, 175, 284], "forc": [166, 168], "image_map": [167, 170, 172], "preimage_map": [167, 170, 172], "logist": 169, "arbitrari": 169, "interv": [169, 175], "At": [170, 277], "tranform": 170, "updat": [170, 284, 285], "immediatelycontain": 170, "constitu": [171, 172, 174], "obvious": 171, "l0": 171, "simpl": [171, 277], "ellips": 171, "No": 171, "crude": 172, "manner": 172, "qr": 172, "unchang": 173, "behav": 174, "radic": 175, "edit": 175, "destroi": 175, "accommod": 175, "feasibl": 175, "obs_min": 175, "obs_max": 175, "lbound": 175, "ubound": 175, "lattic": 177, "maximum_potential_bipartite_lattic": [177, 278], "n_out": 177, "100": 177, "random_init": 177, "attenu": [177, 284], "criterion": 177, "corr_criterion": 177, "_src": 177, "greedi": 177, "mont": 177, "carlo": 177, "naiv": 177, "problem": [177, 277], "experiment": 177, "maximis": 177, "mutual": 177, "allegi": 177, "n_in": 177, "solv": 177, "h_in": 177, "w_in": 177, "twice": 177, "fuse": 177, "join": 177, "prevent": 177, "redund": 177, "best": [177, 277], "orig": 177, "recon": 177, "uncompress": 177, "u": 177, "minim": [177, 277, 280, 281], "optimum": 177, "tri": 177, "global": 177, "downstream": 177, "tangencyinitialis": [178, 278], "tangency_init": [178, 278], "semidefinitemean": [178, 278], "spdeuclideanmean": [178, 278], "spdharmonicmean": [178, 278], "spdlogeuclideanmean": [178, 278], "spdgeometricmean": [178, 278, 284], "match_spectra": [225, 282], "match_covari": [225, 282], "match_refer": [225, 282], "match_cov_and_spectrum": [225, 282], "synthesise_match": [225, 282, 284], "synthesise_from_cov_and_spectrum": [225, 282], "correlationnorm": [232, 283], "atlaslinear": [235, 283], "linearrfnn": 237, "linearcombinationselector": 237, "eliminationselector": 237, "basecovari": [241, 283], "unarycovari": [241, 283], "unarycovariancetw": [241, 283], "unarycovarianceuw": [241, 283], "binarycovari": [241, 283, 284], "binarycovariancetw": [241, 283], "binarycovarianceuw": [241, 283], "spectralinterpol": [251, 283], "linearinterpol": [251, 283], "hybridinterpol": [251, 283], "tangentproject": [258, 283, 284], "batchtangentproject": [258, 283], "syloresnet": [263, 283], "timeseriesconv2d": 266, "verticalcompress": [270, 283], "preprint": [273, 285], "interfac": 276, "atom": 276, "program": [276, 284], "compos": [276, 277], "mass": [276, 281], "miscellan": [276, 281], "softwar": 277, "librari": [277, 284], "fulli": 277, "build": 277, "framework": [277, 279, 284], "gpu": [277, 279, 284], "acceler": [277, 279, 284], "develop": [277, 284], "advent": 277, "public": 277, "repositori": [277, 285], "brought": 277, "prolifer": 277, "instrument": 277, "analys": 277, "challeng": 277, "reproduc": 277, "scientif": 277, "workflow": [277, 284], "know": 277, "ve": [277, 285], "suit": 277, "answer": 277, "ask": 277, "combinatori": 277, "go": [277, 285], "beyond": [277, 284], "particularli": [277, 284], "built": 277, "upon": 277, "deep": 277, "deploi": 277, "focu": 277, "fmri": 277, "warn": 277, "state": [277, 284], "fragil": 277, "incomplet": 277, "bug": 277, "lurk": 277, "break": 277, "refin": 277, "contribut": 277, "idea": 277, "improv": 277, "welcom": [277, 285], "incipi": 277, "hub": 277, "fairli": 277, "focus": 277, "loss": [277, 281], "guidelin": 277, "port": 277, "test": 277, "soon": 277, "unstabl": 277, "submodul": 277, "engin": [277, 281], "benchmark": [277, 281], "visualis": [277, 281], "instal": 277, "technic": 277, "overview": 277, "formula": 277, "grammar": 277, "viz": [277, 281], "eval": [277, 281], "neuro": [277, 281, 284], "neurosci": [277, 281], "search": 277, "page": 277, "atlasmixin": [278, 281], "deltaplu": [278, 281], "deltaplus_init": 278, "deltaplusinitialis": 278, "dirichlet_init": 278, "dirichletinitialis": [278, 284], "iirfilterspec": 278, "laplace_init": 278, "laplaceinitialis": 278, "mpbl": [278, 281], "sylo_init": 278, "syloinitialis": 278, "python": [279, 284], "pip": 279, "rciric": 279, "archiv": 279, "tar": 279, "gz": 279, "cuda": 279, "cudnn": 279, "underli": 279, "parameterisedloss": [280, 281], "extens": [280, 281, 284], "custom": [280, 281], "mseloss": [280, 281], "normedloss": [280, 281], "constraint_viol": [280, 281], "soft": [280, 281], "constraintviolationloss": 280, "unilateral_loss": [280, 281], "unilater": [280, 281], "unilateralloss": 280, "hinge_loss": [280, 281], "svm": [280, 281, 283], "hing": [280, 281], "hingeloss": 280, "smoothnessloss": 280, "bimodal_symmetr": [280, 281, 284], "mode": [280, 281, 284], "bimodalsymmetricloss": 280, "det_gram": [280, 281], "gramian": [280, 281], "gramdeterminantloss": 280, "log_det_gram": [280, 281], "gramlogdeterminantloss": 280, "entropyloss": 280, "kl_diverg": [280, 281], "kullback": [280, 281], "leibler": [280, 281], "diverg": [280, 281], "kldivergenceloss": 280, "js_diverg": [280, 281], "jensen": [280, 281], "shannon": [280, 281], "jsdivergenceloss": 280, "bregman_diverg": [280, 281], "bregman": [280, 281], "bregmandivergenceloss": 280, "equilibrium": [280, 281], "equilibriumloss": 280, "second_mo": [280, 281], "moment": [280, 281], "secondmomentloss": 280, "auto_tol": [280, 281], "signific": [280, 281], "toler": [280, 281], "batch_corr": [280, 281], "batchcorrelationloss": 280, "qcfc": [280, 281], "qc": [280, 281], "fc": [280, 281], "qcfcloss": 280, "reference_teth": [280, 281], "tether": [280, 281], "referencetetherloss": 280, "interhemispheric_teth": [280, 281], "interhemispherictetherloss": 280, "compactnessloss": 280, "dispers": [280, 281], "dispersionloss": 280, "multivariate_kurtosi": [280, 281], "stationar": [280, 281], "multivariatekurtosi": 280, "connectopyloss": 280, "modularityloss": 280, "sum_scalaris": [280, 281], "scalaris": [280, 281, 284], "mean_scalaris": [280, 281], "meansq_scalaris": [280, 281], "max_scalaris": [280, 281], "norm_scalaris": [280, 281], "vnorm_scalaris": [280, 281, 284], "wmean_scalaris": [280, 281], "selfwmean_scalaris": [280, 281], "lossappli": [280, 281], "lossschem": [280, 281], "lossreturn": [280, 281], "synth": [281, 282, 284], "synthesi": [281, 282], "recombin": [281, 283], "spdnois": [281, 283], "vertcom": [281, 283], "windowamplifi": [281, 283], "conjunct": 284, "ecosystem": 284, "readi": 284, "research": 284, "theoret": 284, "detect": 284, "contamin": 284, "regress": 284, "complic": 284, "start": 284, "complementarili": 284, "train": 284, "excel": 284, "optax": 284, "optimis": 284, "purpos": 284, "intern": 284, "fslmath": 284, "manipul": 284, "syntax": 284, "address": 284, "alia": 284, "pyvista": 284, "3d": 284, "plot": 284, "read": 284, "report": 284, "show": 284, "serv": 284, "illustr": 284, "astut": 284, "reader": 284, "remark": 284, "oversimplifi": 284, "decis": 284, "intent": 284, "vignett": 284, "intend": 284, "instruct": 284, "regard": 284, "json": 284, "functool": 284, "pkg_resourc": 284, "resource_filenam": 284, "pkgrf": 284, "eqx": 284, "panda": 284, "pd": 284, "confoundformulagrammar": 284, "frequencydomainfilt": 284, "synthet": 284, "max_epoch": 284, "log_interv": 284, "n_subject": 284, "n_voxel": 284, "400": 284, "n_time_point": 284, "200": 284, "n_channel": 284, "4": 284, "Or": 284, "trainabl": 284, "pipelin": 284, "multivers": 284, "data_kei": 284, "filter_kei": 284, "cov_kei": 284, "proj_kei": 284, "human": 284, "ref_path": 284, "regt": 284, "schaefer400_desc": 284, "synth_t": 284, "tsv": 284, "ref_data": 284, "read_csv": 284, "sep": 284, "let": 284, "36": 284, "desc": 284, "confounds_timeseri": 284, "metadata": 284, "model_36p": 284, "dd1": 284, "wm": 284, "csf": 284, "gsr": 284, "model_censor": 284, "scatter": 284, "OR": 284, "1_": 284, "fd": 284, "dv": 284, "model_formula": 284, "pars": 284, "fillna": 284, "01": 284, "hz": 284, "high_pass": 284, "low_pass": 284, "proj_spec": 284, "from_spec": 284, "time_dim": 284, "out_channel": 284, "init_data": 284, "proj": 284, "mean_spec": 284, "def": 284, "bimod": 284, "weak": 284, "strong": 284, "vnorm": 284, "later": 284, "ll": 284, "minimis": 284, "7": 284, "adam": 284, "rate": 284, "5e": 284, "opt": 284, "opt_stat": 284, "is_inexact_arrai": 284, "filter_value_and_grad": 284, "apply_upd": 284, "9": 284, "loop": 284, "filter_jit": 284, "fold_in": 284, "print": 284, "3f": 284, "ohbm": 285, "unfortun": 285, "am": 285, "abl": 285, "invit": 285, "feel": 285, "free": 285, "reach": 285, "discuss": 285, "my": 285, "contact": 285, "email": 285, "arxiv": 285, "star": 285, "toward": 285, "releas": 285}, "objects": {"hypercoil": [[274, 0, 0, "-", "engine"], [276, 0, 0, "-", "functional"]], "hypercoil.functional": [[1, 0, 0, "-", "activation"], [6, 0, 0, "-", "cmass"], [11, 0, 0, "-", "connectopy"], [14, 0, 0, "-", "cov"], [24, 0, 0, "-", "fourier"], [34, 0, 0, "-", "graph"], [40, 0, 0, "-", "interpolate"], [45, 0, 0, "-", "kernel"], [56, 0, 0, "-", "matrix"], [71, 0, 0, "-", "semidefinite"], [78, 0, 0, "-", "sparse"], [99, 0, 0, "-", "sphere"], [106, 0, 0, "-", "sylo"], [107, 0, 0, "-", "symmap"], [112, 0, 0, "-", "tsconv"], [119, 0, 0, "-", "utils"], [127, 0, 0, "-", "window"]], "hypercoil.functional.activation": [[2, 1, 1, "", "amplitude_atanh"], [3, 1, 1, "", "amplitude_tanh"], [4, 1, 1, "", "corrnorm"], [5, 1, 1, "", "isochor"]], "hypercoil.functional.cmass": [[7, 1, 1, "", "cmass"], [8, 1, 1, "", "cmass_coor"], [9, 1, 1, "", "cmass_reference_displacement"], [9, 1, 1, "", "cmass_reference_displacement_grid"], [10, 1, 1, "", "diffuse"]], "hypercoil.functional.connectopy": [[12, 1, 1, "", "diffusion_mapping"], [13, 1, 1, "", "laplacian_eigenmaps"]], "hypercoil.functional.cov": [[15, 1, 1, "", "conditionalcorr"], [16, 1, 1, "", "conditionalcov"], [17, 1, 1, "", "corr"], [18, 1, 1, "", "cov"], [19, 1, 1, "", "pairedcorr"], [20, 1, 1, "", "pairedcov"], [21, 1, 1, "", "partialcorr"], [22, 1, 1, "", "partialcov"], [23, 1, 1, "", "precision"]], "hypercoil.functional.fourier": [[25, 1, 1, "", "analytic_signal"], [26, 1, 1, "", "env_inst"], [27, 1, 1, "", "envelope"], [28, 1, 1, "", "hilbert_transform"], [29, 1, 1, "", "instantaneous_frequency"], [30, 1, 1, "", "instantaneous_phase"], [31, 1, 1, "", "product_filter"], [32, 1, 1, "", "product_filtfilt"], [33, 1, 1, "", "unwrap"]], "hypercoil.functional.graph": [[35, 1, 1, "", "coaffiliation"], [36, 1, 1, "", "girvan_newman_null"], [37, 1, 1, "", "graph_laplacian"], [38, 1, 1, "", "modularity_matrix"], [39, 1, 1, "", "relaxed_modularity"]], "hypercoil.functional.interpolate": [[41, 1, 1, "", "hybrid_interpolate"], [42, 1, 1, "", "linear_interpolate"], [43, 1, 1, "", "spectral_interpolate"], [44, 1, 1, "", "weighted_interpolate"]], "hypercoil.functional.kernel": [[46, 1, 1, "", "corr_kernel"], [47, 1, 1, "", "cosine_kernel"], [48, 1, 1, "", "cov_kernel"], [49, 1, 1, "", "gaussian_kernel"], [50, 1, 1, "", "linear_distance"], [51, 1, 1, "", "linear_kernel"], [52, 1, 1, "", "param_norm"], [53, 1, 1, "", "polynomial_kernel"], [54, 1, 1, "", "rbf_kernel"], [55, 1, 1, "", "sigmoid_kernel"]], "hypercoil.functional.matrix": [[57, 1, 1, "", "cholesky_invert"], [58, 1, 1, "", "delete_diagonal"], [59, 1, 1, "", "diag_embed"], [60, 1, 1, "", "expand_outer"], [61, 1, 1, "", "fill_diagonal"], [62, 1, 1, "", "recondition_eigenspaces"], [63, 1, 1, "", "spd"], [64, 1, 1, "", "squareform"], [65, 1, 1, "", "sym2vec"], [66, 1, 1, "", "symmetric"], [67, 1, 1, "", "toeplitz"], [68, 1, 1, "", "toeplitz_2d"], [69, 1, 1, "", "vec2sym"]], "hypercoil.functional.resid": [[70, 1, 1, "", "residualise"]], "hypercoil.functional.semidefinite": [[72, 1, 1, "", "cone_project_spd"], [73, 1, 1, "", "mean_euc_spd"], [74, 1, 1, "", "mean_geom_spd"], [75, 1, 1, "", "mean_harm_spd"], [76, 1, 1, "", "mean_logeuc_spd"], [77, 1, 1, "", "tangent_project_spd"]], "hypercoil.functional.sparse": [[79, 1, 1, "", "as_topk"], [80, 1, 1, "", "block_serialise"], [81, 1, 1, "", "dspdmm"], [82, 1, 1, "", "full_as_topk"], [83, 1, 1, "", "random_sparse"], [84, 1, 1, "", "select_indices"], [85, 1, 1, "", "sp_block_serialise"], [86, 1, 1, "", "sparse_astype"], [87, 1, 1, "", "spdiagmm"], [88, 1, 1, "", "splr_hadamard"], [89, 1, 1, "", "spsp_innerpaired"], [90, 1, 1, "", "spsp_pairdiff"], [91, 1, 1, "", "spspmm"], [92, 1, 1, "", "spspmm_full"], [93, 1, 1, "", "topk"], [95, 1, 1, "", "topk_diagzero"], [96, 1, 1, "", "topk_to_bcoo"], [97, 1, 1, "", "topkx"], [98, 1, 1, "", "trace_spspmm"]], "hypercoil.functional.sphere": [[100, 1, 1, "", "euclidean_conv"], [101, 1, 1, "", "spatial_conv"], [102, 1, 1, "", "sphere_to_latlong"], [103, 1, 1, "", "sphere_to_normals"], [104, 1, 1, "", "spherical_conv"], [105, 1, 1, "", "spherical_geodesic"]], "hypercoil.functional.sylo": [[106, 1, 1, "", "sylo"], [126, 1, 1, "", "vertical_compression"]], "hypercoil.functional.symmap": [[108, 1, 1, "", "symexp"], [109, 1, 1, "", "symlog"], [110, 1, 1, "", "symmap"], [111, 1, 1, "", "symsqrt"]], "hypercoil.functional.tsconv": [[113, 1, 1, "", "basischan"], [114, 1, 1, "", "basisconv2d"], [115, 1, 1, "", "conv"], [116, 1, 1, "", "polychan"], [117, 1, 1, "", "polyconv2d"], [118, 1, 1, "", "tsconv2d"]], "hypercoil.functional.utils": [[120, 1, 1, "", "amplitude_apply"], [121, 1, 1, "", "apply_mask"], [122, 1, 1, "", "complex_decompose"], [123, 1, 1, "", "complex_recompose"], [124, 1, 1, "", "conform_mask"], [125, 1, 1, "", "mask_tensor"]], "hypercoil.functional.window": [[128, 1, 1, "", "sample_nonoverlapping_windows_existing_ax"], [129, 1, 1, "", "sample_nonoverlapping_windows_new_ax"], [130, 1, 1, "", "sample_overlapping_windows_existing_ax"], [131, 1, 1, "", "sample_overlapping_windows_new_ax"], [132, 1, 1, "", "sample_windows"]], "hypercoil.init": [[133, 0, 0, "-", "atlas"], [143, 0, 0, "-", "atlasmixins"], [144, 0, 0, "-", "base"], [152, 0, 0, "-", "deltaplus"], [153, 0, 0, "-", "dirichlet"], [154, 0, 0, "-", "freqfilter"], [158, 0, 0, "-", "iirfilter"], [159, 0, 0, "-", "laplace"], [160, 0, 0, "-", "mapparam"], [177, 0, 0, "-", "mpbl"]], "hypercoil.init.atlas": [[134, 2, 1, "", "AtlasInitialiser"], [135, 2, 1, "", "BaseAtlas"], [136, 2, 1, "", "CortexSubcortexCIfTIAtlas"], [137, 2, 1, "", "DirichletInitBaseAtlas"], [138, 2, 1, "", "DirichletInitSurfaceAtlas"], [139, 2, 1, "", "DirichletInitVolumetricAtlas"], [140, 2, 1, "", "DiscreteVolumetricAtlas"], [141, 2, 1, "", "MultiVolumetricAtlas"], [142, 2, 1, "", "MultifileVolumetricAtlas"]], "hypercoil.init.atlas.AtlasInitialiser": [[134, 3, 1, "", "__call__"]], "hypercoil.init.atlas.BaseAtlas": [[135, 3, 1, "", "__call__"]], "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas": [[136, 3, 1, "", "__call__"], [136, 3, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitBaseAtlas": [[137, 3, 1, "", "__call__"]], "hypercoil.init.atlas.DirichletInitSurfaceAtlas": [[138, 3, 1, "", "__call__"], [138, 3, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitVolumetricAtlas": [[139, 3, 1, "", "__call__"]], "hypercoil.init.atlas.DiscreteVolumetricAtlas": [[140, 3, 1, "", "__call__"]], "hypercoil.init.atlas.MultiVolumetricAtlas": [[141, 3, 1, "", "__call__"]], "hypercoil.init.atlas.MultifileVolumetricAtlas": [[142, 3, 1, "", "__call__"]], "hypercoil.init.atlasmixins": [[143, 2, 1, "", "Compartment"], [143, 2, 1, "", "CompartmentSet"], [143, 2, 1, "", "Mask"], [143, 2, 1, "", "Reference"], [143, 2, 1, "", "_CIfTIReferenceMixin"], [143, 2, 1, "", "_ContinuousLabelMixin"], [143, 2, 1, "", "_CortexSubcortexCIfTICompartmentMixin"], [143, 2, 1, "", "_CortexSubcortexCIfTIMaskMixin"], [143, 2, 1, "", "_DirichletLabelMixin"], [143, 2, 1, "", "_DiscreteLabelMixin"], [143, 2, 1, "", "_EvenlySampledConvMixin"], [143, 2, 1, "", "_FromNullMaskMixin"], [143, 2, 1, "", "_LogicMaskMixin"], [143, 2, 1, "", "_MultiCompartmentMixin"], [143, 2, 1, "", "_PhantomReferenceMixin"], [143, 2, 1, "", "_SingleCompartmentMixin"], [143, 2, 1, "", "_SpatialConvMixin"], [143, 2, 1, "", "_SurfaceObjectReferenceMixin"], [143, 2, 1, "", "_SurfaceSingleReferenceMixin"], [143, 2, 1, "", "_VertexCIfTIMeshMixin"], [143, 2, 1, "", "_VolumeMultiReferenceMixin"], [143, 2, 1, "", "_VolumeObjectReferenceMixin"], [143, 2, 1, "", "_VolumeSingleReferenceMixin"], [143, 2, 1, "", "_VolumetricMeshMixin"]], "hypercoil.init.base": [[145, 1, 1, "", "ConstantInitialiser"], [146, 1, 1, "", "DistributionInitialiser"], [147, 2, 1, "", "IdentityInitialiser"], [148, 2, 1, "", "MappedInitialiser"], [149, 1, 1, "", "constant_init"], [150, 1, 1, "", "from_distr_init"], [151, 1, 1, "", "identity_init"]], "hypercoil.init.deltaplus": [[152, 2, 1, "", "DeltaPlusInitialiser"], [152, 1, 1, "", "deltaplus_init"]], "hypercoil.init.dirichlet": [[153, 2, 1, "", "DirichletInitialiser"], [153, 1, 1, "", "dirichlet_init"]], "hypercoil.init.freqfilter": [[155, 2, 1, "", "FreqFilterSpec"], [156, 1, 1, "", "clamp_init"], [157, 1, 1, "", "freqfilter_init"]], "hypercoil.init.freqfilter.FreqFilterSpec": [[155, 3, 1, "", "get_clamps"], [155, 3, 1, "", "initialise_spectrum"]], "hypercoil.init.iirfilter": [[158, 2, 1, "", "IIRFilterSpec"]], "hypercoil.init.iirfilter.IIRFilterSpec": [[158, 3, 1, "", "initialise_coefs"]], "hypercoil.init.laplace": [[159, 2, 1, "", "LaplaceInitialiser"], [159, 1, 1, "", "laplace_init"]], "hypercoil.init.mapparam": [[161, 2, 1, "", "AffineMappedParameter"], [162, 2, 1, "", "AmplitudeProbabilitySimplexParameter"], [163, 2, 1, "", "AmplitudeTanhMappedParameter"], [164, 2, 1, "", "Clip"], [165, 2, 1, "", "DomainMappedParameter"], [166, 2, 1, "", "ForcePositiveDefinite"], [167, 2, 1, "", "IdentityMappedParameter"], [168, 2, 1, "", "IsochoricParameter"], [169, 2, 1, "", "MappedLogits"], [170, 2, 1, "", "MappedParameter"], [171, 2, 1, "", "NormSphereParameter"], [172, 2, 1, "", "OrthogonalParameter"], [173, 2, 1, "", "PhaseAmplitudeMixin"], [174, 2, 1, "", "ProbabilitySimplexParameter"], [175, 2, 1, "", "Renormalise"], [176, 2, 1, "", "TanhMappedParameter"]], "hypercoil.init.mpbl": [[177, 1, 1, "", "maximum_potential_bipartite_lattice"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"orient_and_conform": 0, "activ": [1, 232], "function": [1, 106, 200, 224, 232, 276, 277, 284], "amplitude_atanh": 2, "amplitude_tanh": 3, "corrnorm": 4, "isochor": [5, 234], "psd": 5, "normalis": [5, 233, 234], "cmass": [6, 7], "centr": [6, 7, 8, 9, 10], "mass": [6, 7, 8, 9, 10], "arrai": 7, "coordin": [7, 8, 99], "cmass_coor": 8, "ani": 8, "displac": 9, "from": [9, 189], "refer": [9, 208, 281], "diffus": 10, "around": 10, "connectopi": [11, 192], "connectop": 11, "manifold": 11, "diffusion_map": 12, "laplacian_eigenmap": 13, "cov": [14, 18, 241], "covari": [14, 16, 18, 20, 22, 23, 241, 242], "correl": [14, 15, 17, 19, 21, 188, 233], "conditionalcorr": 15, "condit": [15, 16], "conditionalcov": 16, "corr": 17, "pearson": 17, "pairedcorr": 19, "pair": [19, 20], "pairedcov": 20, "partialcorr": 21, "partial": [21, 22], "partialcov": 22, "precis": 23, "invers": 23, "fourier": 24, "frequenc": [24, 154, 249], "domain": [24, 249], "filter": [24, 32, 158, 249, 250], "analytic_sign": 25, "env_inst": 26, "envelop": 27, "hilbert_transform": 28, "instantaneous_frequ": 29, "instantaneous_phas": 30, "product_filt": 31, "product_filtfilt": 32, "zero": [32, 224], "phase": [32, 33], "unwrap": 33, "graph": [34, 37], "network": [34, 283], "coaffili": 35, "commun": 35, "girvan_newman_nul": 36, "graph_laplacian": 37, "laplacian": 37, "modularity_matrix": 38, "relaxed_modular": 39, "interpol": [40, 41, 42, 251], "imput": 40, "hybrid_interpol": 41, "linear": [41, 42, 236], "spectral": 41, "linear_interpol": 42, "spectral_interpol": 43, "weighted_interpol": 44, "kernel": 45, "parameteris": [45, 186, 284], "corr_kernel": 46, "cosine_kernel": 47, "cov_kernel": 48, "gaussian_kernel": 49, "linear_dist": 50, "linear_kernel": 51, "param_norm": 52, "polynomial_kernel": 53, "rbf_kernel": 54, "sigmoid_kernel": 55, "matrix": [56, 78, 107], "oper": [56, 78], "cholesky_invert": 57, "delete_diagon": 58, "diag_emb": 59, "expand_out": 60, "fill_diagon": 61, "recondition_eigenspac": 62, "spd": 63, "squareform": 64, "sym2vec": 65, "symmetr": [66, 107], "toeplitz": [67, 182], "toeplitz_2d": 68, "vec2sym": 69, "residualis": [70, 257], "semidefinit": [71, 178, 258], "posit": 71, "cone": 71, "cone_project_spd": 72, "mean_euc_spd": 73, "mean_geom_spd": 74, "mean_harm_spd": 75, "mean_logeuc_spd": 76, "tangent_project_spd": 77, "spars": 78, "top": 78, "k": 78, "bcoo": 78, "format": 78, "as_topk": 79, "block_serialis": 80, "dspdmm": 81, "full_as_topk": 82, "random_spars": 83, "select_indic": 84, "sp_block_serialis": 85, "sparse_astyp": 86, "spdiagmm": 87, "splr_hadamard": 88, "spsp_innerpair": 89, "spsp_pairdiff": 90, "spspmm": 91, "spspmm_full": 92, "topk": 93, "diagreplac": 94, "topk_diagzero": 95, "topk_to_bcoo": 96, "topkx": 97, "trace_spspmm": 98, "sphere": 99, "spheric": 99, "euclidean_conv": 100, "spatial_conv": 101, "sphere_to_latlong": 102, "sphere_to_norm": 103, "spherical_conv": 104, "spherical_geodes": 105, "sylo": [106, 181, 263, 264], "symmap": [107, 110], "map": [107, 160, 277], "symexp": 108, "symlog": 109, "symsqrt": 111, "tsconv": [112, 266], "time": [112, 206, 266], "seri": [112, 206, 266], "convolut": [112, 266], "basischan": 113, "basisconv2d": [114, 267], "conv": 115, "polychan": 116, "polyconv2d": [117, 268], "tsconv2d": 118, "util": [119, 282], "miscellan": 119, "amplitude_appli": 120, "apply_mask": 121, "complex_decompos": 122, "complex_recompos": 123, "conform_mask": 124, "mask_tensor": 125, "vertical_compress": 126, "window": 127, "random": 127, "sample_nonoverlapping_windows_existing_ax": 128, "sample_nonoverlapping_windows_new_ax": 129, "sample_overlapping_windows_existing_ax": 130, "sample_overlapping_windows_new_ax": 131, "sample_window": 132, "atla": [133, 143, 235, 236], "initialis": [133, 144, 278], "content": [133, 277, 278], "atlasinitialis": 134, "baseatla": 135, "cortexsubcortexciftiatla": 136, "dirichletinitbaseatla": 137, "dirichletinitsurfaceatla": 138, "dirichletinitvolumetricatla": 139, "discretevolumetricatla": 140, "multivolumetricatla": 141, "multifilevolumetricatla": 142, "atlasmixin": 143, "mixin": 143, "referencemixin": 143, "maskmixin": 143, "compartmentmixin": 143, "labelmixin": 143, "meshmixin": 143, "convmixin": 143, "abstract": 143, "base": [144, 183, 242], "constantinitialis": 145, "distributioninitialis": 146, "identityinitialis": 147, "mappedinitialis": 148, "constant_init": 149, "from_distr_init": 150, "identity_init": 151, "deltaplu": 152, "deltaplus_init": 152, "deltaplusinitialis": 152, "dirichlet": 153, "dirichlet_init": 153, "dirichletinitialis": 153, "freqfilt": [154, 249], "band": 154, "init": [154, 158, 278, 284], "freqfilterspec": 155, "clamp_init": 156, "freqfilter_init": 157, "iirfilt": [158, 250], "iir": [158, 250], "iirfilterspec": 158, "laplac": 159, "laplace_init": 159, "laplaceinitialis": 159, "mapparam": 160, "paramet": [160, 185, 218], "affinemappedparamet": 161, "amplitudeprobabilitysimplexparamet": 162, "amplitudetanhmappedparamet": 163, "clip": 164, "domainmappedparamet": 165, "forcepositivedefinit": 166, "identitymappedparamet": 167, "isochoricparamet": 168, "mappedlogit": 169, "mappedparamet": 170, "normsphereparamet": 171, "orthogonalparamet": 172, "phaseamplitudemixin": 173, "probabilitysimplexparamet": 174, "renormalis": 175, "tanhmappedparamet": 176, "mpbl": 177, "semidefinitemean": 179, "spdeuclideanmean": 179, "spdharmonicmean": 179, "spdlogeuclideanmean": 179, "spdgeometricmean": 179, "tangencyinitialis": 180, "tangency_init": 180, "sylo_init": 181, "syloinitialis": 181, "loss": [183, 186, 198, 199, 201, 204, 207, 218, 220, 280, 284], "class": [183, 186, 242], "scalar": 183, "valu": [183, 209], "mseloss": 184, "mean": [184, 210, 211, 213, 217], "squar": [184, 211], "error": 184, "normedloss": 185, "norm": [185, 212, 215], "regularis": [185, 280], "parameterisedloss": 186, "extens": 186, "custom": 186, "auto_tol": 187, "signific": 187, "toler": 187, "batch_corr": 188, "batch": 188, "axi": 188, "batchcorrelationloss": 188, "bimodal_symmetr": 189, "minim": 189, "distanc": 189, "2": 189, "mode": 189, "bimodalsymmetricloss": 189, "bregman_diverg": 190, "bregman": 190, "diverg": [190, 202, 203], "bregmandivergenceloss": 190, "compact": 191, "compactnessloss": 191, "generalis": 192, "connectopyloss": 192, "constraint_viol": 193, "soft": 193, "constraint": 193, "constraintviolationloss": 193, "det_gram": 194, "gramian": 194, "determin": [194, 204], "gramdeterminantloss": 194, "differ": [195, 222], "elementwis": 195, "dispers": 196, "vector": [196, 215], "dispersionloss": 196, "entropi": 197, "categor": 197, "entropyloss": 197, "equilibrium": 198, "equilibriumloss": 198, "hinge_loss": 199, "svm": [199, 262], "hing": 199, "hingeloss": 199, "ident": 200, "interhemispheric_teth": 201, "inter": 201, "hemispher": 201, "tether": [201, 208], "interhemispherictetherloss": 201, "js_diverg": 202, "jensen": 202, "shannon": 202, "jsdivergenceloss": 202, "kl_diverg": 203, "kullback": 203, "leibler": 203, "kldivergenceloss": 203, "log_det_gram": 204, "gram": 204, "log": 204, "gramlogdeterminantloss": 204, "modular": 205, "relax": 205, "modularityloss": 205, "multivariate_kurtosi": 206, "stationar": 206, "multivariatekurtosi": 206, "qcfc": 207, "qc": 207, "fc": 207, "measur": 207, "qcfcloss": 207, "reference_teth": 208, "spatial": 208, "point": 208, "referencetetherloss": 208, "max_scalaris": 209, "maximum": 209, "scalaris": [209, 210, 211, 212, 213, 214, 215, 217], "mean_scalaris": 210, "meansq_scalaris": 211, "norm_scalaris": 212, "selfwmean_scalaris": 213, "self": 213, "weight": [213, 217], "sum_scalaris": 214, "sum": 214, "vnorm_scalaris": 215, "wmean": 216, "wmean_scalaris": 217, "lossappli": 218, "select": 218, "appli": 218, "lossreturn": 219, "lossschem": 220, "scheme": [220, 278], "multipl": 220, "second_mo": 221, "second": 221, "moment": 221, "secondmomentloss": 221, "smooth": 222, "backward": 222, "smoothnessloss": 222, "unilateral_loss": 223, "unilater": 223, "penalti": 223, "unilateralloss": 223, "synth": 225, "data": [225, 282], "synthesi": 225, "match_cov_and_spectrum": 226, "match_covari": 227, "match_refer": 228, "match_spectra": 229, "synthesise_from_cov_and_spectrum": 230, "synthesise_match": 231, "modul": [232, 241, 283], "correlationnorm": 233, "layer": [235, 236, 249, 250, 251], "atlaslinear": 236, "confound": 237, "model": 237, "eliminationselector": 238, "linearcombinationselector": 239, "linearrfnn": 240, "basecovari": 242, "binarycovari": 243, "binarycovariancetw": 244, "binarycovarianceuw": 245, "unarycovari": 246, "unarycovariancetw": 247, "unarycovarianceuw": 248, "hybridinterpol": 252, "linearinterpol": 253, "spectralinterpol": 254, "recombin": [255, 256], "batchtangentproject": 259, "tangentproject": 260, "spdnois": 261, "syloresnet": 265, "timeseriesconv2d": 269, "vertcom": 270, "vertex": 270, "compress": 270, "verticalcompress": 271, "windowamplifi": 272, "framework": 273, "engin": 274, "differenti": [274, 277, 284], "eval": 275, "benchmark": 275, "evalu": 275, "A": [277, 284], "program": 277, "brain": 277, "about": 277, "remark": 277, "indic": 277, "tabl": 277, "instal": 279, "api": 281, "neuro": 282, "neurosci": 282, "nn": [283, 284], "neural": 283, "technic": 284, "overview": 284, "compos": 284, "learn": 284, "signal": 284, "formula": 284, "grammar": 284, "viz": [284, 286], "visualis": [284, 286], "simpl": 284, "exampl": 284, "poster": 285, "land": 285, "page": 285}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"orient_and_conform": [[0, "orient-and-conform"]], "activation: Activation functions": [[1, "module-hypercoil.functional.activation"]], "amplitude_atanh": [[2, "amplitude-atanh"]], "amplitude_tanh": [[3, "amplitude-tanh"]], "corrnorm": [[4, "corrnorm"]], "isochor: PSD normalisation": [[5, "isochor-psd-normalisation"]], "cmass: Centre of mass": [[6, "module-hypercoil.functional.cmass"]], "cmass: Centre of mass, array coordinates": [[7, "cmass-centre-of-mass-array-coordinates"]], "cmass_coor: Centre of mass, any coordinates": [[8, "cmass-coor-centre-of-mass-any-coordinates"]], "Displacement from a reference centre of mass": [[9, "displacement-from-a-reference-centre-of-mass"]], "diffuse: Diffuseness around centre of mass": [[10, "diffuse-diffuseness-around-centre-of-mass"]], "connectopy: Connectopic manifolds": [[11, "module-hypercoil.functional.connectopy"]], "diffusion_mapping": [[12, "diffusion-mapping"]], "laplacian_eigenmaps": [[13, "laplacian-eigenmaps"]], "cov: Covariances and correlations": [[14, "module-hypercoil.functional.cov"]], "conditionalcorr: Conditional correlation": [[15, "conditionalcorr-conditional-correlation"]], "conditionalcov: Conditional covariance": [[16, "conditionalcov-conditional-covariance"]], "corr: Pearson correlation": [[17, "corr-pearson-correlation"]], "cov: Covariance": [[18, "cov-covariance"]], "pairedcorr: Paired correlation": [[19, "pairedcorr-paired-correlation"]], "pairedcov: Paired covariance": [[20, "pairedcov-paired-covariance"]], "partialcorr: Partial correlation": [[21, "partialcorr-partial-correlation"]], "partialcov: Partial covariance": [[22, "partialcov-partial-covariance"]], "precision: Inverse covariance (precision)": [[23, "precision-inverse-covariance-precision"]], "fourier: Frequency-domain filter": [[24, "module-hypercoil.functional.fourier"]], "analytic_signal": [[25, "analytic-signal"]], "env_inst": [[26, "env-inst"]], "envelope": [[27, "envelope"]], "hilbert_transform": [[28, "hilbert-transform"]], "instantaneous_frequency": [[29, "instantaneous-frequency"]], "instantaneous_phase": [[30, "instantaneous-phase"]], "product_filter": [[31, "product-filter"]], "product_filtfilt: Zero-phase filter": [[32, "product-filtfilt-zero-phase-filter"]], "unwrap: Unwrap phase": [[33, "unwrap-unwrap-phase"]], "graph: Graphs and networks": [[34, "module-hypercoil.functional.graph"]], "coaffiliation: Community coaffiliation": [[35, "coaffiliation-community-coaffiliation"]], "girvan_newman_null": [[36, "girvan-newman-null"]], "graph_laplacian: Graph Laplacian": [[37, "graph-laplacian-graph-laplacian"]], "modularity_matrix": [[38, "modularity-matrix"]], "relaxed_modularity": [[39, "relaxed-modularity"]], "interpolate: Interpolation and imputation": [[40, "module-hypercoil.functional.interpolate"]], "hybrid_interpolate: Linear + spectral interpolation": [[41, "hybrid-interpolate-linear-spectral-interpolation"]], "linear_interpolate: Linear interpolation": [[42, "linear-interpolate-linear-interpolation"]], "spectral_interpolate": [[43, "spectral-interpolate"]], "weighted_interpolate": [[44, "weighted-interpolate"]], "kernel: Parameterised kernels": [[45, "module-hypercoil.functional.kernel"]], "corr_kernel": [[46, "corr-kernel"]], "cosine_kernel": [[47, "cosine-kernel"]], "cov_kernel": [[48, "cov-kernel"]], "gaussian_kernel": [[49, "gaussian-kernel"]], "linear_distance": [[50, "linear-distance"]], "linear_kernel": [[51, "linear-kernel"]], "param_norm": [[52, "param-norm"]], "polynomial_kernel": [[53, "polynomial-kernel"]], "rbf_kernel": [[54, "rbf-kernel"]], "sigmoid_kernel": [[55, "sigmoid-kernel"]], "matrix: Matrix operations": [[56, "module-hypercoil.functional.matrix"]], "cholesky_invert": [[57, "cholesky-invert"]], "delete_diagonal": [[58, "delete-diagonal"]], "diag_embed": [[59, "diag-embed"]], "expand_outer": [[60, "expand-outer"]], "fill_diagonal": [[61, "fill-diagonal"]], "recondition_eigenspaces": [[62, "recondition-eigenspaces"]], "spd": [[63, "spd"]], "squareform": [[64, "squareform"]], "sym2vec": [[65, "sym2vec"]], "symmetric": [[66, "symmetric"]], "toeplitz": [[67, "toeplitz"], [182, "toeplitz"]], "toeplitz_2d": [[68, "toeplitz-2d"]], "vec2sym": [[69, "vec2sym"]], "residualise": [[70, "residualise"]], "semidefinite: Positive semidefinite cone": [[71, "module-hypercoil.functional.semidefinite"]], "cone_project_spd": [[72, "cone-project-spd"]], "mean_euc_spd": [[73, "mean-euc-spd"]], "mean_geom_spd": [[74, "mean-geom-spd"]], "mean_harm_spd": [[75, "mean-harm-spd"]], "mean_logeuc_spd": [[76, "mean-logeuc-spd"]], "tangent_project_spd": [[77, "tangent-project-spd"]], "sparse: Sparse matrix operations": [[78, "module-hypercoil.functional.sparse"]], "Top-k BCOO format": [[78, "top-k-bcoo-format"]], "as_topk": [[79, "as-topk"]], "block_serialise": [[80, "block-serialise"]], "dspdmm": [[81, "dspdmm"]], "full_as_topk": [[82, "full-as-topk"]], "random_sparse": [[83, "random-sparse"]], "select_indices": [[84, "select-indices"]], "sp_block_serialise": [[85, "sp-block-serialise"]], "sparse_astype": [[86, "sparse-astype"]], "spdiagmm": [[87, "spdiagmm"]], "splr_hadamard": [[88, "splr-hadamard"]], "spsp_innerpaired": [[89, "spsp-innerpaired"]], "spsp_pairdiff": [[90, "spsp-pairdiff"]], "spspmm": [[91, "spspmm"]], "spspmm_full": [[92, "spspmm-full"]], "topk": [[93, "topk"]], "diagreplace": [[94, "diagreplace"]], "topk_diagzero": [[95, "topk-diagzero"]], "topk_to_bcoo": [[96, "topk-to-bcoo"]], "topkx": [[97, "topkx"]], "trace_spspmm": [[98, "trace-spspmm"]], "sphere: Spherical coordinates": [[99, "module-hypercoil.functional.sphere"]], "euclidean_conv": [[100, "euclidean-conv"]], "spatial_conv": [[101, "spatial-conv"]], "sphere_to_latlong": [[102, "sphere-to-latlong"]], "sphere_to_normals": [[103, "sphere-to-normals"]], "spherical_conv": [[104, "spherical-conv"]], "spherical_geodesic": [[105, "spherical-geodesic"]], "sylo: Sylo function": [[106, "module-hypercoil.functional.sylo"]], "symmap: Symmetric matrix maps": [[107, "module-hypercoil.functional.symmap"]], "symexp": [[108, "symexp"]], "symlog": [[109, "symlog"]], "symmap": [[110, "symmap"]], "symsqrt": [[111, "symsqrt"]], "tsconv: Time series convolution": [[112, "module-hypercoil.functional.tsconv"], [266, "tsconv-time-series-convolution"]], "basischan": [[113, "basischan"]], "basisconv2d": [[114, "basisconv2d"]], "conv": [[115, "conv"]], "polychan": [[116, "polychan"]], "polyconv2d": [[117, "polyconv2d"]], "tsconv2d": [[118, "tsconv2d"]], "utils: Miscellaneous": [[119, "module-hypercoil.functional.utils"]], "amplitude_apply": [[120, "amplitude-apply"]], "apply_mask": [[121, "apply-mask"]], "complex_decompose": [[122, "complex-decompose"]], "complex_recompose": [[123, "complex-recompose"]], "conform_mask": [[124, "conform-mask"]], "mask_tensor": [[125, "mask-tensor"]], "vertical_compression": [[126, "vertical-compression"]], "window: Random windowing": [[127, "module-hypercoil.functional.window"]], "sample_nonoverlapping_windows_existing_ax": [[128, "sample-nonoverlapping-windows-existing-ax"]], "sample_nonoverlapping_windows_new_ax": [[129, "sample-nonoverlapping-windows-new-ax"]], "sample_overlapping_windows_existing_ax": [[130, "sample-overlapping-windows-existing-ax"]], "sample_overlapping_windows_new_ax": [[131, "sample-overlapping-windows-new-ax"]], "sample_windows": [[132, "sample-windows"]], "atlas: Atlas initialisation": [[133, "module-hypercoil.init.atlas"]], "Contents:": [[133, null], [277, null], [278, null]], "AtlasInitialiser": [[134, "atlasinitialiser"]], "BaseAtlas": [[135, "baseatlas"]], "CortexSubcortexCIfTIAtlas": [[136, "cortexsubcortexciftiatlas"]], "DirichletInitBaseAtlas": [[137, "dirichletinitbaseatlas"]], "DirichletInitSurfaceAtlas": [[138, "dirichletinitsurfaceatlas"]], "DirichletInitVolumetricAtlas": [[139, "dirichletinitvolumetricatlas"]], "DiscreteVolumetricAtlas": [[140, "discretevolumetricatlas"]], "MultiVolumetricAtlas": [[141, "multivolumetricatlas"]], "MultifileVolumetricAtlas": [[142, "multifilevolumetricatlas"]], "atlasmixins: Atlas mixins": [[143, "module-hypercoil.init.atlasmixins"]], "~ReferenceMixin": [[143, "referencemixin"]], "~MaskMixin": [[143, "maskmixin"]], "~CompartmentMixin": [[143, "compartmentmixin"]], "~LabelMixin": [[143, "labelmixin"]], "~MeshMixin": [[143, "meshmixin"]], "~ConvMixin": [[143, "convmixin"]], "Abstractions": [[143, "abstractions"]], "base: Base initialisations": [[144, "module-hypercoil.init.base"]], "ConstantInitialiser": [[145, "constantinitialiser"]], "DistributionInitialiser": [[146, "distributioninitialiser"]], "IdentityInitialiser": [[147, "identityinitialiser"]], "MappedInitialiser": [[148, "mappedinitialiser"]], "constant_init": [[149, "constant-init"]], "from_distr_init": [[150, "from-distr-init"]], "identity_init": [[151, "identity-init"]], "deltaplus": [[152, "module-hypercoil.init.deltaplus"]], "deltaplus_init": [[152, "deltaplus-init"]], "DeltaPlusInitialiser": [[152, "deltaplusinitialiser"]], "dirichlet": [[153, "module-hypercoil.init.dirichlet"]], "dirichlet_init": [[153, "dirichlet-init"]], "DirichletInitialiser": [[153, "dirichletinitialiser"]], "freqfilter: Frequency band init": [[154, "module-hypercoil.init.freqfilter"]], "FreqFilterSpec": [[155, "freqfilterspec"]], "clamp_init": [[156, "clamp-init"]], "freqfilter_init": [[157, "freqfilter-init"]], "iirfilter: IIR filter init": [[158, "module-hypercoil.init.iirfilter"]], "IIRFilterSpec": [[158, "iirfilterspec"]], "laplace": [[159, "module-hypercoil.init.laplace"]], "laplace_init": [[159, "laplace-init"]], "LaplaceInitialiser": [[159, "laplaceinitialiser"]], "mapparam: Mapped parameters and parameter maps": [[160, "module-hypercoil.init.mapparam"]], "AffineMappedParameter": [[161, "affinemappedparameter"]], "AmplitudeProbabilitySimplexParameter": [[162, "amplitudeprobabilitysimplexparameter"]], "AmplitudeTanhMappedParameter": [[163, "amplitudetanhmappedparameter"]], "Clip": [[164, "clip"]], "DomainMappedParameter": [[165, "domainmappedparameter"]], "ForcePositiveDefinite": [[166, "forcepositivedefinite"]], "IdentityMappedParameter": [[167, "identitymappedparameter"]], "IsochoricParameter": [[168, "isochoricparameter"]], "MappedLogits": [[169, "mappedlogits"]], "MappedParameter": [[170, "mappedparameter"]], "NormSphereParameter": [[171, "normsphereparameter"]], "OrthogonalParameter": [[172, "orthogonalparameter"]], "PhaseAmplitudeMixin": [[173, "phaseamplitudemixin"]], "ProbabilitySimplexParameter": [[174, "probabilitysimplexparameter"]], "Renormalise": [[175, "renormalise"]], "TanhMappedParameter": [[176, "tanhmappedparameter"]], "mpbl": [[177, "module-hypercoil.init.mpbl"]], "semidefinite": [[178, "semidefinite"], [258, "semidefinite"]], "SemidefiniteMean": [[179, "semidefinitemean"]], "SPDEuclideanMean": [[179, "spdeuclideanmean"]], "SPDHarmonicMean": [[179, "spdharmonicmean"]], "SPDLogEuclideanMean": [[179, "spdlogeuclideanmean"]], "SPDGeometricMean": [[179, "spdgeometricmean"]], "TangencyInitialiser": [[180, "tangencyinitialiser"], [180, "id1"]], "tangency_init": [[180, "tangency-init"]], "sylo": [[181, "sylo"], [263, "sylo"]], "sylo_init": [[181, "sylo-init"]], "SyloInitialiser": [[181, "syloinitialiser"]], "Loss: Base class for scalar-valued losses": [[183, "loss-base-class-for-scalar-valued-losses"]], "MSELoss: Mean squared error": [[184, "mseloss-mean-squared-error"]], "NormedLoss: Normed parameter regularisation": [[185, "normedloss-normed-parameter-regularisation"]], "ParameterisedLoss: Extensible class for custom parameterised losses": [[186, "parameterisedloss-extensible-class-for-custom-parameterised-losses"]], "auto_tol: Significance tolerance": [[187, "auto-tol-significance-tolerance"]], "batch_corr: Batch-axis correlation": [[188, "batch-corr-batch-axis-correlation"]], "batch_corr": [[188, "batch-corr"]], "BatchCorrelationLoss": [[188, "batchcorrelationloss"]], "bimodal_symmetric: Minimal distance from 2 modes": [[189, "bimodal-symmetric-minimal-distance-from-2-modes"]], "bimodal_symmetric": [[189, "bimodal-symmetric"]], "BimodalSymmetricLoss": [[189, "bimodalsymmetricloss"]], "bregman_divergence: Bregman divergences": [[190, "bregman-divergence-bregman-divergences"]], "bregman_divergence": [[190, "bregman-divergence"]], "BregmanDivergenceLoss": [[190, "bregmandivergenceloss"]], "compactness: Compactness": [[191, "compactness-compactness"]], "compactness": [[191, "compactness"]], "CompactnessLoss": [[191, "compactnessloss"]], "connectopy: Generalised connectopy": [[192, "connectopy-generalised-connectopy"]], "connectopy": [[192, "connectopy"]], "ConnectopyLoss": [[192, "connectopyloss"]], "constraint_violation: Soft constraints": [[193, "constraint-violation-soft-constraints"]], "constraint_violation": [[193, "constraint-violation"]], "ConstraintViolationLoss": [[193, "constraintviolationloss"]], "det_gram: Gramian determinant": [[194, "det-gram-gramian-determinant"]], "det_gram": [[194, "det-gram"]], "GramDeterminantLoss": [[194, "gramdeterminantloss"]], "difference: Elementwise difference": [[195, "difference-elementwise-difference"]], "dispersion: Vector dispersion": [[196, "dispersion-vector-dispersion"]], "dispersion": [[196, "dispersion"]], "DispersionLoss": [[196, "dispersionloss"]], "entropy: Categorical entropy": [[197, "entropy-categorical-entropy"]], "entropy": [[197, "entropy"]], "EntropyLoss": [[197, "entropyloss"]], "equilibrium: Equilibrium loss": [[198, "equilibrium-equilibrium-loss"]], "equilibrium": [[198, "equilibrium"]], "EquilibriumLoss": [[198, "equilibriumloss"]], "hinge_loss: SVM hinge loss": [[199, "hinge-loss-svm-hinge-loss"]], "hinge_loss": [[199, "hinge-loss"]], "HingeLoss": [[199, "hingeloss"]], "identity: Identity function": [[200, "identity-identity-function"]], "interhemispheric_tether: Inter-hemispheric tethering loss": [[201, "interhemispheric-tether-inter-hemispheric-tethering-loss"]], "interhemispheric_tether": [[201, "interhemispheric-tether"]], "InterhemisphericTetherLoss": [[201, "interhemispherictetherloss"]], "js_divergence: Jensen-Shannon divergence": [[202, "js-divergence-jensen-shannon-divergence"]], "js_divergence": [[202, "js-divergence"]], "JSDivergenceLoss": [[202, "jsdivergenceloss"]], "kl_divergence: Kullback-Leibler divergence": [[203, "kl-divergence-kullback-leibler-divergence"]], "kl_divergence": [[203, "kl-divergence"]], "KLDivergenceLoss": [[203, "kldivergenceloss"]], "log_det_gram: Gram log-determinant loss": [[204, "log-det-gram-gram-log-determinant-loss"]], "log_det_gram": [[204, "log-det-gram"]], "GramLogDeterminantLoss": [[204, "gramlogdeterminantloss"]], "modularity: Relaxed modularity": [[205, "modularity-relaxed-modularity"]], "modularity": [[205, "modularity"]], "ModularityLoss": [[205, "modularityloss"]], "multivariate_kurtosis: Time series stationarity": [[206, "multivariate-kurtosis-time-series-stationarity"]], "multivariate_kurtosis": [[206, "multivariate-kurtosis"]], "MultivariateKurtosis": [[206, "multivariatekurtosis"]], "qcfc: QC-FC measures and loss": [[207, "qcfc-qc-fc-measures-and-loss"]], "qcfc": [[207, "qcfc"]], "QCFCLoss": [[207, "qcfcloss"]], "reference_tether: Spatial tether to reference points": [[208, "reference-tether-spatial-tether-to-reference-points"]], "reference_tether": [[208, "reference-tether"]], "ReferenceTetherLoss": [[208, "referencetetherloss"]], "max_scalarise: Maximum-value scalarisation": [[209, "max-scalarise-maximum-value-scalarisation"]], "mean_scalarise: Mean scalarisation": [[210, "mean-scalarise-mean-scalarisation"]], "meansq_scalarise: Squared mean scalarisation": [[211, "meansq-scalarise-squared-mean-scalarisation"]], "norm_scalarise: Norm scalarisation": [[212, "norm-scalarise-norm-scalarisation"]], "selfwmean_scalarise: Self-weighted mean scalarisation": [[213, "selfwmean-scalarise-self-weighted-mean-scalarisation"]], "sum_scalarise: Sum scalarisation": [[214, "sum-scalarise-sum-scalarisation"]], "vnorm_scalarise: Vector norm scalarisation": [[215, "vnorm-scalarise-vector-norm-scalarisation"]], "wmean": [[216, "wmean"]], "wmean_scalarise: Weighted mean scalarisation": [[217, "wmean-scalarise-weighted-mean-scalarisation"]], "LossApply: Selectively apply loss to parameters": [[218, "lossapply-selectively-apply-loss-to-parameters"]], "LossReturn": [[219, "lossreturn"]], "LossScheme: Scheme for multiple losses": [[220, "lossscheme-scheme-for-multiple-losses"]], "second_moment: Second moments": [[221, "second-moment-second-moments"]], "second_moment": [[221, "second-moment"]], "SecondMomentLoss": [[221, "secondmomentloss"]], "smoothness: Backwards differences": [[222, "smoothness-backwards-differences"]], "smoothness": [[222, "smoothness"]], "SmoothnessLoss": [[222, "smoothnessloss"]], "unilateral_loss: Unilateral penalties": [[223, "unilateral-loss-unilateral-penalties"]], "unilateral_loss": [[223, "unilateral-loss"]], "UnilateralLoss": [[223, "unilateralloss"]], "zero: Zero function": [[224, "zero-zero-function"]], "synth: Data synthesis": [[225, "synth-data-synthesis"]], "match_cov_and_spectrum": [[226, "match-cov-and-spectrum"]], "match_covariance": [[227, "match-covariance"]], "match_reference": [[228, "match-reference"]], "match_spectra": [[229, "match-spectra"]], "synthesise_from_cov_and_spectrum": [[230, "synthesise-from-cov-and-spectrum"]], "synthesise_matched": [[231, "synthesise-matched"]], "activation: Activation functions as modules": [[232, "activation-activation-functions-as-modules"]], "CorrelationNorm: Correlation normalisation": [[233, "correlationnorm-correlation-normalisation"]], "Isochor: Isochoric normalisation": [[234, "isochor-isochoric-normalisation"]], "atlas: Atlas layers": [[235, "atlas-atlas-layers"]], "AtlasLinear: Linear atlas layer": [[236, "atlaslinear-linear-atlas-layer"]], "confound: Confound Models": [[237, "confound-confound-models"]], "EliminationSelector": [[238, "eliminationselector"]], "LinearCombinationSelector": [[239, "linearcombinationselector"]], "LinearRFNN": [[240, "linearrfnn"]], "cov: Covariance modules": [[241, "cov-covariance-modules"]], "BaseCovariance: Covariance base class": [[242, "basecovariance-covariance-base-class"]], "BinaryCovariance": [[243, "binarycovariance"]], "BinaryCovarianceTW": [[244, "binarycovariancetw"]], "BinaryCovarianceUW": [[245, "binarycovarianceuw"]], "UnaryCovariance": [[246, "unarycovariance"]], "UnaryCovarianceTW": [[247, "unarycovariancetw"]], "UnaryCovarianceUW": [[248, "unarycovarianceuw"]], "freqfilter: Frequency-domain filter layer": [[249, "freqfilter-frequency-domain-filter-layer"]], "iirfilter: IIR filter layer": [[250, "iirfilter-iir-filter-layer"]], "interpolate: Interpolation layers": [[251, "interpolate-interpolation-layers"]], "HybridInterpolate": [[252, "hybridinterpolate"]], "LinearInterpolate": [[253, "linearinterpolate"]], "SpectralInterpolate": [[254, "spectralinterpolate"]], "recombinator": [[255, "recombinator"]], "Recombinator": [[256, "recombinator"]], "Residualise": [[257, "residualise"]], "BatchTangentProject": [[259, "batchtangentproject"]], "TangentProject": [[260, "tangentproject"]], "SPDNoise": [[261, "spdnoise"]], "SVM": [[262, "svm"]], "Sylo": [[264, "sylo"]], "SyloResNet": [[265, "syloresnet"]], "BasisConv2D": [[267, "basisconv2d"]], "PolyConv2D": [[268, "polyconv2d"]], "TimeSeriesConv2D": [[269, "timeseriesconv2d"]], "vertcom: Vertex compression": [[270, "vertcom-vertex-compression"]], "VerticalCompression": [[271, "verticalcompression"]], "WindowAmplifier": [[272, "windowamplifier"]], "Framework": [[273, "framework"]], "engine: Differentiable engine": [[274, "module-hypercoil.engine"]], "eval: Benchmarks and evaluation": [[275, "eval-benchmarks-and-evaluation"]], "functional: Functions and functionals": [[276, "module-hypercoil.functional"]], "A differentiable program for mapping brain function": [[277, "a-differentiable-program-for-mapping-brain-function"]], "About": [[277, "about"]], "Remarks": [[277, "remarks"]], "Indices and tables": [[277, "indices-and-tables"]], "init: Initialisation schemes": [[278, "init-initialisation-schemes"]], "Installation": [[279, "installation"]], "loss: Loss and regularisation": [[280, "loss-loss-and-regularisation"]], "API reference": [[281, "api-reference"]], "neuro: Neuroscience data utilities": [[282, "neuro-neuroscience-data-utilities"]], "nn: Neural network modules": [[283, "nn-neural-network-modules"]], "Technical overview": [[284, "technical-overview"]], "functional and nn: composable differentiable functionals": [[284, "functional-and-nn-composable-differentiable-functionals"]], "init: functional parameterisation": [[284, "init-functional-parameterisation"]], "loss: learning signals": [[284, "loss-learning-signals"]], "formula: functional grammar": [[284, "formula-functional-grammar"]], "viz: visualisation": [[284, "viz-visualisation"]], "A simple example": [[284, "a-simple-example"]], "Poster landing page": [[285, "poster-landing-page"]], "viz: Visualisation": [[286, "viz-visualisation"]]}, "indexentries": {"hypercoil.functional.activation": [[1, "module-hypercoil.functional.activation"]], "module": [[1, "module-hypercoil.functional.activation"], [6, "module-hypercoil.functional.cmass"], [11, "module-hypercoil.functional.connectopy"], [14, "module-hypercoil.functional.cov"], [24, "module-hypercoil.functional.fourier"], [34, "module-hypercoil.functional.graph"], [40, "module-hypercoil.functional.interpolate"], [45, "module-hypercoil.functional.kernel"], [56, "module-hypercoil.functional.matrix"], [71, "module-hypercoil.functional.semidefinite"], [78, "module-hypercoil.functional.sparse"], [99, "module-hypercoil.functional.sphere"], [106, "module-hypercoil.functional.sylo"], [107, "module-hypercoil.functional.symmap"], [112, "module-hypercoil.functional.tsconv"], [119, "module-hypercoil.functional.utils"], [127, "module-hypercoil.functional.window"], [133, "module-hypercoil.init.atlas"], [143, "module-hypercoil.init.atlasmixins"], [144, "module-hypercoil.init.base"], [152, "module-hypercoil.init.deltaplus"], [153, "module-hypercoil.init.dirichlet"], [154, "module-hypercoil.init.freqfilter"], [158, "module-hypercoil.init.iirfilter"], [159, "module-hypercoil.init.laplace"], [160, "module-hypercoil.init.mapparam"], [177, "module-hypercoil.init.mpbl"], [274, "module-hypercoil.engine"], [276, "module-hypercoil.functional"]], "amplitude_atanh() (in module hypercoil.functional.activation)": [[2, "hypercoil.functional.activation.amplitude_atanh"]], "amplitude_tanh() (in module hypercoil.functional.activation)": [[3, "hypercoil.functional.activation.amplitude_tanh"]], "corrnorm() (in module hypercoil.functional.activation)": [[4, "hypercoil.functional.activation.corrnorm"]], "isochor() (in module hypercoil.functional.activation)": [[5, "hypercoil.functional.activation.isochor"]], "hypercoil.functional.cmass": [[6, "module-hypercoil.functional.cmass"]], "cmass() (in module hypercoil.functional.cmass)": [[7, "hypercoil.functional.cmass.cmass"]], "cmass_coor() (in module hypercoil.functional.cmass)": [[8, "hypercoil.functional.cmass.cmass_coor"]], "cmass_reference_displacement() (in module hypercoil.functional.cmass)": [[9, "hypercoil.functional.cmass.cmass_reference_displacement"]], "cmass_reference_displacement_grid() (in module hypercoil.functional.cmass)": [[9, "hypercoil.functional.cmass.cmass_reference_displacement_grid"]], "diffuse() (in module hypercoil.functional.cmass)": [[10, "hypercoil.functional.cmass.diffuse"]], "hypercoil.functional.connectopy": [[11, "module-hypercoil.functional.connectopy"]], "diffusion_mapping() (in module hypercoil.functional.connectopy)": [[12, "hypercoil.functional.connectopy.diffusion_mapping"]], "laplacian_eigenmaps() (in module hypercoil.functional.connectopy)": [[13, "hypercoil.functional.connectopy.laplacian_eigenmaps"]], "hypercoil.functional.cov": [[14, "module-hypercoil.functional.cov"]], "conditionalcorr() (in module hypercoil.functional.cov)": [[15, "hypercoil.functional.cov.conditionalcorr"]], "conditionalcov() (in module hypercoil.functional.cov)": [[16, "hypercoil.functional.cov.conditionalcov"]], "corr() (in module hypercoil.functional.cov)": [[17, "hypercoil.functional.cov.corr"]], "cov() (in module hypercoil.functional.cov)": [[18, "hypercoil.functional.cov.cov"]], "pairedcorr() (in module hypercoil.functional.cov)": [[19, "hypercoil.functional.cov.pairedcorr"]], "pairedcov() (in module hypercoil.functional.cov)": [[20, "hypercoil.functional.cov.pairedcov"]], "partialcorr() (in module hypercoil.functional.cov)": [[21, "hypercoil.functional.cov.partialcorr"]], "partialcov() (in module hypercoil.functional.cov)": [[22, "hypercoil.functional.cov.partialcov"]], "precision() (in module hypercoil.functional.cov)": [[23, "hypercoil.functional.cov.precision"]], "hypercoil.functional.fourier": [[24, "module-hypercoil.functional.fourier"]], "analytic_signal() (in module hypercoil.functional.fourier)": [[25, "hypercoil.functional.fourier.analytic_signal"]], "env_inst() (in module hypercoil.functional.fourier)": [[26, "hypercoil.functional.fourier.env_inst"]], "envelope() (in module hypercoil.functional.fourier)": [[27, "hypercoil.functional.fourier.envelope"]], "hilbert_transform() (in module hypercoil.functional.fourier)": [[28, "hypercoil.functional.fourier.hilbert_transform"]], "instantaneous_frequency() (in module hypercoil.functional.fourier)": [[29, "hypercoil.functional.fourier.instantaneous_frequency"]], "instantaneous_phase() (in module hypercoil.functional.fourier)": [[30, "hypercoil.functional.fourier.instantaneous_phase"]], "product_filter() (in module hypercoil.functional.fourier)": [[31, "hypercoil.functional.fourier.product_filter"]], "product_filtfilt() (in module hypercoil.functional.fourier)": [[32, "hypercoil.functional.fourier.product_filtfilt"]], "unwrap() (in module hypercoil.functional.fourier)": [[33, "hypercoil.functional.fourier.unwrap"]], "hypercoil.functional.graph": [[34, "module-hypercoil.functional.graph"]], "coaffiliation() (in module hypercoil.functional.graph)": [[35, "hypercoil.functional.graph.coaffiliation"]], "girvan_newman_null() (in module hypercoil.functional.graph)": [[36, "hypercoil.functional.graph.girvan_newman_null"]], "graph_laplacian() (in module hypercoil.functional.graph)": [[37, "hypercoil.functional.graph.graph_laplacian"]], "modularity_matrix() (in module hypercoil.functional.graph)": [[38, "hypercoil.functional.graph.modularity_matrix"]], "relaxed_modularity() (in module hypercoil.functional.graph)": [[39, "hypercoil.functional.graph.relaxed_modularity"]], "hypercoil.functional.interpolate": [[40, "module-hypercoil.functional.interpolate"]], "hybrid_interpolate() (in module hypercoil.functional.interpolate)": [[41, "hypercoil.functional.interpolate.hybrid_interpolate"]], "linear_interpolate() (in module hypercoil.functional.interpolate)": [[42, "hypercoil.functional.interpolate.linear_interpolate"]], "spectral_interpolate() (in module hypercoil.functional.interpolate)": [[43, "hypercoil.functional.interpolate.spectral_interpolate"]], "weighted_interpolate() (in module hypercoil.functional.interpolate)": [[44, "hypercoil.functional.interpolate.weighted_interpolate"]], "hypercoil.functional.kernel": [[45, "module-hypercoil.functional.kernel"]], "corr_kernel() (in module hypercoil.functional.kernel)": [[46, "hypercoil.functional.kernel.corr_kernel"]], "cosine_kernel() (in module hypercoil.functional.kernel)": [[47, "hypercoil.functional.kernel.cosine_kernel"]], "cov_kernel() (in module hypercoil.functional.kernel)": [[48, "hypercoil.functional.kernel.cov_kernel"]], "gaussian_kernel() (in module hypercoil.functional.kernel)": [[49, "hypercoil.functional.kernel.gaussian_kernel"]], "linear_distance() (in module hypercoil.functional.kernel)": [[50, "hypercoil.functional.kernel.linear_distance"]], "linear_kernel() (in module hypercoil.functional.kernel)": [[51, "hypercoil.functional.kernel.linear_kernel"]], "param_norm() (in module hypercoil.functional.kernel)": [[52, "hypercoil.functional.kernel.param_norm"]], "polynomial_kernel() (in module hypercoil.functional.kernel)": [[53, "hypercoil.functional.kernel.polynomial_kernel"]], "rbf_kernel() (in module hypercoil.functional.kernel)": [[54, "hypercoil.functional.kernel.rbf_kernel"]], "sigmoid_kernel() (in module hypercoil.functional.kernel)": [[55, "hypercoil.functional.kernel.sigmoid_kernel"]], "hypercoil.functional.matrix": [[56, "module-hypercoil.functional.matrix"]], "cholesky_invert() (in module hypercoil.functional.matrix)": [[57, "hypercoil.functional.matrix.cholesky_invert"]], "delete_diagonal() (in module hypercoil.functional.matrix)": [[58, "hypercoil.functional.matrix.delete_diagonal"]], "diag_embed() (in module hypercoil.functional.matrix)": [[59, "hypercoil.functional.matrix.diag_embed"]], "expand_outer() (in module hypercoil.functional.matrix)": [[60, "hypercoil.functional.matrix.expand_outer"]], "fill_diagonal() (in module hypercoil.functional.matrix)": [[61, "hypercoil.functional.matrix.fill_diagonal"]], "recondition_eigenspaces() (in module hypercoil.functional.matrix)": [[62, "hypercoil.functional.matrix.recondition_eigenspaces"]], "spd() (in module hypercoil.functional.matrix)": [[63, "hypercoil.functional.matrix.spd"]], "squareform() (in module hypercoil.functional.matrix)": [[64, "hypercoil.functional.matrix.squareform"]], "sym2vec() (in module hypercoil.functional.matrix)": [[65, "hypercoil.functional.matrix.sym2vec"]], "symmetric() (in module hypercoil.functional.matrix)": [[66, "hypercoil.functional.matrix.symmetric"]], "toeplitz() (in module hypercoil.functional.matrix)": [[67, "hypercoil.functional.matrix.toeplitz"]], "toeplitz_2d() (in module hypercoil.functional.matrix)": [[68, "hypercoil.functional.matrix.toeplitz_2d"]], "vec2sym() (in module hypercoil.functional.matrix)": [[69, "hypercoil.functional.matrix.vec2sym"]], "residualise() (in module hypercoil.functional.resid)": [[70, "hypercoil.functional.resid.residualise"]], "hypercoil.functional.semidefinite": [[71, "module-hypercoil.functional.semidefinite"]], "cone_project_spd() (in module hypercoil.functional.semidefinite)": [[72, "hypercoil.functional.semidefinite.cone_project_spd"]], "mean_euc_spd() (in module hypercoil.functional.semidefinite)": [[73, "hypercoil.functional.semidefinite.mean_euc_spd"]], "mean_geom_spd() (in module hypercoil.functional.semidefinite)": [[74, "hypercoil.functional.semidefinite.mean_geom_spd"]], "mean_harm_spd() (in module hypercoil.functional.semidefinite)": [[75, "hypercoil.functional.semidefinite.mean_harm_spd"]], "mean_logeuc_spd() (in module hypercoil.functional.semidefinite)": [[76, "hypercoil.functional.semidefinite.mean_logeuc_spd"]], "tangent_project_spd() (in module hypercoil.functional.semidefinite)": [[77, "hypercoil.functional.semidefinite.tangent_project_spd"]], "hypercoil.functional.sparse": [[78, "module-hypercoil.functional.sparse"]], "as_topk() (in module hypercoil.functional.sparse)": [[79, "hypercoil.functional.sparse.as_topk"]], "block_serialise() (in module hypercoil.functional.sparse)": [[80, "hypercoil.functional.sparse.block_serialise"]], "dspdmm() (in module hypercoil.functional.sparse)": [[81, "hypercoil.functional.sparse.dspdmm"]], "full_as_topk() (in module hypercoil.functional.sparse)": [[82, "hypercoil.functional.sparse.full_as_topk"]], "random_sparse() (in module hypercoil.functional.sparse)": [[83, "hypercoil.functional.sparse.random_sparse"]], "select_indices() (in module hypercoil.functional.sparse)": [[84, "hypercoil.functional.sparse.select_indices"]], "sp_block_serialise() (in module hypercoil.functional.sparse)": [[85, "hypercoil.functional.sparse.sp_block_serialise"]], "sparse_astype() (in module hypercoil.functional.sparse)": [[86, "hypercoil.functional.sparse.sparse_astype"]], "spdiagmm() (in module hypercoil.functional.sparse)": [[87, "hypercoil.functional.sparse.spdiagmm"]], "splr_hadamard() (in module hypercoil.functional.sparse)": [[88, "hypercoil.functional.sparse.splr_hadamard"]], "spsp_innerpaired() (in module hypercoil.functional.sparse)": [[89, "hypercoil.functional.sparse.spsp_innerpaired"]], "spsp_pairdiff() (in module hypercoil.functional.sparse)": [[90, "hypercoil.functional.sparse.spsp_pairdiff"]], "spspmm() (in module hypercoil.functional.sparse)": [[91, "hypercoil.functional.sparse.spspmm"]], "spspmm_full() (in module hypercoil.functional.sparse)": [[92, "hypercoil.functional.sparse.spspmm_full"]], "topk() (in module hypercoil.functional.sparse)": [[93, "hypercoil.functional.sparse.topk"]], "topk_diagzero() (in module hypercoil.functional.sparse)": [[95, "hypercoil.functional.sparse.topk_diagzero"]], "topk_to_bcoo() (in module hypercoil.functional.sparse)": [[96, "hypercoil.functional.sparse.topk_to_bcoo"]], "topkx() (in module hypercoil.functional.sparse)": [[97, "hypercoil.functional.sparse.topkx"]], "trace_spspmm() (in module hypercoil.functional.sparse)": [[98, "hypercoil.functional.sparse.trace_spspmm"]], "hypercoil.functional.sphere": [[99, "module-hypercoil.functional.sphere"]], "euclidean_conv() (in module hypercoil.functional.sphere)": [[100, "hypercoil.functional.sphere.euclidean_conv"]], "spatial_conv() (in module hypercoil.functional.sphere)": [[101, "hypercoil.functional.sphere.spatial_conv"]], "sphere_to_latlong() (in module hypercoil.functional.sphere)": [[102, "hypercoil.functional.sphere.sphere_to_latlong"]], "sphere_to_normals() (in module hypercoil.functional.sphere)": [[103, "hypercoil.functional.sphere.sphere_to_normals"]], "spherical_conv() (in module hypercoil.functional.sphere)": [[104, "hypercoil.functional.sphere.spherical_conv"]], "spherical_geodesic() (in module hypercoil.functional.sphere)": [[105, "hypercoil.functional.sphere.spherical_geodesic"]], "hypercoil.functional.sylo": [[106, "module-hypercoil.functional.sylo"]], "sylo() (in module hypercoil.functional.sylo)": [[106, "hypercoil.functional.sylo.sylo"]], "hypercoil.functional.symmap": [[107, "module-hypercoil.functional.symmap"]], "symexp() (in module hypercoil.functional.symmap)": [[108, "hypercoil.functional.symmap.symexp"]], "symlog() (in module hypercoil.functional.symmap)": [[109, "hypercoil.functional.symmap.symlog"]], "symmap() (in module hypercoil.functional.symmap)": [[110, "hypercoil.functional.symmap.symmap"]], "symsqrt() (in module hypercoil.functional.symmap)": [[111, "hypercoil.functional.symmap.symsqrt"]], "hypercoil.functional.tsconv": [[112, "module-hypercoil.functional.tsconv"]], "basischan() (in module hypercoil.functional.tsconv)": [[113, "hypercoil.functional.tsconv.basischan"]], "basisconv2d() (in module hypercoil.functional.tsconv)": [[114, "hypercoil.functional.tsconv.basisconv2d"]], "conv() (in module hypercoil.functional.tsconv)": [[115, "hypercoil.functional.tsconv.conv"]], "polychan() (in module hypercoil.functional.tsconv)": [[116, "hypercoil.functional.tsconv.polychan"]], "polyconv2d() (in module hypercoil.functional.tsconv)": [[117, "hypercoil.functional.tsconv.polyconv2d"]], "tsconv2d() (in module hypercoil.functional.tsconv)": [[118, "hypercoil.functional.tsconv.tsconv2d"]], "hypercoil.functional.utils": [[119, "module-hypercoil.functional.utils"]], "amplitude_apply() (in module hypercoil.functional.utils)": [[120, "hypercoil.functional.utils.amplitude_apply"]], "apply_mask() (in module hypercoil.functional.utils)": [[121, "hypercoil.functional.utils.apply_mask"]], "complex_decompose() (in module hypercoil.functional.utils)": [[122, "hypercoil.functional.utils.complex_decompose"]], "complex_recompose() (in module hypercoil.functional.utils)": [[123, "hypercoil.functional.utils.complex_recompose"]], "conform_mask() (in module hypercoil.functional.utils)": [[124, "hypercoil.functional.utils.conform_mask"]], "mask_tensor() (in module hypercoil.functional.utils)": [[125, "hypercoil.functional.utils.mask_tensor"]], "vertical_compression() (in module hypercoil.functional.sylo)": [[126, "hypercoil.functional.sylo.vertical_compression"]], "hypercoil.functional.window": [[127, "module-hypercoil.functional.window"]], "sample_nonoverlapping_windows_existing_ax() (in module hypercoil.functional.window)": [[128, "hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax"]], "sample_nonoverlapping_windows_new_ax() (in module hypercoil.functional.window)": [[129, "hypercoil.functional.window.sample_nonoverlapping_windows_new_ax"]], "sample_overlapping_windows_existing_ax() (in module hypercoil.functional.window)": [[130, "hypercoil.functional.window.sample_overlapping_windows_existing_ax"]], "sample_overlapping_windows_new_ax() (in module hypercoil.functional.window)": [[131, "hypercoil.functional.window.sample_overlapping_windows_new_ax"]], "sample_windows() (in module hypercoil.functional.window)": [[132, "hypercoil.functional.window.sample_windows"]], "hypercoil.init.atlas": [[133, "module-hypercoil.init.atlas"]], "atlasinitialiser (class in hypercoil.init.atlas)": [[134, "hypercoil.init.atlas.AtlasInitialiser"]], "__call__() (hypercoil.init.atlas.atlasinitialiser method)": [[134, "hypercoil.init.atlas.AtlasInitialiser.__call__"]], "baseatlas (class in hypercoil.init.atlas)": [[135, "hypercoil.init.atlas.BaseAtlas"]], "__call__() (hypercoil.init.atlas.baseatlas method)": [[135, "hypercoil.init.atlas.BaseAtlas.__call__"]], "cortexsubcortexciftiatlas (class in hypercoil.init.atlas)": [[136, "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas"]], "__call__() (hypercoil.init.atlas.cortexsubcortexciftiatlas method)": [[136, "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.__call__"]], "to_image() (hypercoil.init.atlas.cortexsubcortexciftiatlas method)": [[136, "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.to_image"]], "dirichletinitbaseatlas (class in hypercoil.init.atlas)": [[137, "hypercoil.init.atlas.DirichletInitBaseAtlas"]], "__call__() (hypercoil.init.atlas.dirichletinitbaseatlas method)": [[137, "hypercoil.init.atlas.DirichletInitBaseAtlas.__call__"]], "dirichletinitsurfaceatlas (class in hypercoil.init.atlas)": [[138, "hypercoil.init.atlas.DirichletInitSurfaceAtlas"]], "__call__() (hypercoil.init.atlas.dirichletinitsurfaceatlas method)": [[138, "hypercoil.init.atlas.DirichletInitSurfaceAtlas.__call__"]], "to_image() (hypercoil.init.atlas.dirichletinitsurfaceatlas method)": [[138, "hypercoil.init.atlas.DirichletInitSurfaceAtlas.to_image"]], "dirichletinitvolumetricatlas (class in hypercoil.init.atlas)": [[139, "hypercoil.init.atlas.DirichletInitVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.dirichletinitvolumetricatlas method)": [[139, "hypercoil.init.atlas.DirichletInitVolumetricAtlas.__call__"]], "discretevolumetricatlas (class in hypercoil.init.atlas)": [[140, "hypercoil.init.atlas.DiscreteVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.discretevolumetricatlas method)": [[140, "hypercoil.init.atlas.DiscreteVolumetricAtlas.__call__"]], "multivolumetricatlas (class in hypercoil.init.atlas)": [[141, "hypercoil.init.atlas.MultiVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.multivolumetricatlas method)": [[141, "hypercoil.init.atlas.MultiVolumetricAtlas.__call__"]], "multifilevolumetricatlas (class in hypercoil.init.atlas)": [[142, "hypercoil.init.atlas.MultifileVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.multifilevolumetricatlas method)": [[142, "hypercoil.init.atlas.MultifileVolumetricAtlas.__call__"]], "compartment (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.Compartment"]], "compartmentset (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.CompartmentSet"]], "mask (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.Mask"]], "reference (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.Reference"]], "_ciftireferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CIfTIReferenceMixin"]], "_continuouslabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._ContinuousLabelMixin"]], "_cortexsubcortexcifticompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CortexSubcortexCIfTICompartmentMixin"]], "_cortexsubcortexciftimaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CortexSubcortexCIfTIMaskMixin"]], "_dirichletlabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._DirichletLabelMixin"]], "_discretelabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._DiscreteLabelMixin"]], "_evenlysampledconvmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._EvenlySampledConvMixin"]], "_fromnullmaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._FromNullMaskMixin"]], "_logicmaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._LogicMaskMixin"]], "_multicompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._MultiCompartmentMixin"]], "_phantomreferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._PhantomReferenceMixin"]], "_singlecompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SingleCompartmentMixin"]], "_spatialconvmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SpatialConvMixin"]], "_surfaceobjectreferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SurfaceObjectReferenceMixin"]], "_surfacesinglereferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SurfaceSingleReferenceMixin"]], "_vertexciftimeshmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VertexCIfTIMeshMixin"]], "_volumemultireferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumeMultiReferenceMixin"]], "_volumeobjectreferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumeObjectReferenceMixin"]], "_volumesinglereferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumeSingleReferenceMixin"]], "_volumetricmeshmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumetricMeshMixin"]], "hypercoil.init.atlasmixins": [[143, "module-hypercoil.init.atlasmixins"]], "hypercoil.init.base": [[144, "module-hypercoil.init.base"]], "constantinitialiser() (in module hypercoil.init.base)": [[145, "hypercoil.init.base.ConstantInitialiser"]], "distributioninitialiser() (in module hypercoil.init.base)": [[146, "hypercoil.init.base.DistributionInitialiser"]], "identityinitialiser (class in hypercoil.init.base)": [[147, "hypercoil.init.base.IdentityInitialiser"]], "mappedinitialiser (class in hypercoil.init.base)": [[148, "hypercoil.init.base.MappedInitialiser"]], "constant_init() (in module hypercoil.init.base)": [[149, "hypercoil.init.base.constant_init"]], "from_distr_init() (in module hypercoil.init.base)": [[150, "hypercoil.init.base.from_distr_init"]], "identity_init() (in module hypercoil.init.base)": [[151, "hypercoil.init.base.identity_init"]], "deltaplusinitialiser (class in hypercoil.init.deltaplus)": [[152, "hypercoil.init.deltaplus.DeltaPlusInitialiser"]], "deltaplus_init() (in module hypercoil.init.deltaplus)": [[152, "hypercoil.init.deltaplus.deltaplus_init"]], "hypercoil.init.deltaplus": [[152, "module-hypercoil.init.deltaplus"]], "dirichletinitialiser (class in hypercoil.init.dirichlet)": [[153, "hypercoil.init.dirichlet.DirichletInitialiser"]], "dirichlet_init() (in module hypercoil.init.dirichlet)": [[153, "hypercoil.init.dirichlet.dirichlet_init"]], "hypercoil.init.dirichlet": [[153, "module-hypercoil.init.dirichlet"]], "hypercoil.init.freqfilter": [[154, "module-hypercoil.init.freqfilter"]], "freqfilterspec (class in hypercoil.init.freqfilter)": [[155, "hypercoil.init.freqfilter.FreqFilterSpec"]], "get_clamps() (hypercoil.init.freqfilter.freqfilterspec method)": [[155, "hypercoil.init.freqfilter.FreqFilterSpec.get_clamps"]], "initialise_spectrum() (hypercoil.init.freqfilter.freqfilterspec method)": [[155, "hypercoil.init.freqfilter.FreqFilterSpec.initialise_spectrum"]], "clamp_init() (in module hypercoil.init.freqfilter)": [[156, "hypercoil.init.freqfilter.clamp_init"]], "freqfilter_init() (in module hypercoil.init.freqfilter)": [[157, "hypercoil.init.freqfilter.freqfilter_init"]], "iirfilterspec (class in hypercoil.init.iirfilter)": [[158, "hypercoil.init.iirfilter.IIRFilterSpec"]], "hypercoil.init.iirfilter": [[158, "module-hypercoil.init.iirfilter"]], "initialise_coefs() (hypercoil.init.iirfilter.iirfilterspec method)": [[158, "hypercoil.init.iirfilter.IIRFilterSpec.initialise_coefs"]], "laplaceinitialiser (class in hypercoil.init.laplace)": [[159, "hypercoil.init.laplace.LaplaceInitialiser"]], "hypercoil.init.laplace": [[159, "module-hypercoil.init.laplace"]], "laplace_init() (in module hypercoil.init.laplace)": [[159, "hypercoil.init.laplace.laplace_init"]], "hypercoil.init.mapparam": [[160, "module-hypercoil.init.mapparam"]], "affinemappedparameter (class in hypercoil.init.mapparam)": [[161, "hypercoil.init.mapparam.AffineMappedParameter"]], "amplitudeprobabilitysimplexparameter (class in hypercoil.init.mapparam)": [[162, "hypercoil.init.mapparam.AmplitudeProbabilitySimplexParameter"]], "amplitudetanhmappedparameter (class in hypercoil.init.mapparam)": [[163, "hypercoil.init.mapparam.AmplitudeTanhMappedParameter"]], "clip (class in hypercoil.init.mapparam)": [[164, "hypercoil.init.mapparam.Clip"]], "domainmappedparameter (class in hypercoil.init.mapparam)": [[165, "hypercoil.init.mapparam.DomainMappedParameter"]], "forcepositivedefinite (class in hypercoil.init.mapparam)": [[166, "hypercoil.init.mapparam.ForcePositiveDefinite"]], "identitymappedparameter (class in hypercoil.init.mapparam)": [[167, "hypercoil.init.mapparam.IdentityMappedParameter"]], "isochoricparameter (class in hypercoil.init.mapparam)": [[168, "hypercoil.init.mapparam.IsochoricParameter"]], "mappedlogits (class in hypercoil.init.mapparam)": [[169, "hypercoil.init.mapparam.MappedLogits"]], "mappedparameter (class in hypercoil.init.mapparam)": [[170, "hypercoil.init.mapparam.MappedParameter"]], "normsphereparameter (class in hypercoil.init.mapparam)": [[171, "hypercoil.init.mapparam.NormSphereParameter"]], "orthogonalparameter (class in hypercoil.init.mapparam)": [[172, "hypercoil.init.mapparam.OrthogonalParameter"]], "phaseamplitudemixin (class in hypercoil.init.mapparam)": [[173, "hypercoil.init.mapparam.PhaseAmplitudeMixin"]], "probabilitysimplexparameter (class in hypercoil.init.mapparam)": [[174, "hypercoil.init.mapparam.ProbabilitySimplexParameter"]], "renormalise (class in hypercoil.init.mapparam)": [[175, "hypercoil.init.mapparam.Renormalise"]], "tanhmappedparameter (class in hypercoil.init.mapparam)": [[176, "hypercoil.init.mapparam.TanhMappedParameter"]], "hypercoil.init.mpbl": [[177, "module-hypercoil.init.mpbl"]], "maximum_potential_bipartite_lattice() (in module hypercoil.init.mpbl)": [[177, "hypercoil.init.mpbl.maximum_potential_bipartite_lattice"]], "hypercoil.engine": [[274, "module-hypercoil.engine"]], "hypercoil.functional": [[276, "module-hypercoil.functional"]]}})