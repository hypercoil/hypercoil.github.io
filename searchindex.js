Search.setIndex({"docnames": ["api/hypercoil.engine.axisutil.orient_and_conform", "api/hypercoil.functional.activation", "api/hypercoil.functional.activation.amplitude_atanh", "api/hypercoil.functional.activation.amplitude_tanh", "api/hypercoil.functional.activation.corrnorm", "api/hypercoil.functional.activation.isochor", "api/hypercoil.functional.cmass", "api/hypercoil.functional.cmass.cmass", "api/hypercoil.functional.cmass.cmass_coor", "api/hypercoil.functional.cmass.cmass_reference", "api/hypercoil.functional.cmass.diffuse", "api/hypercoil.functional.connectopy", "api/hypercoil.functional.connectopy.diffusion_mapping", "api/hypercoil.functional.connectopy.laplacian_eigenmaps", "api/hypercoil.functional.cov", "api/hypercoil.functional.cov.conditionalcorr", "api/hypercoil.functional.cov.conditionalcov", "api/hypercoil.functional.cov.corr", "api/hypercoil.functional.cov.cov", "api/hypercoil.functional.cov.pairedcorr", "api/hypercoil.functional.cov.pairedcov", "api/hypercoil.functional.cov.partialcorr", "api/hypercoil.functional.cov.partialcov", "api/hypercoil.functional.cov.precision", "api/hypercoil.functional.fourier", "api/hypercoil.functional.fourier.analytic_signal", "api/hypercoil.functional.fourier.env_inst", "api/hypercoil.functional.fourier.envelope", "api/hypercoil.functional.fourier.hilbert_transform", "api/hypercoil.functional.fourier.instantaneous_frequency", "api/hypercoil.functional.fourier.instantaneous_phase", "api/hypercoil.functional.fourier.product_filter", "api/hypercoil.functional.fourier.product_filtfilt", "api/hypercoil.functional.fourier.unwrap", "api/hypercoil.functional.graph", "api/hypercoil.functional.graph.coaffiliation", "api/hypercoil.functional.graph.girvan_newman_null", "api/hypercoil.functional.graph.graph_laplacian", "api/hypercoil.functional.graph.modularity_matrix", "api/hypercoil.functional.graph.relaxed_modularity", "api/hypercoil.functional.interpolate", "api/hypercoil.functional.interpolate.hybrid_interpolate", "api/hypercoil.functional.interpolate.linear_interpolate", "api/hypercoil.functional.interpolate.spectral_interpolate", "api/hypercoil.functional.interpolate.weighted_interpolate", "api/hypercoil.functional.kernel", "api/hypercoil.functional.kernel.corr_kernel", "api/hypercoil.functional.kernel.cosine_kernel", "api/hypercoil.functional.kernel.cov_kernel", "api/hypercoil.functional.kernel.gaussian_kernel", "api/hypercoil.functional.kernel.linear_distance", "api/hypercoil.functional.kernel.linear_kernel", "api/hypercoil.functional.kernel.param_norm", "api/hypercoil.functional.kernel.polynomial_kernel", "api/hypercoil.functional.kernel.rbf_kernel", "api/hypercoil.functional.kernel.sigmoid_kernel", "api/hypercoil.functional.matrix", "api/hypercoil.functional.matrix.cholesky_invert", "api/hypercoil.functional.matrix.delete_diagonal", "api/hypercoil.functional.matrix.diag_embed", "api/hypercoil.functional.matrix.expand_outer", "api/hypercoil.functional.matrix.fill_diagonal", "api/hypercoil.functional.matrix.recondition_eigenspaces", "api/hypercoil.functional.matrix.spd", "api/hypercoil.functional.matrix.squareform", "api/hypercoil.functional.matrix.sym2vec", "api/hypercoil.functional.matrix.symmetric", "api/hypercoil.functional.matrix.toeplitz", "api/hypercoil.functional.matrix.toeplitz_2d", "api/hypercoil.functional.matrix.vec2sym", "api/hypercoil.functional.resid.residualise", "api/hypercoil.functional.semidefinite", "api/hypercoil.functional.semidefinite.cone_project_spd", "api/hypercoil.functional.semidefinite.mean_euc_spd", "api/hypercoil.functional.semidefinite.mean_geom_spd", "api/hypercoil.functional.semidefinite.mean_harm_spd", "api/hypercoil.functional.semidefinite.mean_logeuc_spd", "api/hypercoil.functional.semidefinite.tangent_project_spd", "api/hypercoil.functional.sparse", "api/hypercoil.functional.sparse.as_topk", "api/hypercoil.functional.sparse.block_serialise", "api/hypercoil.functional.sparse.dspdmm", "api/hypercoil.functional.sparse.full_as_topk", "api/hypercoil.functional.sparse.random_sparse", "api/hypercoil.functional.sparse.select_indices", "api/hypercoil.functional.sparse.sp_block_serialise", "api/hypercoil.functional.sparse.sparse_astype", "api/hypercoil.functional.sparse.spdiagmm", "api/hypercoil.functional.sparse.splr_hadamard", "api/hypercoil.functional.sparse.spsp_innerpaired", "api/hypercoil.functional.sparse.spsp_pairdiff", "api/hypercoil.functional.sparse.spspmm", "api/hypercoil.functional.sparse.spspmm_full", "api/hypercoil.functional.sparse.topk", "api/hypercoil.functional.sparse.topk_diagreplace", "api/hypercoil.functional.sparse.topk_diagzero", "api/hypercoil.functional.sparse.topk_to_bcoo", "api/hypercoil.functional.sparse.topkx", "api/hypercoil.functional.sparse.trace_spspmm", "api/hypercoil.functional.sphere", "api/hypercoil.functional.sphere.euclidean_conv", "api/hypercoil.functional.sphere.spatial_conv", "api/hypercoil.functional.sphere.sphere_to_latlong", "api/hypercoil.functional.sphere.sphere_to_normals", "api/hypercoil.functional.sphere.spherical_conv", "api/hypercoil.functional.sphere.spherical_geodesic", "api/hypercoil.functional.sylo", "api/hypercoil.functional.symmap", "api/hypercoil.functional.symmap.symexp", "api/hypercoil.functional.symmap.symlog", "api/hypercoil.functional.symmap.symmap", "api/hypercoil.functional.symmap.symsqrt", "api/hypercoil.functional.tsconv", "api/hypercoil.functional.tsconv.basischan", "api/hypercoil.functional.tsconv.basisconv2d", "api/hypercoil.functional.tsconv.conv", "api/hypercoil.functional.tsconv.polychan", "api/hypercoil.functional.tsconv.polyconv2d", "api/hypercoil.functional.tsconv.tsconv2d", "api/hypercoil.functional.utils", "api/hypercoil.functional.utils.amplitude_apply", "api/hypercoil.functional.utils.apply_mask", "api/hypercoil.functional.utils.complex_decompose", "api/hypercoil.functional.utils.complex_recompose", "api/hypercoil.functional.utils.conform_mask", "api/hypercoil.functional.utils.mask_tensor", "api/hypercoil.functional.vertcom.vertical_compression", "api/hypercoil.functional.window", "api/hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax", "api/hypercoil.functional.window.sample_nonoverlapping_windows_new_ax", "api/hypercoil.functional.window.sample_overlapping_windows_existing_ax", "api/hypercoil.functional.window.sample_overlapping_windows_new_ax", "api/hypercoil.functional.window.sample_windows", "api/hypercoil.init.atlas", "api/hypercoil.init.atlas.AtlasInitialiser", "api/hypercoil.init.atlas.BaseAtlas", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas", "api/hypercoil.init.atlas.DirichletInitBaseAtlas", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas", "api/hypercoil.init.atlas.MultiVolumetricAtlas", "api/hypercoil.init.atlas.MultifileVolumetricAtlas", "api/hypercoil.init.atlasmixins", "api/hypercoil.init.base", "api/hypercoil.init.base.ConstantInitialiser", "api/hypercoil.init.base.DistributionInitialiser", "api/hypercoil.init.base.IdentityInitialiser", "api/hypercoil.init.base.MappedInitialiser", "api/hypercoil.init.base.constant_init", "api/hypercoil.init.base.from_distr_init", "api/hypercoil.init.base.identity_init", "api/hypercoil.init.deltaplus", "api/hypercoil.init.dirichlet", "api/hypercoil.init.freqfilter", "api/hypercoil.init.freqfilter.FreqFilterSpec", "api/hypercoil.init.freqfilter.clamp_init_", "api/hypercoil.init.freqfilter.freqfilter_init_", "api/hypercoil.init.iirfilter", "api/hypercoil.init.laplace", "api/hypercoil.init.mapparam", "api/hypercoil.init.mapparam.AffineMappedParameter", "api/hypercoil.init.mapparam.AmplitudeProbabilitySimplexParameter", "api/hypercoil.init.mapparam.AmplitudeTanhMappedParameter", "api/hypercoil.init.mapparam.Clip", "api/hypercoil.init.mapparam.DomainMappedParameter", "api/hypercoil.init.mapparam.ForcePositiveDefinite", "api/hypercoil.init.mapparam.IdentityMappedParameter", "api/hypercoil.init.mapparam.IsochoricParameter", "api/hypercoil.init.mapparam.MappedLogits", "api/hypercoil.init.mapparam.MappedParameter", "api/hypercoil.init.mapparam.NormSphereParameter", "api/hypercoil.init.mapparam.OrthogonalParameter", "api/hypercoil.init.mapparam.PhaseAmplitudeMixin", "api/hypercoil.init.mapparam.ProbabilitySimplexParameter", "api/hypercoil.init.mapparam.Renormalise", "api/hypercoil.init.mapparam.TanhMappedParameter", "api/hypercoil.init.mpbl", "api/hypercoil.init.semidefinite", "api/hypercoil.init.semidefinite.SemidefiniteMean", "api/hypercoil.init.semidefinite.TangencyInitialiser", "api/hypercoil.init.sylo", "api/hypercoil.init.toeplitz", "api/hypercoil.loss.Loss", "api/hypercoil.loss.MSELoss", "api/hypercoil.loss.NormedLoss", "api/hypercoil.loss.ParameterisedLoss", "api/hypercoil.loss.auto_tol", "api/hypercoil.loss.batch_corr", "api/hypercoil.loss.bimodal_symmetric", "api/hypercoil.loss.bregman_divergence", "api/hypercoil.loss.compactness", "api/hypercoil.loss.connectopy", "api/hypercoil.loss.constraint_violation", "api/hypercoil.loss.det_gram", "api/hypercoil.loss.difference", "api/hypercoil.loss.dispersion", "api/hypercoil.loss.entropy", "api/hypercoil.loss.equilibrium", "api/hypercoil.loss.hinge_loss", "api/hypercoil.loss.identity", "api/hypercoil.loss.interhemispheric_tether", "api/hypercoil.loss.js_divergence", "api/hypercoil.loss.kl_divergence", "api/hypercoil.loss.log_det_gram", "api/hypercoil.loss.modularity", "api/hypercoil.loss.multivariate_kurtosis", "api/hypercoil.loss.qcfc", "api/hypercoil.loss.reference_tether", "api/hypercoil.loss.scalarise.max_scalarise", "api/hypercoil.loss.scalarise.mean_scalarise", "api/hypercoil.loss.scalarise.meansq_scalarise", "api/hypercoil.loss.scalarise.norm_scalarise", "api/hypercoil.loss.scalarise.selfwmean_scalarise", "api/hypercoil.loss.scalarise.sum_scalarise", "api/hypercoil.loss.scalarise.vnorm_scalarise", "api/hypercoil.loss.scalarise.wmean", "api/hypercoil.loss.scalarise.wmean_scalarise", "api/hypercoil.loss.scheme.LossApply", "api/hypercoil.loss.scheme.LossScheme", "api/hypercoil.loss.second_moment", "api/hypercoil.loss.smoothness", "api/hypercoil.loss.unilateral_loss", "api/hypercoil.loss.zero", "api/hypercoil.neuro.synth", "api/hypercoil.neuro.synth.match_cov_and_spectrum", "api/hypercoil.neuro.synth.match_covariance", "api/hypercoil.neuro.synth.match_reference", "api/hypercoil.neuro.synth.match_spectra", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum", "api/hypercoil.neuro.synth.synthesise_matched", "api/hypercoil.nn.activation", "api/hypercoil.nn.activation.CorrelationNorm", "api/hypercoil.nn.activation.Isochor", "api/hypercoil.nn.atlas", "api/hypercoil.nn.atlas.AtlasLinear", "api/hypercoil.nn.confound", "api/hypercoil.nn.confound.EliminationSelector", "api/hypercoil.nn.confound.LinearCombinationSelector", "api/hypercoil.nn.confound.LinearRFNN", "api/hypercoil.nn.cov", "api/hypercoil.nn.cov.BaseCovariance", "api/hypercoil.nn.cov.BinaryCovariance", "api/hypercoil.nn.cov.BinaryCovarianceTW", "api/hypercoil.nn.cov.BinaryCovarianceUW", "api/hypercoil.nn.cov.UnaryCovariance", "api/hypercoil.nn.cov.UnaryCovarianceTW", "api/hypercoil.nn.cov.UnaryCovarianceUW", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter", "api/hypercoil.nn.iirfilter", "api/hypercoil.nn.interpolate", "api/hypercoil.nn.interpolate.HybridInterpolate", "api/hypercoil.nn.interpolate.LinearInterpolate", "api/hypercoil.nn.interpolate.SpectralInterpolate", "api/hypercoil.nn.recombinator", "api/hypercoil.nn.recombinator.Recombinator", "api/hypercoil.nn.resid.Residualise", "api/hypercoil.nn.semidefinite", "api/hypercoil.nn.semidefinite.BatchTangentProject", "api/hypercoil.nn.semidefinite.TangentProject", "api/hypercoil.nn.spdnoise.SPDNoise", "api/hypercoil.nn.svm.SVM", "api/hypercoil.nn.sylo", "api/hypercoil.nn.sylo.Sylo", "api/hypercoil.nn.sylo.SyloResNet", "api/hypercoil.nn.tsconv", "api/hypercoil.nn.tsconv.BasisConv2D", "api/hypercoil.nn.tsconv.PolyConv2D", "api/hypercoil.nn.tsconv.TimeSeriesConv2D", "api/hypercoil.nn.vertcom", "api/hypercoil.nn.vertcom.VerticalCompression", "api/hypercoil.nn.window.WindowAmplifier", "diffprog", "engine", "examples", "functional", "index", "init", "installation", "loss", "modules", "neuro", "nn", "overview", "portal"], "filenames": ["api/hypercoil.engine.axisutil.orient_and_conform.rst", "api/hypercoil.functional.activation.rst", "api/hypercoil.functional.activation.amplitude_atanh.rst", "api/hypercoil.functional.activation.amplitude_tanh.rst", "api/hypercoil.functional.activation.corrnorm.rst", "api/hypercoil.functional.activation.isochor.rst", "api/hypercoil.functional.cmass.rst", "api/hypercoil.functional.cmass.cmass.rst", "api/hypercoil.functional.cmass.cmass_coor.rst", "api/hypercoil.functional.cmass.cmass_reference.rst", "api/hypercoil.functional.cmass.diffuse.rst", "api/hypercoil.functional.connectopy.rst", "api/hypercoil.functional.connectopy.diffusion_mapping.rst", "api/hypercoil.functional.connectopy.laplacian_eigenmaps.rst", "api/hypercoil.functional.cov.rst", "api/hypercoil.functional.cov.conditionalcorr.rst", "api/hypercoil.functional.cov.conditionalcov.rst", "api/hypercoil.functional.cov.corr.rst", "api/hypercoil.functional.cov.cov.rst", "api/hypercoil.functional.cov.pairedcorr.rst", "api/hypercoil.functional.cov.pairedcov.rst", "api/hypercoil.functional.cov.partialcorr.rst", "api/hypercoil.functional.cov.partialcov.rst", "api/hypercoil.functional.cov.precision.rst", "api/hypercoil.functional.fourier.rst", "api/hypercoil.functional.fourier.analytic_signal.rst", "api/hypercoil.functional.fourier.env_inst.rst", "api/hypercoil.functional.fourier.envelope.rst", "api/hypercoil.functional.fourier.hilbert_transform.rst", "api/hypercoil.functional.fourier.instantaneous_frequency.rst", "api/hypercoil.functional.fourier.instantaneous_phase.rst", "api/hypercoil.functional.fourier.product_filter.rst", "api/hypercoil.functional.fourier.product_filtfilt.rst", "api/hypercoil.functional.fourier.unwrap.rst", "api/hypercoil.functional.graph.rst", "api/hypercoil.functional.graph.coaffiliation.rst", "api/hypercoil.functional.graph.girvan_newman_null.rst", "api/hypercoil.functional.graph.graph_laplacian.rst", "api/hypercoil.functional.graph.modularity_matrix.rst", "api/hypercoil.functional.graph.relaxed_modularity.rst", "api/hypercoil.functional.interpolate.rst", "api/hypercoil.functional.interpolate.hybrid_interpolate.rst", "api/hypercoil.functional.interpolate.linear_interpolate.rst", "api/hypercoil.functional.interpolate.spectral_interpolate.rst", "api/hypercoil.functional.interpolate.weighted_interpolate.rst", "api/hypercoil.functional.kernel.rst", "api/hypercoil.functional.kernel.corr_kernel.rst", "api/hypercoil.functional.kernel.cosine_kernel.rst", "api/hypercoil.functional.kernel.cov_kernel.rst", "api/hypercoil.functional.kernel.gaussian_kernel.rst", "api/hypercoil.functional.kernel.linear_distance.rst", "api/hypercoil.functional.kernel.linear_kernel.rst", "api/hypercoil.functional.kernel.param_norm.rst", "api/hypercoil.functional.kernel.polynomial_kernel.rst", "api/hypercoil.functional.kernel.rbf_kernel.rst", "api/hypercoil.functional.kernel.sigmoid_kernel.rst", "api/hypercoil.functional.matrix.rst", "api/hypercoil.functional.matrix.cholesky_invert.rst", "api/hypercoil.functional.matrix.delete_diagonal.rst", "api/hypercoil.functional.matrix.diag_embed.rst", "api/hypercoil.functional.matrix.expand_outer.rst", "api/hypercoil.functional.matrix.fill_diagonal.rst", "api/hypercoil.functional.matrix.recondition_eigenspaces.rst", "api/hypercoil.functional.matrix.spd.rst", "api/hypercoil.functional.matrix.squareform.rst", "api/hypercoil.functional.matrix.sym2vec.rst", "api/hypercoil.functional.matrix.symmetric.rst", "api/hypercoil.functional.matrix.toeplitz.rst", "api/hypercoil.functional.matrix.toeplitz_2d.rst", "api/hypercoil.functional.matrix.vec2sym.rst", "api/hypercoil.functional.resid.residualise.rst", "api/hypercoil.functional.semidefinite.rst", "api/hypercoil.functional.semidefinite.cone_project_spd.rst", "api/hypercoil.functional.semidefinite.mean_euc_spd.rst", "api/hypercoil.functional.semidefinite.mean_geom_spd.rst", "api/hypercoil.functional.semidefinite.mean_harm_spd.rst", "api/hypercoil.functional.semidefinite.mean_logeuc_spd.rst", "api/hypercoil.functional.semidefinite.tangent_project_spd.rst", "api/hypercoil.functional.sparse.rst", "api/hypercoil.functional.sparse.as_topk.rst", "api/hypercoil.functional.sparse.block_serialise.rst", "api/hypercoil.functional.sparse.dspdmm.rst", "api/hypercoil.functional.sparse.full_as_topk.rst", "api/hypercoil.functional.sparse.random_sparse.rst", "api/hypercoil.functional.sparse.select_indices.rst", "api/hypercoil.functional.sparse.sp_block_serialise.rst", "api/hypercoil.functional.sparse.sparse_astype.rst", "api/hypercoil.functional.sparse.spdiagmm.rst", "api/hypercoil.functional.sparse.splr_hadamard.rst", "api/hypercoil.functional.sparse.spsp_innerpaired.rst", "api/hypercoil.functional.sparse.spsp_pairdiff.rst", "api/hypercoil.functional.sparse.spspmm.rst", "api/hypercoil.functional.sparse.spspmm_full.rst", "api/hypercoil.functional.sparse.topk.rst", "api/hypercoil.functional.sparse.topk_diagreplace.rst", "api/hypercoil.functional.sparse.topk_diagzero.rst", "api/hypercoil.functional.sparse.topk_to_bcoo.rst", "api/hypercoil.functional.sparse.topkx.rst", "api/hypercoil.functional.sparse.trace_spspmm.rst", "api/hypercoil.functional.sphere.rst", "api/hypercoil.functional.sphere.euclidean_conv.rst", "api/hypercoil.functional.sphere.spatial_conv.rst", "api/hypercoil.functional.sphere.sphere_to_latlong.rst", "api/hypercoil.functional.sphere.sphere_to_normals.rst", "api/hypercoil.functional.sphere.spherical_conv.rst", "api/hypercoil.functional.sphere.spherical_geodesic.rst", "api/hypercoil.functional.sylo.rst", "api/hypercoil.functional.symmap.rst", "api/hypercoil.functional.symmap.symexp.rst", "api/hypercoil.functional.symmap.symlog.rst", "api/hypercoil.functional.symmap.symmap.rst", "api/hypercoil.functional.symmap.symsqrt.rst", "api/hypercoil.functional.tsconv.rst", "api/hypercoil.functional.tsconv.basischan.rst", "api/hypercoil.functional.tsconv.basisconv2d.rst", "api/hypercoil.functional.tsconv.conv.rst", "api/hypercoil.functional.tsconv.polychan.rst", "api/hypercoil.functional.tsconv.polyconv2d.rst", "api/hypercoil.functional.tsconv.tsconv2d.rst", "api/hypercoil.functional.utils.rst", "api/hypercoil.functional.utils.amplitude_apply.rst", "api/hypercoil.functional.utils.apply_mask.rst", "api/hypercoil.functional.utils.complex_decompose.rst", "api/hypercoil.functional.utils.complex_recompose.rst", "api/hypercoil.functional.utils.conform_mask.rst", "api/hypercoil.functional.utils.mask_tensor.rst", "api/hypercoil.functional.vertcom.vertical_compression.rst", "api/hypercoil.functional.window.rst", "api/hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax.rst", "api/hypercoil.functional.window.sample_nonoverlapping_windows_new_ax.rst", "api/hypercoil.functional.window.sample_overlapping_windows_existing_ax.rst", "api/hypercoil.functional.window.sample_overlapping_windows_new_ax.rst", "api/hypercoil.functional.window.sample_windows.rst", "api/hypercoil.init.atlas.rst", "api/hypercoil.init.atlas.AtlasInitialiser.rst", "api/hypercoil.init.atlas.BaseAtlas.rst", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.rst", "api/hypercoil.init.atlas.DirichletInitBaseAtlas.rst", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas.rst", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas.rst", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultiVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultifileVolumetricAtlas.rst", "api/hypercoil.init.atlasmixins.rst", "api/hypercoil.init.base.rst", "api/hypercoil.init.base.ConstantInitialiser.rst", "api/hypercoil.init.base.DistributionInitialiser.rst", "api/hypercoil.init.base.IdentityInitialiser.rst", "api/hypercoil.init.base.MappedInitialiser.rst", "api/hypercoil.init.base.constant_init.rst", "api/hypercoil.init.base.from_distr_init.rst", "api/hypercoil.init.base.identity_init.rst", "api/hypercoil.init.deltaplus.rst", "api/hypercoil.init.dirichlet.rst", "api/hypercoil.init.freqfilter.rst", "api/hypercoil.init.freqfilter.FreqFilterSpec.rst", "api/hypercoil.init.freqfilter.clamp_init_.rst", "api/hypercoil.init.freqfilter.freqfilter_init_.rst", "api/hypercoil.init.iirfilter.rst", "api/hypercoil.init.laplace.rst", "api/hypercoil.init.mapparam.rst", "api/hypercoil.init.mapparam.AffineMappedParameter.rst", "api/hypercoil.init.mapparam.AmplitudeProbabilitySimplexParameter.rst", "api/hypercoil.init.mapparam.AmplitudeTanhMappedParameter.rst", "api/hypercoil.init.mapparam.Clip.rst", "api/hypercoil.init.mapparam.DomainMappedParameter.rst", "api/hypercoil.init.mapparam.ForcePositiveDefinite.rst", "api/hypercoil.init.mapparam.IdentityMappedParameter.rst", "api/hypercoil.init.mapparam.IsochoricParameter.rst", "api/hypercoil.init.mapparam.MappedLogits.rst", "api/hypercoil.init.mapparam.MappedParameter.rst", "api/hypercoil.init.mapparam.NormSphereParameter.rst", "api/hypercoil.init.mapparam.OrthogonalParameter.rst", "api/hypercoil.init.mapparam.PhaseAmplitudeMixin.rst", "api/hypercoil.init.mapparam.ProbabilitySimplexParameter.rst", "api/hypercoil.init.mapparam.Renormalise.rst", "api/hypercoil.init.mapparam.TanhMappedParameter.rst", "api/hypercoil.init.mpbl.rst", "api/hypercoil.init.semidefinite.rst", "api/hypercoil.init.semidefinite.SemidefiniteMean.rst", "api/hypercoil.init.semidefinite.TangencyInitialiser.rst", "api/hypercoil.init.sylo.rst", "api/hypercoil.init.toeplitz.rst", "api/hypercoil.loss.Loss.rst", "api/hypercoil.loss.MSELoss.rst", "api/hypercoil.loss.NormedLoss.rst", "api/hypercoil.loss.ParameterisedLoss.rst", "api/hypercoil.loss.auto_tol.rst", "api/hypercoil.loss.batch_corr.rst", "api/hypercoil.loss.bimodal_symmetric.rst", "api/hypercoil.loss.bregman_divergence.rst", "api/hypercoil.loss.compactness.rst", "api/hypercoil.loss.connectopy.rst", "api/hypercoil.loss.constraint_violation.rst", "api/hypercoil.loss.det_gram.rst", "api/hypercoil.loss.difference.rst", "api/hypercoil.loss.dispersion.rst", "api/hypercoil.loss.entropy.rst", "api/hypercoil.loss.equilibrium.rst", "api/hypercoil.loss.hinge_loss.rst", "api/hypercoil.loss.identity.rst", "api/hypercoil.loss.interhemispheric_tether.rst", "api/hypercoil.loss.js_divergence.rst", "api/hypercoil.loss.kl_divergence.rst", "api/hypercoil.loss.log_det_gram.rst", "api/hypercoil.loss.modularity.rst", "api/hypercoil.loss.multivariate_kurtosis.rst", "api/hypercoil.loss.qcfc.rst", "api/hypercoil.loss.reference_tether.rst", "api/hypercoil.loss.scalarise.max_scalarise.rst", "api/hypercoil.loss.scalarise.mean_scalarise.rst", "api/hypercoil.loss.scalarise.meansq_scalarise.rst", "api/hypercoil.loss.scalarise.norm_scalarise.rst", "api/hypercoil.loss.scalarise.selfwmean_scalarise.rst", "api/hypercoil.loss.scalarise.sum_scalarise.rst", "api/hypercoil.loss.scalarise.vnorm_scalarise.rst", "api/hypercoil.loss.scalarise.wmean.rst", "api/hypercoil.loss.scalarise.wmean_scalarise.rst", "api/hypercoil.loss.scheme.LossApply.rst", "api/hypercoil.loss.scheme.LossScheme.rst", "api/hypercoil.loss.second_moment.rst", "api/hypercoil.loss.smoothness.rst", "api/hypercoil.loss.unilateral_loss.rst", "api/hypercoil.loss.zero.rst", "api/hypercoil.neuro.synth.rst", "api/hypercoil.neuro.synth.match_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.match_covariance.rst", "api/hypercoil.neuro.synth.match_reference.rst", "api/hypercoil.neuro.synth.match_spectra.rst", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.synthesise_matched.rst", "api/hypercoil.nn.activation.rst", "api/hypercoil.nn.activation.CorrelationNorm.rst", "api/hypercoil.nn.activation.Isochor.rst", "api/hypercoil.nn.atlas.rst", "api/hypercoil.nn.atlas.AtlasLinear.rst", "api/hypercoil.nn.confound.rst", "api/hypercoil.nn.confound.EliminationSelector.rst", "api/hypercoil.nn.confound.LinearCombinationSelector.rst", "api/hypercoil.nn.confound.LinearRFNN.rst", "api/hypercoil.nn.cov.rst", "api/hypercoil.nn.cov.BaseCovariance.rst", "api/hypercoil.nn.cov.BinaryCovariance.rst", "api/hypercoil.nn.cov.BinaryCovarianceTW.rst", "api/hypercoil.nn.cov.BinaryCovarianceUW.rst", "api/hypercoil.nn.cov.UnaryCovariance.rst", "api/hypercoil.nn.cov.UnaryCovarianceTW.rst", "api/hypercoil.nn.cov.UnaryCovarianceUW.rst", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter.rst", "api/hypercoil.nn.iirfilter.rst", "api/hypercoil.nn.interpolate.rst", "api/hypercoil.nn.interpolate.HybridInterpolate.rst", "api/hypercoil.nn.interpolate.LinearInterpolate.rst", "api/hypercoil.nn.interpolate.SpectralInterpolate.rst", "api/hypercoil.nn.recombinator.rst", "api/hypercoil.nn.recombinator.Recombinator.rst", "api/hypercoil.nn.resid.Residualise.rst", "api/hypercoil.nn.semidefinite.rst", "api/hypercoil.nn.semidefinite.BatchTangentProject.rst", "api/hypercoil.nn.semidefinite.TangentProject.rst", "api/hypercoil.nn.spdnoise.SPDNoise.rst", "api/hypercoil.nn.svm.SVM.rst", "api/hypercoil.nn.sylo.rst", "api/hypercoil.nn.sylo.Sylo.rst", "api/hypercoil.nn.sylo.SyloResNet.rst", "api/hypercoil.nn.tsconv.rst", "api/hypercoil.nn.tsconv.BasisConv2D.rst", "api/hypercoil.nn.tsconv.PolyConv2D.rst", "api/hypercoil.nn.tsconv.TimeSeriesConv2D.rst", "api/hypercoil.nn.vertcom.rst", "api/hypercoil.nn.vertcom.VerticalCompression.rst", "api/hypercoil.nn.window.WindowAmplifier.rst", "diffprog.rst", "engine.rst", "examples.rst", "functional.rst", "index.rst", "init.rst", "installation.rst", "loss.rst", "modules.rst", "neuro.rst", "nn.rst", "overview.rst", "portal.rst"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">orient_and_conform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_tanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corrnorm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isochor</span></code>: PSD normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass, array coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass_coor</span></code>: Centre of mass, any coordinates", "Displacement from a reference centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffuse</span></code>: Diffuseness around centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">connectopy</span></code>: Connectopic manifolds", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffusion_mapping</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplacian_eigenmaps</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariances and correlations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcorr</span></code>: Conditional correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcov</span></code>: Conditional covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr</span></code>: Pearson correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcorr</span></code>: Paired correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcov</span></code>: Paired covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcorr</span></code>: Partial correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcov</span></code>: Partial covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">precision</span></code>: Inverse covariance (precision)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fourier</span></code>: Frequency-domain filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">analytic_signal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">env_inst</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">envelope</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hilbert_transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantaneous_frequency</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantaneous_phase</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filtfilt</span></code>: Zero-phase filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unwrap</span></code>: Unwrap phase", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph</span></code>: Graphs and networks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coaffiliation</span></code>: Community coaffiliation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">girvan_newman_null</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph_laplacian</span></code>: Graph Laplacian", "<code class=\"docutils literal notranslate\"><span class=\"pre\">modularity_matrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">relaxed_modularity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation and imputation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hybrid_interpolate</span></code>: Linear + spectral interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_interpolate</span></code>: Linear interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spectral_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">weighted_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kernel</span></code>: Parameterised kernels", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cosine_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gaussian_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_distance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">param_norm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polynomial_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rbf_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sigmoid_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">matrix</span></code>: Matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cholesky_invert</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">delete_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diag_embed</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_outer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recondition_eigenspaces</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">squareform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sym2vec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmetric</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz_2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vec2sym</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>: Positive semidefinite cone", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cone_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_euc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_geom_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_harm_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_logeuc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tangent_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sparse</span></code>: Sparse matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">as_topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">block_serialise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dspdmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">full_as_topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">random_sparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">select_indices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sp_block_serialise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sparse_astype</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spdiagmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">splr_hadamard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spsp_innerpaired</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spsp_pairdiff</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spspmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spspmm_full</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk_diagreplace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk_diagzero</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk_to_bcoo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topkx</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">trace_spspmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code>: Spherical coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">euclidean_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spatial_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_latlong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_normals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_geodesic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>: Sylo function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>: Symmetric matrix maps", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symexp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symlog</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symsqrt</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basischan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basisconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polychan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polyconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">utils</span></code>: Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_apply</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apply_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_decompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_recompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conform_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mask_tensor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertical_compression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">window</span></code>: Random windowing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_nonoverlapping_windows_existing_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_nonoverlapping_windows_new_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_overlapping_windows_existing_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_overlapping_windows_new_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_windows</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas initialisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CortexSubcortexCIfTIAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitBaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitSurfaceAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DiscreteVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultifileVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlasmixins</span></code>: Atlas mixins", "<code class=\"docutils literal notranslate\"><span class=\"pre\">base</span></code>: Base initialisations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DistributionInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">IdentityInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MappedInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constant_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">from_distr_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">identity_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deltaplus</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dirichlet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency band init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">FreqFilterSpec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">clamp_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter_init</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mapparam</span></code>: Mapped parameters and parameter maps", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AffineMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeProbabilitySimplexParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeTanhMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Clip</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DomainMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ForcePositiveDefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">IdentityMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">IsochoricParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MappedLogits</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NormSphereParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">OrthogonalParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">PhaseAmplitudeMixin</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ProbabilitySimplexParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Renormalise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TanhMappedParameter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mpbl</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SemidefiniteMean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangencyInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Loss</span></code>: Base class for scalar-valued losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MSELoss</span></code>: Mean squared error", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NormedLoss</span></code>: Normed parameter regularisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ParameterisedLoss</span></code>: Extensible class for custom parameterised losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto_tol</span></code>: Significance tolerance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">batch_corr</span></code>: Batch-axis correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">bimodal_symmetric</span></code>: Minimal distance from 2 modes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">bregman_divergence</span></code>: Bregman divergences", "<code class=\"docutils literal notranslate\"><span class=\"pre\">compactness</span></code>: Compactness", "<code class=\"docutils literal notranslate\"><span class=\"pre\">connectopy</span></code>: Generalised connectopy", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constraint_violation</span></code>: Soft constraints", "<code class=\"docutils literal notranslate\"><span class=\"pre\">det_gram</span></code>: Gramian determinant", "<code class=\"docutils literal notranslate\"><span class=\"pre\">difference</span></code>: Elementwise difference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dispersion</span></code>: Vector dispersion", "<code class=\"docutils literal notranslate\"><span class=\"pre\">entropy</span></code>: Categorical entropy", "<code class=\"docutils literal notranslate\"><span class=\"pre\">equilibrium</span></code>: Equilibrium loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hinge_loss</span></code>: SVM hinge loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">identity</span></code>: Identity function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interhemispheric_tether</span></code>: Inter-hemispheric tethering loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">js_divergence</span></code>: Jensen-Shannon divergence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kl_divergence</span></code>: Kullback-Leibler divergence", "<code class=\"docutils literal notranslate\"><span class=\"pre\">log_det_gram</span></code>: Gram log-determinant loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">modularity</span></code>: Relaxed modularity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">multivariate_kurtosis</span></code>: Time series stationarity", "<code class=\"docutils literal notranslate\"><span class=\"pre\">qcfc</span></code>: QC-FC measures and loss", "<code class=\"docutils literal notranslate\"><span class=\"pre\">reference_tether</span></code>: Spatial tether to reference points", "<code class=\"docutils literal notranslate\"><span class=\"pre\">max_scalarise</span></code>: Maximum-value scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_scalarise</span></code>: Mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">meansq_scalarise</span></code>: Squared mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">norm_scalarise</span></code>: Norm scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">selfwmean_scalarise</span></code>: Self-weighted mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sum_scalarise</span></code>: Sum scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vnorm_scalarise</span></code>: Vector norm scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wmean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wmean_scalarise</span></code>: Weighted mean scalarisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossApply</span></code>: Selectively apply loss to parameters", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossScheme</span></code>: Scheme for multiple losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">second_moment</span></code>: Second moments", "<code class=\"docutils literal notranslate\"><span class=\"pre\">smoothness</span></code>: Backwards differences", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unilateral_loss</span></code>: Unilateral penalties", "<code class=\"docutils literal notranslate\"><span class=\"pre\">zero</span></code>: Zero function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synth</span></code>: Data synthesis", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_covariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_reference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_spectra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_from_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_matched</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions as modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CorrelationNorm</span></code>: Correlation normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Isochor</span></code>: Isochoric normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasLinear</span></code>: Linear atlas layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">confound</span></code>: Confound Models", "<code class=\"docutils literal notranslate\"><span class=\"pre\">EliminationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearCombinationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearRFNN</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseCovariance</span></code>: Covariance base class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency-domain filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HybridInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SpectralInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchTangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SPDNoise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SVM</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SyloResNet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BasisConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">PolyConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeSeriesConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertcom</span></code>: Vertex compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VerticalCompression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">WindowAmplifier</span></code>", "Framework", "<code class=\"docutils literal notranslate\"><span class=\"pre\">engine</span></code>: Differentiable engine", "A first (real) example", "<code class=\"docutils literal notranslate\"><span class=\"pre\">functional</span></code>: Functions and functionals", "A differentiable program for mapping brain function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">init</span></code>: Initialisation schemes", "Installation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">loss</span></code>: Loss and regularisation", "API reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">neuro</span></code>: Neuroscience data utilities", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nn</span></code>: Neural network modules", "Technical overview", "Content redacted"], "terms": {"hypercoil": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 259, 263, 266, 267, 268, 270, 271, 274, 275, 276, 278, 283], "engin": [0, 274, 276, 280], "axisutil": [0, 274], "input": [0, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 84, 88, 94, 95, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 122, 123, 126, 128, 129, 130, 131, 133, 143, 152, 153, 162, 174, 177, 179, 180, 184, 185, 189, 190, 193, 194, 197, 198, 199, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 253, 255, 256, 258, 259, 263, 266, 267, 274, 277, 279, 283], "tensor": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 163, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 238, 242, 243, 244, 245, 246, 247, 248, 255, 256, 258, 259, 263, 267, 274, 279, 283], "axi": [0, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 67, 70, 73, 74, 75, 76, 80, 93, 114, 117, 121, 124, 125, 128, 129, 130, 131, 132, 136, 138, 153, 162, 171, 174, 179, 180, 185, 197, 198, 201, 202, 203, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 242, 243, 244, 245, 246, 247, 256, 274, 279, 280, 283], "union": [0, 4, 12, 13, 44, 50, 51, 52, 73, 74, 75, 76, 87, 115, 117, 118, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 177, 181, 185, 188, 191, 197, 198, 202, 203, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 237], "int": [0, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 41, 44, 53, 59, 61, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 80, 83, 85, 91, 93, 97, 100, 101, 104, 114, 115, 116, 117, 118, 121, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 162, 171, 174, 177, 179, 181, 185, 187, 189, 190, 191, 197, 198, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 221, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 251, 255, 263, 267, 274], "sequenc": [0, 7, 9, 44, 73, 74, 75, 76, 80, 83, 85, 97, 114, 115, 117, 118, 124, 125, 135, 136, 137, 138, 139, 140, 141, 142, 156, 157, 159, 180, 185, 193, 197, 198, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217], "refer": [0, 6, 72, 77, 106, 133, 135, 136, 138, 139, 140, 141, 142, 143, 209, 210, 211, 212, 213, 214, 215, 217, 224, 226, 227, 228, 229, 230, 258, 259, 263, 275, 276, 277, 279, 283], "option": [0, 4, 5, 7, 8, 9, 10, 18, 19, 20, 25, 26, 27, 28, 29, 30, 33, 35, 38, 39, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 67, 68, 72, 74, 76, 77, 80, 83, 84, 89, 91, 98, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 149, 151, 152, 156, 159, 177, 180, 181, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 232, 233, 235, 242, 243, 244, 245, 246, 247, 263, 276], "none": [0, 4, 5, 7, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 38, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 67, 68, 72, 74, 76, 77, 80, 83, 89, 91, 97, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 151, 152, 155, 156, 158, 159, 168, 169, 177, 180, 181, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 229, 232, 233, 235, 242, 243, 244, 245, 246, 247, 248, 251, 263, 267, 274, 283], "dim": [0, 67, 242, 243, 244, 245, 246, 247, 248, 263, 283], "sourc": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 259, 263, 266, 267, 268, 270, 271], "orient": 0, "an": [0, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 33, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 63, 68, 72, 74, 76, 77, 84, 96, 97, 98, 101, 104, 106, 109, 110, 111, 118, 121, 133, 135, 136, 137, 138, 139, 143, 148, 151, 152, 155, 157, 158, 162, 168, 170, 174, 175, 177, 179, 184, 185, 187, 191, 192, 193, 197, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 225, 226, 228, 235, 237, 242, 243, 244, 245, 246, 247, 248, 249, 258, 259, 263, 266, 267, 270, 274, 276, 277, 283], "along": [0, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 65, 67, 69, 72, 74, 76, 77, 80, 109, 110, 111, 121, 128, 129, 130, 131, 132, 147, 152, 153, 162, 168, 171, 174, 179, 198, 205, 212, 213, 215, 217, 220, 221, 242, 243, 244, 245, 246, 247], "set": [0, 4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 36, 38, 39, 41, 43, 44, 47, 50, 53, 54, 55, 65, 69, 72, 74, 76, 77, 84, 86, 91, 98, 105, 106, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 152, 155, 165, 168, 177, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 232, 235, 237, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 263, 267, 274, 276, 277, 283], "ax": [0, 7, 9, 61, 65, 66, 67, 73, 74, 75, 76, 143, 147, 151, 152, 168, 179, 185, 197, 198, 202, 203, 209, 210, 211, 212, 213, 214, 215, 217, 220, 242, 243, 244], "conform": [0, 19, 20, 64, 67, 113, 124, 205, 209, 210, 211, 212, 213, 214, 215, 217, 248], "its": [0, 7, 10, 31, 32, 33, 60, 62, 66, 106, 123, 133, 134, 143, 151, 157, 163, 168, 171, 173, 176, 183, 191, 192, 193, 197, 205, 209, 210, 211, 212, 213, 214, 215, 217, 222, 226, 235, 248, 263, 278, 283], "overal": [0, 135, 137, 139, 143, 177, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222], "dimens": [0, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 62, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 84, 87, 89, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 122, 123, 126, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 156, 157, 177, 179, 180, 183, 185, 187, 188, 190, 191, 192, 198, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 220, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 267, 274, 283], "equal": [0, 35, 39, 65, 67, 78, 87, 114, 117, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 171, 189, 191, 198, 206, 220, 263, 267], "If": [0, 4, 5, 7, 8, 10, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 32, 35, 36, 37, 38, 39, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 60, 63, 64, 67, 70, 72, 75, 76, 80, 84, 89, 91, 97, 98, 101, 104, 105, 106, 114, 117, 126, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 151, 155, 158, 168, 171, 175, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 226, 228, 232, 233, 235, 237, 242, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 258, 259, 263, 277, 284], "both": [0, 4, 71, 118, 123, 183, 213, 221, 227, 232, 237, 242, 243, 244, 248, 267, 276, 283], "ar": [0, 3, 5, 7, 8, 10, 12, 13, 25, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 67, 68, 70, 72, 74, 76, 77, 78, 80, 84, 97, 98, 101, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 126, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 153, 155, 157, 162, 163, 165, 168, 169, 171, 172, 174, 175, 176, 177, 179, 180, 184, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 198, 199, 201, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 227, 228, 229, 230, 233, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 253, 256, 258, 259, 263, 267, 274, 275, 276, 277, 283], "provid": [0, 4, 5, 7, 12, 13, 31, 32, 37, 39, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 82, 91, 101, 105, 106, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 158, 168, 177, 192, 193, 194, 204, 205, 226, 228, 232, 233, 235, 242, 243, 244, 248, 253, 276, 277, 279, 283], "take": [0, 6, 97, 101, 106, 133, 143, 148, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 237, 242, 243, 245, 246, 248, 274, 283], "preced": [0, 8, 10, 12, 13, 35, 37, 39, 57, 60, 237, 238, 258, 259], "paramet": [0, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 84, 91, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 251, 253, 255, 258, 259, 263, 267, 274, 277, 279, 280, 282, 283], "tupl": [0, 4, 12, 13, 26, 37, 51, 66, 67, 68, 102, 103, 114, 115, 117, 118, 122, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 165, 171, 177, 181, 189, 235, 263, 274], "output": [0, 2, 3, 4, 5, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 63, 66, 67, 70, 72, 73, 74, 75, 76, 77, 84, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 122, 123, 126, 148, 177, 179, 193, 209, 210, 211, 212, 213, 214, 215, 217, 218, 228, 229, 230, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 253, 255, 258, 259, 263, 267, 279, 283], "which": [0, 4, 7, 10, 12, 25, 26, 27, 28, 29, 30, 33, 35, 36, 38, 39, 41, 43, 63, 66, 72, 73, 74, 75, 76, 77, 78, 84, 97, 98, 101, 104, 109, 110, 111, 114, 117, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 152, 153, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 229, 232, 235, 248, 251, 253, 258, 259, 274, 276, 283], "": [0, 6, 7, 8, 10, 35, 39, 57, 106, 113, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 160, 188, 191, 192, 198, 204, 205, 207, 237, 248, 258, 267, 274, 277, 283, 284], "should": [0, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 37, 38, 39, 41, 43, 46, 47, 48, 49, 51, 53, 54, 55, 62, 65, 66, 67, 69, 70, 72, 74, 76, 77, 87, 97, 106, 109, 110, 111, 113, 114, 116, 117, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 155, 158, 165, 177, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 237, 242, 243, 244, 245, 246, 247, 248, 253, 255, 256, 263, 267, 276], "reorient": 0, "thi": [0, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 49, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 84, 86, 89, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 118, 121, 124, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 151, 152, 155, 157, 158, 165, 168, 169, 171, 172, 173, 174, 175, 177, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 226, 228, 232, 233, 237, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 258, 259, 263, 267, 270, 272, 274, 276, 277, 283, 284], "n": [0, 5, 7, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 69, 70, 72, 73, 74, 75, 76, 77, 89, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 126, 152, 155, 156, 157, 158, 179, 180, 187, 188, 203, 207, 221, 225, 226, 227, 228, 229, 230, 233, 235, 242, 243, 244, 245, 246, 247, 248, 258, 259, 263, 267], "where": [0, 38, 39, 47, 49, 51, 53, 54, 55, 65, 69, 70, 72, 74, 76, 77, 78, 106, 109, 110, 111, 133, 134, 148, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 197, 198, 199, 201, 205, 220, 226, 248, 274, 276, 277, 283], "i": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 97, 98, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 153, 155, 158, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 226, 228, 229, 230, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 258, 259, 263, 267, 270, 274, 276, 277, 278, 279, 283, 284], "number": [0, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 43, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 91, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 123, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 152, 153, 155, 156, 157, 168, 169, 177, 179, 180, 183, 187, 191, 192, 193, 194, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 225, 226, 227, 228, 230, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 251, 253, 255, 258, 259, 263, 267, 274], "These": [0, 133, 143, 155, 177, 186, 198, 243, 246, 248, 279, 283], "must": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 43, 57, 67, 75, 76, 80, 84, 98, 106, 113, 123, 135, 141, 142, 148, 155, 192, 194, 204, 205, 242, 243, 244, 245, 246, 247, 248, 249, 253, 263], "same": [0, 2, 3, 35, 36, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 63, 67, 70, 74, 78, 106, 113, 114, 116, 117, 118, 122, 123, 126, 135, 136, 137, 138, 139, 140, 141, 142, 155, 158, 163, 165, 169, 176, 179, 180, 193, 198, 201, 209, 210, 211, 212, 213, 214, 215, 217, 235, 253, 256, 258, 259, 267, 276], "order": [0, 7, 8, 31, 32, 53, 65, 69, 80, 155, 158, 171, 177, 185, 212, 215, 267], "thei": [0, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 63, 119, 183, 209, 210, 211, 212, 213, 214, 215, 217, 235, 277, 283], "transpos": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 60, 66, 70, 106, 205, 242, 243, 244, 245, 246, 247, 256, 263], "befor": [0, 5, 31, 32, 33, 37, 43, 74, 106, 126, 135, 136, 137, 138, 139, 140, 141, 142, 168, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 213, 215, 220, 221, 222, 233, 253, 277], "being": [0, 5, 65, 72, 77, 149, 188, 204, 207, 233], "The": [0, 2, 3, 5, 7, 10, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 31, 32, 33, 35, 36, 37, 38, 39, 41, 44, 47, 49, 51, 52, 53, 54, 55, 57, 60, 63, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 78, 84, 87, 89, 97, 98, 101, 104, 106, 114, 115, 117, 123, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 152, 155, 158, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 226, 229, 230, 233, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 255, 256, 258, 263, 267, 274, 276, 277, 279, 283, 284], "unsqueez": [0, 43, 253], "so": [0, 7, 43, 63, 97, 118, 133, 171, 175, 186, 192, 193, 203, 215, 218, 221, 226, 248, 253, 270, 274], "total": [0, 35, 36, 38, 39, 156, 157, 177, 198, 235, 248], "either": [0, 37, 43, 44, 57, 64, 74, 126, 133, 143, 179, 189, 196, 198, 209, 210, 211, 212, 213, 214, 215, 217, 221, 226, 242, 243, 244, 248, 253, 263, 267, 274, 277], "explicit": [0, 9, 60, 106], "desir": [0, 37, 38, 39, 143, 148, 163, 165, 169, 176, 197, 198, 204, 277, 278], "return": [0, 2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 81, 84, 87, 91, 92, 93, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 122, 123, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 148, 152, 155, 156, 157, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 226, 228, 230, 232, 233, 235, 256, 274, 283], "singleton": [0, 78, 209, 210, 211, 212, 213, 214, 215, 217], "append": 0, "addit": [1, 4, 5, 27, 29, 30, 31, 32, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 67, 72, 74, 76, 77, 97, 109, 110, 111, 114, 117, 143, 194, 204, 232, 233, 242, 243, 244, 245, 246, 247], "neural": [1, 181, 275, 276, 277, 280, 283], "network": [1, 39, 181, 198, 205, 254, 275, 276, 277, 280, 283], "layer": [1, 106, 158, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 237, 238, 254, 255, 263, 269, 270, 277, 280, 282, 283], "amplitude_tanh": [1, 275], "amplitude_atanh": [1, 275], "corrnorm": [1, 275], "isochor": [1, 168, 231, 275, 282], "psd": [1, 181, 263, 275], "normalis": [1, 4, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 158, 159, 171, 175, 192, 193, 198, 204, 205, 206, 220, 231, 235, 242, 243, 244, 245, 246, 247, 275, 282], "function": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 148, 152, 154, 155, 156, 157, 159, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 232, 233, 237, 238, 242, 243, 244, 245, 246, 247, 248, 253, 255, 256, 263, 277, 279, 280, 282], "activ": [2, 3, 4, 5, 232, 233, 263, 275, 280, 282, 283], "invers": [2, 14, 15, 16, 17, 18, 19, 20, 21, 22, 49, 54, 57, 72, 75, 76, 77, 162, 170, 171, 174, 179, 206, 242, 243, 244, 245, 246, 247, 248, 275], "hyperbol": [2, 3, 163, 176], "tangent": [2, 3, 71, 72, 74, 77, 163, 176, 179, 180, 242, 243, 244, 245, 246, 247, 257, 258, 259, 283], "arctang": 2, "appli": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 41, 110, 114, 117, 118, 120, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 155, 162, 173, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 248, 251, 267, 270, 274, 277, 279, 280], "amplitud": [2, 3, 32, 120, 122, 123, 155, 162, 163, 173, 228, 248, 283], "onli": [2, 3, 19, 20, 68, 82, 84, 91, 97, 98, 102, 103, 105, 121, 135, 136, 137, 138, 139, 140, 141, 142, 155, 157, 158, 171, 177, 185, 188, 193, 194, 198, 201, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 222, 237, 242, 243, 244, 245, 246, 247, 255, 258, 274], "absolut": [2, 3, 63, 188, 189, 207, 283], "valu": [2, 3, 7, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 35, 38, 39, 41, 42, 43, 44, 62, 63, 67, 68, 84, 97, 98, 101, 102, 103, 110, 122, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 155, 156, 157, 162, 163, 164, 165, 168, 169, 173, 176, 177, 179, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 226, 228, 235, 237, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 263, 274, 279, 280, 283], "transform": [2, 3, 24, 25, 26, 27, 28, 29, 30, 41, 43, 72, 74, 76, 77, 85, 97, 106, 108, 109, 110, 111, 113, 114, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 170, 192, 197, 199, 205, 209, 210, 211, 212, 213, 214, 215, 217, 225, 229, 230, 235, 248, 253, 270, 277, 283], "accord": [2, 3, 7, 15, 17, 19, 31, 32, 41, 60, 84, 97, 98, 106, 190, 194, 199, 204, 251], "mathrm": [2, 3, 4, 62, 114, 117, 118, 196, 232], "arctanh": 2, "x": [2, 3, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 62, 63, 64, 66, 70, 72, 74, 75, 76, 77, 81, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 177, 179, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 207, 208, 220, 221, 222, 223, 235, 238, 256, 258, 259, 263, 283], "while": [2, 3, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 38, 39, 41, 42, 43, 44, 89, 114, 117, 136, 138, 175, 191, 193, 196, 204, 242, 243, 244, 245, 246, 248, 253, 267], "phase": [2, 3, 24, 25, 26, 27, 29, 30, 31, 122, 123, 155, 158, 173, 248, 275], "complex": [2, 3, 25, 120, 122, 123, 162, 163, 173, 248, 276], "argument": [2, 3, 4, 6, 32, 43, 44, 67, 72, 77, 80, 89, 97, 133, 143, 145, 147, 148, 153, 171, 180, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 232, 248, 253, 274], "preserv": [2, 3, 106, 175, 284], "map": [2, 3, 4, 11, 12, 35, 39, 78, 101, 106, 110, 113, 114, 116, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 186, 192, 198, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 232, 234, 235, 248, 254, 255, 267, 270, 274, 275, 277, 279, 280, 283], "open": [2, 3, 277, 283], "unit": [2, 3, 155, 158, 171], "disc": [2, 3], "plane": [2, 3, 25], "entir": [2, 91, 143, 209, 210, 211, 212, 213, 214, 215, 217], "origin": [2, 3, 5, 31, 32, 41, 42, 43, 44, 72, 74, 76, 77, 80, 102, 109, 110, 111, 162, 168, 170, 171, 174, 175, 177, 179, 188, 207, 209, 210, 211, 212, 213, 214, 215, 217, 220, 233, 243, 246, 258, 259, 277], "itself": [2, 3, 46, 47, 48, 49, 50, 51, 53, 54, 55, 106, 133, 163, 165, 169, 176, 183, 204, 226], "circumfer": [2, 3], "infin": [2, 177, 209], "As": [2, 3, 4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 70, 72, 73, 74, 75, 76, 77, 105, 106, 108, 109, 110, 111, 114, 117, 118, 156, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 179, 192, 197, 198, 202, 203, 205, 225, 226, 227, 228, 229, 230, 232, 233], "elementwis": [2, 3, 39, 47, 124, 162, 174, 197, 205, 211, 220, 279, 280], "conserv": [2, 3, 110], "shape": [2, 3, 12, 37, 67, 68, 78, 83, 106, 122, 123, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 181, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 238, 255, 263, 274], "whose": [2, 3, 7, 8, 15, 16, 41, 43, 67, 87, 102, 114, 117, 133, 135, 136, 138, 139, 140, 141, 142, 143, 155, 162, 163, 171, 172, 174, 177, 192, 198, 204, 205, 226, 253, 259, 263, 274], "out": [2, 3, 15, 16, 35, 36, 37, 39, 60, 67, 95, 101, 104, 106, 116, 126, 148, 162, 163, 164, 165, 169, 171, 174, 175, 176, 184, 205, 235, 248, 255, 267, 270, 283], "tanh": [3, 55, 248], "distant": 3, "region": [3, 8, 10, 135, 136, 138, 139, 140, 141, 142, 143, 191, 198, 201, 235, 274], "factor": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 72, 74, 76, 77, 109, 110, 111, 177, 179, 232, 242, 243, 244, 245, 246, 247, 258, 259], "gradpath": [4, 213, 232], "liter": [4, 38, 39, 44, 60, 63, 70, 72, 74, 76, 77, 84, 97, 98, 106, 109, 110, 111, 117, 118, 159, 181, 188, 191, 207, 213, 256], "correl": [4, 16, 18, 20, 22, 23, 46, 70, 187, 194, 204, 207, 226, 231, 242, 243, 244, 245, 246, 247, 274, 275, 279, 280, 282, 283], "divid": [4, 5, 41, 177, 206, 232, 233, 251], "each": [4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 60, 63, 65, 67, 70, 72, 74, 76, 77, 78, 80, 84, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 122, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 153, 155, 177, 180, 183, 185, 186, 188, 189, 190, 191, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 232, 233, 235, 242, 243, 244, 245, 246, 247, 248, 258, 259, 263, 267, 274, 279, 283], "entri": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 35, 39, 67, 78, 84, 93, 97, 98, 122, 134, 143, 152, 155, 158, 162, 163, 169, 171, 174, 175, 176, 191, 192, 205, 218, 232, 242, 243, 244, 245, 246, 247], "a_": [4, 232], "ij": [4, 15, 17, 19, 35, 39, 232], "matrix": [4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 81, 82, 84, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 101, 106, 108, 109, 110, 111, 126, 151, 171, 177, 179, 180, 182, 192, 194, 197, 198, 204, 205, 206, 212, 215, 220, 225, 226, 229, 232, 233, 242, 243, 244, 245, 246, 247, 255, 258, 259, 263, 270, 274, 275, 277, 280, 283], "A": [4, 10, 12, 36, 37, 38, 39, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 62, 72, 74, 76, 77, 87, 91, 92, 109, 110, 111, 113, 116, 119, 132, 155, 156, 157, 165, 170, 173, 177, 179, 183, 186, 191, 192, 197, 198, 204, 205, 220, 232, 235, 242, 243, 244, 245, 246, 247, 248, 249, 254, 258, 259, 263, 270], "product": [4, 39, 60, 88, 91, 101, 105, 106, 155, 158, 205, 232, 263], "sign": [4, 38, 39, 63, 126, 232, 263], "squar": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 44, 47, 50, 52, 58, 61, 64, 65, 66, 70, 72, 77, 89, 107, 111, 168, 192, 198, 205, 206, 220, 232, 235, 242, 243, 245, 246, 256, 258, 259, 279, 280], "root": [4, 47, 72, 77, 107, 111, 192, 205, 232], "correspond": [4, 6, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 36, 37, 38, 44, 60, 67, 101, 114, 116, 117, 133, 136, 138, 140, 155, 180, 187, 191, 192, 198, 201, 204, 205, 208, 220, 222, 227, 228, 230, 232, 235, 237, 242, 243, 245, 246, 283], "diagon": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 63, 65, 67, 69, 72, 74, 76, 77, 81, 87, 94, 95, 106, 109, 110, 111, 126, 192, 194, 204, 205, 232, 242, 243, 244, 245, 246, 247, 263], "bar": [4, 75, 76, 179, 232], "_": [4, 10, 15, 17, 19, 35, 39, 47, 52, 191, 232], "frac": [4, 5, 10, 15, 17, 19, 31, 32, 36, 37, 38, 47, 49, 53, 54, 55, 60, 62, 73, 75, 76, 106, 179, 187, 191, 202, 203, 205, 220, 226, 232, 233, 263], "sgn": [4, 232], "ii": [4, 15, 17, 19, 155, 158, 165, 232], "jj": [4, 15, 17, 19, 232], "sqrt": [4, 5, 15, 17, 19, 47, 52, 111, 187, 232, 233], "epsilon": [4, 232], "default": [4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 84, 91, 97, 98, 101, 103, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 153, 155, 158, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 226, 227, 228, 229, 230, 232, 233, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 253, 255, 256, 263, 267, 274, 277], "behaviour": [4, 39, 106, 152, 155, 205, 209, 210, 211, 212, 213, 214, 215, 217, 232, 267], "covari": [4, 15, 17, 19, 21, 43, 48, 49, 54, 70, 206, 224, 225, 226, 227, 229, 230, 232, 242, 243, 244, 245, 246, 247, 253, 274, 275, 280, 282, 283], "pearson": [4, 14, 15, 16, 18, 19, 20, 21, 194, 204, 232, 242, 243, 244, 245, 246, 247, 275, 283], "can": [4, 5, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 43, 49, 54, 57, 60, 67, 70, 72, 74, 76, 77, 78, 84, 87, 97, 98, 101, 104, 106, 109, 110, 111, 114, 117, 118, 119, 126, 133, 134, 135, 143, 151, 152, 153, 155, 168, 170, 175, 177, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 232, 233, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 263, 274, 276, 277, 279, 283], "overriden": [4, 232], "detail": [4, 100, 104, 114, 117, 133, 137, 145, 146, 147, 152, 153, 155, 158, 180, 182, 232, 248, 276], "below": [4, 204, 220, 232, 274], "also": [4, 49, 54, 60, 68, 84, 91, 98, 106, 126, 135, 143, 148, 170, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 232, 255, 263, 274, 277, 283], "similar": [4, 44, 45, 106, 160, 204, 205, 232, 255, 263, 283], "version": [4, 9, 152, 170, 190, 197, 198, 202, 203, 232, 274], "oper": [4, 6, 12, 13, 32, 33, 43, 62, 70, 71, 72, 74, 76, 77, 82, 84, 89, 91, 92, 97, 98, 99, 106, 109, 110, 111, 143, 155, 157, 171, 179, 190, 192, 196, 197, 198, 202, 203, 204, 220, 228, 232, 253, 256, 258, 259, 262, 275, 276, 280, 283], "graph": [4, 12, 13, 35, 36, 38, 39, 106, 177, 192, 198, 205, 220, 232, 263, 270, 274, 275, 280, 283], "laplacian": [4, 12, 13, 34, 192, 205, 232, 275, 283], "p": [4, 5, 36, 38, 46, 47, 48, 49, 51, 53, 54, 55, 89, 185, 187, 202, 203, 205, 209, 210, 211, 212, 213, 214, 215, 217, 221, 232, 233, 267, 283], "denot": [4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 63, 67, 70, 72, 73, 74, 75, 76, 77, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 123, 156, 157, 179, 180, 191, 192, 197, 201, 205, 208, 225, 226, 227, 228, 229, 230, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 258, 259, 267], "row": [4, 5, 8, 37, 47, 49, 51, 52, 53, 54, 55, 57, 60, 67, 68, 72, 73, 74, 75, 76, 77, 78, 88, 106, 108, 109, 110, 111, 126, 135, 136, 138, 139, 140, 141, 142, 179, 191, 196, 198, 201, 206, 208, 220, 232, 233, 235, 243, 246, 270, 274], "column": [4, 5, 8, 10, 47, 49, 51, 52, 53, 54, 55, 57, 60, 67, 68, 72, 73, 74, 75, 76, 77, 88, 106, 108, 109, 110, 111, 126, 179, 191, 192, 198, 201, 206, 208, 220, 232, 233, 243, 246, 263, 274, 277], "matric": [4, 5, 12, 13, 23, 35, 36, 38, 39, 57, 58, 61, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 90, 91, 98, 106, 107, 108, 109, 110, 111, 126, 133, 134, 147, 171, 182, 198, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 232, 233, 258, 259, 263, 283], "ani": [4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 41, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 68, 70, 72, 73, 74, 75, 76, 77, 80, 86, 97, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 148, 153, 155, 157, 165, 168, 173, 175, 179, 185, 186, 188, 191, 193, 207, 212, 215, 232, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 251, 258, 259, 267, 275, 277], "abov": [4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 57, 60, 67, 70, 72, 73, 74, 75, 76, 77, 106, 108, 109, 110, 111, 114, 117, 118, 156, 179, 188, 191, 192, 205, 207, 225, 226, 227, 228, 229, 230, 232, 233, 283], "iter": [4, 7, 44, 74, 135, 136, 137, 138, 139, 140, 141, 142, 143, 177, 179, 192, 193, 232, 283], "explicitli": [4, 6, 46, 47, 48, 49, 50, 51, 53, 54, 55, 114, 117, 137, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 232, 275], "specifi": [4, 5, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 44, 47, 53, 54, 55, 60, 63, 66, 67, 74, 80, 88, 89, 91, 97, 106, 109, 110, 111, 114, 116, 117, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 153, 155, 157, 158, 162, 163, 168, 169, 171, 174, 175, 176, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 232, 233, 242, 243, 244, 245, 246, 247, 248, 263, 275, 283], "follow": [4, 22, 33, 41, 62, 65, 69, 78, 101, 135, 152, 155, 157, 199, 206, 209, 210, 211, 212, 213, 214, 215, 217, 232, 242, 243, 245, 246, 248, 249, 251, 284], "divis": [4, 15, 16, 17, 18, 19, 20, 21, 22, 23, 80, 171, 220, 232, 242, 243, 244, 245, 246, 247], "directli": [4, 57, 91, 148, 170, 192, 232], "mostli": [4, 33, 67, 232], "compat": [4, 33, 47, 49, 51, 52, 53, 54, 55, 82, 84, 93, 97, 98, 232, 277], "non": [4, 23, 39, 41, 43, 52, 70, 78, 109, 133, 135, 136, 138, 139, 140, 141, 142, 163, 165, 166, 169, 176, 194, 204, 205, 232, 242, 243, 244, 245, 246, 247, 253, 256], "pair": [4, 14, 21, 22, 33, 36, 89, 101, 105, 143, 155, 174, 196, 201, 204, 205, 232, 242, 243, 244, 275, 277], "outer": [4, 60, 88, 106, 185, 209, 210, 211, 212, 213, 214, 215, 217, 232, 263], "str": [4, 70, 134, 135, 136, 137, 138, 139, 140, 141, 142, 171, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 232, 235], "us": [4, 5, 7, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 63, 67, 68, 70, 72, 74, 76, 77, 78, 80, 84, 89, 91, 97, 98, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 121, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 152, 155, 157, 158, 162, 165, 168, 170, 171, 172, 174, 175, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 226, 232, 233, 235, 237, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 256, 258, 259, 263, 267, 274, 276, 277, 278, 279, 283], "gradient": [4, 74, 163, 165, 169, 176, 179, 180, 204, 213, 232, 277], "block": [4, 36, 38, 39, 58, 61, 62, 63, 64, 65, 66, 67, 69, 70, 80, 85, 91, 106, 178, 185, 188, 191, 196, 201, 207, 208, 232, 256], "from": [4, 6, 7, 12, 15, 16, 41, 43, 47, 49, 51, 52, 53, 54, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 74, 76, 77, 84, 97, 102, 103, 105, 106, 109, 110, 111, 115, 123, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 150, 152, 153, 155, 156, 157, 177, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 226, 228, 229, 230, 232, 235, 237, 242, 243, 244, 245, 246, 247, 248, 251, 253, 258, 259, 263, 274, 275, 276, 278, 279, 280, 283], "flow": [4, 232], "backward": [4, 33, 44, 71, 165, 232, 249, 279, 280], "through": [4, 5, 62, 72, 74, 76, 77, 106, 109, 110, 111, 135, 153, 163, 168, 169, 176, 201, 204, 205, 213, 232, 233, 237, 258, 259, 274, 277, 279], "comput": [4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 53, 54, 55, 73, 74, 75, 76, 89, 91, 101, 104, 105, 106, 107, 108, 109, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 171, 178, 179, 180, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 202, 203, 204, 205, 207, 212, 215, 220, 221, 226, 228, 232, 235, 242, 243, 244, 245, 246, 247, 258, 263, 274, 275], "volum": [5, 133, 140, 141, 142, 143, 168, 233], "float": [5, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 33, 38, 39, 41, 43, 46, 47, 48, 49, 53, 54, 55, 61, 62, 63, 67, 68, 70, 72, 74, 76, 77, 84, 98, 100, 101, 103, 104, 105, 109, 110, 111, 125, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 151, 152, 155, 158, 159, 162, 163, 165, 168, 169, 171, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 233, 237, 242, 243, 244, 245, 246, 247, 253, 256, 258, 259, 263, 274], "1": [5, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 49, 53, 54, 55, 60, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 80, 85, 91, 93, 100, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 153, 155, 158, 159, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 179, 185, 187, 188, 189, 191, 192, 193, 197, 198, 199, 202, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 225, 226, 228, 229, 233, 235, 237, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 263, 267, 274, 283], "max_condit": [5, 168, 233], "softmax_temp": [5, 168, 233], "symmetr": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 56, 57, 60, 63, 64, 65, 69, 72, 77, 89, 106, 108, 109, 110, 111, 168, 171, 189, 201, 203, 205, 226, 233, 242, 243, 245, 246, 258, 259, 262, 263, 275, 280, 283], "posit": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 60, 62, 63, 72, 73, 74, 76, 77, 89, 106, 107, 108, 109, 110, 111, 135, 136, 138, 139, 140, 141, 142, 166, 168, 171, 178, 179, 180, 193, 194, 204, 221, 222, 233, 235, 242, 243, 244, 245, 246, 247, 255, 257, 258, 259, 263, 275, 280, 283], "definit": [5, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 63, 72, 74, 76, 77, 89, 106, 108, 109, 110, 111, 166, 168, 179, 194, 204, 233, 258, 259, 263], "first": [5, 15, 16, 32, 33, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 63, 67, 69, 97, 106, 114, 117, 148, 155, 156, 158, 170, 175, 177, 180, 192, 197, 201, 202, 203, 204, 205, 226, 233, 235, 237, 253, 263, 276, 283], "find": [5, 233, 237, 274], "eigendecomposit": [5, 63, 110, 192, 226, 233], "eigenvalu": [5, 12, 13, 62, 63, 72, 74, 76, 77, 108, 109, 110, 111, 168, 179, 194, 204, 233, 258, 259], "v_": [5, 133, 205, 233], "target": [5, 37, 184, 190, 233, 258, 259], "determin": [5, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 98, 114, 117, 168, 177, 205, 206, 233, 242, 243, 244, 245, 246, 247, 248, 253, 279, 280], "rescal": [5, 171, 228, 233], "softmax": [5, 162, 168, 174, 177, 198, 205, 213, 233, 274, 277], "enforc": [5, 60, 106, 114, 117, 168, 201, 233, 263, 284], "maxim": [5, 233], "condit": [5, 14, 17, 19, 20, 21, 22, 70, 72, 74, 76, 77, 109, 110, 111, 143, 168, 179, 233, 242, 243, 244, 258, 259, 275, 276, 283], "repres": [5, 72, 77, 82, 168, 197, 205, 220, 233, 235, 274, 283], "ellipsoid": [5, 168, 233], "instanc": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 39, 60, 67, 72, 74, 76, 77, 106, 109, 110, 111, 126, 133, 135, 141, 142, 143, 148, 153, 155, 157, 175, 177, 189, 192, 196, 198, 205, 208, 233, 235, 242, 243, 244, 245, 246, 247, 263, 277, 283], "constrain": [5, 163, 168, 169, 176, 197, 198, 205, 233, 242, 243, 244, 245, 246, 247, 248, 263, 277, 283], "eccentr": [5, 168, 233], "those": [5, 15, 16, 43, 44, 67, 171, 177, 185, 188, 204, 213, 233, 242, 243, 244, 253], "final": [5, 31, 32, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 65, 87, 114, 117, 118, 147, 153, 177, 233, 238, 283], "reconstitut": [5, 63, 123, 233], "eigenvector": [5, 233], "contain": [5, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 43, 47, 49, 51, 52, 53, 54, 55, 67, 70, 84, 91, 98, 101, 102, 103, 104, 105, 113, 116, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 188, 191, 193, 196, 197, 201, 207, 208, 226, 233, 242, 243, 245, 246, 248, 253, 277], "procedur": [5, 33, 171, 175, 177, 204, 226, 233], "all": [5, 7, 12, 15, 16, 21, 22, 33, 35, 36, 39, 41, 43, 49, 54, 62, 63, 71, 72, 74, 76, 77, 78, 84, 87, 97, 98, 106, 109, 110, 111, 114, 117, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 152, 153, 175, 179, 185, 188, 192, 193, 197, 198, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 227, 228, 230, 233, 248, 253, 258, 259, 263, 267, 274, 275, 277], "have": [5, 62, 70, 78, 80, 126, 149, 155, 162, 174, 186, 188, 191, 194, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 233, 256, 263], "infti": [5, 168, 185, 233], "maximum": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 38, 39, 41, 43, 44, 53, 60, 63, 74, 101, 104, 106, 114, 116, 117, 118, 135, 136, 137, 138, 139, 140, 141, 142, 163, 165, 168, 169, 176, 177, 179, 185, 193, 197, 204, 213, 233, 242, 243, 244, 245, 246, 247, 251, 253, 267, 279, 280], "permiss": [5, 168, 233], "among": [5, 18, 63, 72, 74, 76, 77, 109, 110, 111, 177, 196, 204, 205, 233, 242, 243, 244, 245, 246, 247, 263, 274, 276, 283], "To": [5, 41, 43, 109, 111, 114, 117, 148, 152, 155, 158, 168, 185, 205, 233, 235, 248, 253, 274], "replac": [5, 7, 33, 60, 72, 74, 76, 77, 84, 94, 98, 106, 109, 110, 111, 168, 170, 179, 233, 258, 259], "convex": [5, 42, 72, 74, 76, 77, 109, 110, 111, 168, 171, 179, 190, 204, 233, 258, 259], "combin": [5, 41, 42, 72, 74, 76, 77, 109, 110, 111, 133, 135, 136, 137, 138, 139, 140, 141, 142, 148, 168, 179, 192, 204, 218, 233, 238, 239, 258, 259, 276, 277, 283], "vector": [5, 7, 36, 47, 49, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 68, 69, 70, 87, 88, 89, 102, 103, 105, 106, 168, 171, 172, 177, 185, 188, 199, 204, 207, 209, 210, 211, 212, 213, 214, 217, 233, 237, 238, 263, 274, 279, 280], "ones": [5, 168, 218, 233], "largest": [5, 168, 193, 233], "more": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 41, 68, 78, 104, 108, 133, 151, 162, 168, 169, 174, 175, 183, 187, 191, 192, 197, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 233, 251, 267, 274, 277, 283], "than": [5, 10, 23, 33, 41, 43, 49, 54, 57, 63, 74, 78, 82, 108, 110, 111, 143, 168, 170, 175, 179, 192, 194, 196, 204, 209, 210, 211, 212, 213, 214, 215, 217, 220, 233, 237, 242, 243, 244, 245, 246, 247, 251, 253, 274, 283], "time": [5, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 39, 41, 42, 43, 44, 89, 106, 114, 117, 118, 126, 133, 135, 136, 137, 138, 139, 140, 141, 142, 152, 168, 198, 204, 205, 220, 221, 226, 229, 233, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 251, 253, 255, 267, 268, 270, 274, 275, 276, 279, 280, 283], "smallest": [5, 63, 168, 233], "note": [5, 23, 32, 33, 63, 67, 72, 74, 76, 77, 91, 92, 102, 103, 106, 109, 110, 111, 143, 155, 157, 162, 163, 165, 168, 169, 171, 174, 175, 176, 186, 188, 192, 205, 207, 233, 237, 242, 243, 245, 246, 263, 278, 283], "alwai": [5, 57, 168, 194, 198, 204, 215, 228, 233, 276, 277, 283], "potenti": [5, 31, 32, 84, 98, 106, 111, 143, 168, 177, 183, 185, 186, 208, 209, 210, 211, 212, 213, 214, 215, 217, 233, 242, 243, 244, 245, 246, 247], "isotrop": [5, 49, 101, 104, 168, 194, 204, 233], "scale": [5, 12, 47, 53, 54, 55, 63, 100, 104, 135, 136, 137, 138, 139, 140, 141, 142, 151, 152, 163, 168, 169, 171, 175, 176, 183, 193, 205, 233, 259], "ident": [5, 35, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 72, 74, 76, 77, 105, 109, 110, 111, 135, 136, 138, 139, 140, 141, 142, 147, 151, 167, 168, 179, 185, 193, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 222, 226, 233, 235, 248, 253, 258, 259, 263, 274, 279, 280], "pass": [5, 31, 32, 38, 39, 60, 71, 80, 106, 114, 117, 143, 148, 155, 158, 168, 171, 186, 209, 210, 211, 212, 213, 214, 215, 217, 220, 226, 228, 233, 237, 249, 255, 276, 279, 283], "temperatur": [5, 162, 168, 174, 177, 197, 233], "other": [5, 15, 16, 21, 22, 33, 87, 101, 106, 112, 139, 151, 168, 191, 196, 198, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 233, 263, 274, 276, 279, 283], "process": [5, 168, 206, 226, 229, 230, 233, 248, 274, 283], "differenti": [6, 7, 8, 12, 14, 62, 71, 72, 74, 76, 77, 107, 109, 110, 111, 155, 157, 180, 204, 205, 221, 249, 259, 274, 275, 277, 278, 279, 280], "weight": [6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 101, 106, 114, 115, 117, 118, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 180, 188, 189, 191, 192, 197, 198, 205, 207, 216, 218, 220, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 253, 255, 258, 259, 263, 267, 274, 277, 279, 280, 283], "avail": [6, 68, 135, 143, 204, 220, 242, 243, 244, 245, 246, 247, 263, 274, 276, 277], "intrins": 6, "mesh": [6, 136, 138, 143], "grid": [6, 9], "coordin": [6, 9, 10, 12, 13, 101, 102, 103, 104, 105, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 191, 192, 196, 201, 205, 208, 275, 280], "cmass_reference_displacement_grid": [6, 9], "last": [6, 7, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 46, 47, 48, 49, 50, 51, 53, 54, 55, 65, 66, 70, 114, 117, 151, 152, 168, 192, 209, 210, 211, 212, 213, 214, 215, 217, 242, 243, 244, 245, 246, 247, 256, 274], "differ": [6, 31, 32, 33, 35, 38, 39, 43, 47, 49, 51, 52, 53, 54, 55, 67, 74, 90, 135, 136, 137, 138, 139, 140, 141, 142, 165, 175, 177, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 218, 220, 222, 253, 258, 263, 279, 280, 283], "locat": [6, 8, 10, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 152, 169, 171, 191, 201, 208, 235], "accept": [6, 177, 192, 205, 242, 243, 244, 245, 246, 247], "second": [6, 8, 15, 16, 46, 47, 48, 49, 50, 51, 53, 54, 55, 68, 105, 106, 114, 117, 143, 155, 156, 158, 177, 192, 202, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 235, 242, 243, 244, 263, 279, 280], "indic": [6, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 41, 42, 43, 44, 66, 70, 72, 74, 75, 76, 77, 78, 84, 91, 93, 97, 98, 102, 103, 109, 110, 111, 113, 114, 116, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 226, 227, 228, 230, 235, 242, 243, 244, 245, 246, 247, 253, 256, 267], "cmass_coor": [6, 9, 275], "diffus": [6, 12, 191, 275], "cmass_reference_displac": [6, 9], "arrai": [6, 33, 89, 101, 104, 123, 152, 177, 216, 274, 275, 283], "around": [6, 46, 48, 91, 150, 221, 238, 275], "displac": [6, 191, 201, 275], "na_rm": [7, 9], "bool": [7, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 52, 66, 70, 72, 74, 75, 76, 77, 79, 80, 84, 87, 93, 97, 98, 106, 109, 110, 111, 113, 114, 116, 117, 126, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 177, 181, 188, 192, 193, 197, 198, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 227, 228, 230, 235, 242, 243, 244, 245, 246, 247, 255, 256, 263, 267], "fals": [7, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 38, 39, 41, 42, 43, 44, 52, 66, 70, 72, 74, 75, 76, 77, 80, 84, 87, 97, 98, 106, 109, 110, 111, 113, 114, 116, 117, 124, 126, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 177, 181, 192, 193, 197, 202, 203, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 223, 226, 227, 228, 230, 242, 243, 244, 245, 246, 247, 255, 256, 263, 267], "regularis": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 191, 194, 204, 205, 206, 220, 242, 243, 244, 245, 246, 247, 256, 258, 274, 276, 280], "close": [7, 12, 133, 155, 157, 191, 192, 196, 204, 237, 249, 274], "k_1": 7, "k_2": 7, "k_n": 7, "batch": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 36, 38, 39, 43, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 87, 98, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 124, 179, 187, 207, 235, 242, 243, 244, 245, 246, 247, 248, 253, 258, 267, 279, 280], "interven": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 36, 38, 39, 70, 72, 73, 74, 75, 76, 77, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 179, 235, 242, 243, 244, 245, 246, 247, 248, 267], "k_i": [7, 36], "togeth": [7, 41, 44, 101, 104, 114, 117, 133, 135, 136, 137, 138, 139, 140, 141, 142, 204, 217, 251], "defin": [7, 10, 15, 16, 17, 19, 23, 36, 38, 39, 44, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 184, 185, 191, 194, 196, 197, 198, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 221, 235, 263, 276, 283], "slice": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 63, 65, 66, 147, 151, 153, 162, 166, 171, 172, 174, 198, 220, 221, 242, 243, 244, 245, 246, 247], "within": [7, 196, 198, 283], "singl": [7, 67, 84, 98, 113, 114, 116, 117, 118, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 155, 175, 177, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 217, 220, 221, 222, 243, 245, 246, 247, 279], "across": [7, 41, 43, 60, 66, 78, 84, 98, 113, 114, 116, 117, 141, 142, 143, 191, 198, 201, 208, 217, 227, 228, 230, 235, 237, 248, 253, 267, 274], "3": [7, 12, 41, 43, 53, 102, 103, 105, 162, 163, 169, 174, 176, 193, 216, 251, 253, 263, 267, 274, 283], "2": [7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 37, 49, 60, 62, 65, 66, 67, 69, 72, 77, 102, 103, 104, 105, 106, 114, 116, 117, 152, 168, 169, 177, 185, 187, 191, 192, 193, 198, 202, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 225, 226, 228, 229, 237, 242, 243, 244, 245, 246, 258, 259, 263, 267, 274, 279, 280, 283], "separ": [7, 15, 16, 41, 43, 84, 91, 97, 98, 101, 104, 133, 143, 155, 196, 197, 204, 237, 253], "dimension": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 121, 242, 243, 245, 246, 274, 276], "span": [7, 70, 256], "three": [7, 136, 138, 177], "ha": [7, 19, 20, 32, 37, 47, 49, 51, 52, 53, 54, 55, 62, 67, 74, 78, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 179, 186, 192, 197, 198, 204, 206, 209, 210, 211, 212, 213, 214, 215, 217, 237, 272, 274, 276, 278, 284], "zero": [7, 24, 31, 43, 62, 67, 70, 72, 74, 76, 77, 78, 95, 103, 109, 110, 111, 169, 188, 192, 205, 207, 243, 246, 248, 253, 256, 258, 267, 275, 279, 280], "undefin": [7, 57, 72, 204], "popul": [7, 67, 69, 150], "nan": [7, 72, 74, 76, 77, 109, 110, 111], "how": [7, 115, 184, 185, 276, 283], "handl": [7, 85, 133, 162, 163, 164, 165, 166, 169, 171, 174, 176], "left": [7, 10, 31, 32, 38, 39, 60, 62, 63, 75, 76, 81, 91, 98, 106, 133, 135, 136, 138, 143, 173, 179, 191, 192, 196, 197, 198, 201, 205, 220, 226, 235, 263, 270], "intact": 7, "specif": [7, 9, 114, 117, 148, 155, 156, 157, 158, 173, 180, 183, 226, 241, 248, 259, 274, 283], "cmass": [8, 9, 10, 275, 280], "coor": [8, 9, 10, 100, 101, 102, 103, 104, 135, 136, 138, 139, 140, 141, 142, 191, 208], "radiu": [8, 9, 10, 103, 104, 105, 191, 201, 208], "w": [8, 10, 12, 13, 37, 60, 106, 242, 243, 244, 245, 246, 247, 263], "l": [8, 10, 12, 13, 35, 37, 39, 60, 106, 205, 235, 243, 246, 263], "e": [8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 49, 54, 70, 84, 114, 117, 118, 143, 185, 186, 191, 194, 198, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 220, 225, 226, 228, 229, 235, 242, 243, 244, 245, 246, 247, 256, 283], "g": [8, 10, 84, 198, 209, 210, 211, 212, 213, 214, 215, 217, 220, 225, 228, 235, 242, 243, 244, 245, 246, 247], "atla": [8, 10, 134, 135, 136, 137, 138, 139, 140, 141, 142, 201, 208, 274, 277, 280, 282, 283], "voxel": [8, 10, 133, 134, 135, 143, 198, 235], "d": [8, 10, 37, 57, 72, 73, 74, 75, 76, 77, 81, 101, 104, 108, 109, 110, 111, 133, 152, 179, 180, 192, 196, 205, 206, 225, 226, 227, 228, 229, 230, 248, 274], "embed": [8, 10, 101, 104], "space": [8, 10, 74, 101, 104, 133, 135, 143, 179, 191, 201, 208, 242, 243, 244, 245, 246, 247, 258, 259, 283], "project": [8, 43, 70, 71, 72, 74, 77, 162, 171, 174, 179, 180, 192, 197, 198, 226, 235, 242, 243, 244, 245, 246, 247, 253, 256, 257, 258, 259, 274, 276, 277, 283], "onto": [8, 43, 70, 162, 169, 171, 174, 197, 198, 253, 256, 274], "sphere": [8, 10, 100, 101, 102, 103, 104, 105, 171, 275, 280, 283], "ref": [9, 135, 136, 138, 139, 140, 141, 142, 208], "point": [9, 10, 33, 43, 44, 72, 74, 77, 101, 102, 103, 104, 105, 135, 136, 137, 138, 139, 140, 141, 142, 155, 156, 164, 179, 180, 198, 206, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 253, 258, 259, 267, 274, 277, 279, 280, 283], "see": [9, 26, 29, 30, 68, 100, 104, 114, 117, 133, 137, 145, 146, 147, 152, 153, 175, 180, 182, 190, 197, 198, 202, 203, 226], "norm": [10, 47, 52, 74, 89, 101, 155, 158, 171, 179, 191, 196, 206, 209, 210, 211, 213, 214, 217, 221, 263, 279, 280], "floor": [10, 191], "0": [10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 46, 48, 53, 55, 59, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 84, 85, 97, 98, 109, 110, 111, 115, 125, 128, 129, 130, 131, 140, 143, 149, 151, 152, 155, 158, 159, 162, 169, 171, 174, 177, 179, 180, 181, 187, 188, 189, 191, 193, 194, 197, 198, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 235, 237, 242, 243, 244, 245, 246, 247, 248, 253, 256, 258, 259, 263, 274, 283], "compact": [10, 196, 279, 280], "score": [10, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 274, 283], "mathbf": [10, 36, 39, 62, 81, 191, 192, 197, 198, 204, 205, 220, 226], "interc": [10, 15, 16, 35, 36, 39, 47, 49, 51, 52, 53, 54, 55, 60, 91, 92, 106, 108, 109, 111, 191, 192, 197, 198, 205, 226, 235, 263, 270], "circ": [10, 39, 191, 192, 197, 198, 205, 220], "c": [10, 17, 18, 21, 22, 23, 35, 39, 60, 67, 68, 101, 104, 106, 113, 114, 116, 117, 118, 126, 180, 191, 192, 205, 245, 246, 247, 248, 258, 259], "ac": [10, 191], "right": [10, 31, 32, 38, 39, 60, 62, 63, 75, 76, 81, 91, 98, 106, 133, 135, 136, 138, 143, 170, 179, 191, 192, 196, 197, 198, 201, 205, 220, 226, 235, 263, 270], "col": [10, 88, 191, 270], "type": [10, 33, 38, 39, 84, 86, 97, 98, 101, 106, 135, 136, 138, 139, 140, 141, 142, 155, 158, 177, 194, 196, 204, 229, 274, 283], "distanc": [10, 45, 50, 101, 104, 105, 134, 135, 136, 137, 138, 139, 140, 141, 142, 175, 191, 192, 196, 201, 205, 208, 279, 280, 283], "closer": [10, 68, 189, 237], "assign": [10, 35, 38, 39, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 177, 191, 197, 198, 201, 205, 208, 274, 283], "measur": [10, 14, 21, 22, 25, 34, 106, 114, 117, 180, 188, 191, 196, 203, 241, 242, 243, 244, 245, 246, 247, 258, 259, 279, 280, 283], "about": [10, 220, 248], "base": [11, 43, 68, 133, 135, 136, 137, 139, 143, 145, 146, 147, 148, 149, 150, 151, 181, 186, 187, 189, 190, 192, 194, 197, 202, 203, 204, 220, 240, 276, 277, 279, 280, 282, 283], "brainspac": [11, 12], "laplacian_eigenmap": [11, 12, 275], "diffusion_map": [11, 13, 275], "connectopi": [12, 13, 205, 275, 279, 280], "devicearraybas": [12, 13], "ndarrai": [12, 13, 135, 136, 138, 140, 141, 142], "k": [12, 13, 33, 35, 37, 39, 47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 113, 114, 116, 117, 118, 198, 204, 267, 274, 275], "10": [12, 13, 74, 274, 283], "alpha": [12, 276], "5": [12, 155, 237, 274, 283], "diffusion_tim": 12, "manifold": [12, 13, 71, 74, 101, 179, 191, 201, 208, 258, 259, 275, 280, 283], "estim": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 74, 177, 179, 180, 220, 240, 241, 242, 243, 244, 245, 246, 247, 253, 274, 283], "adapt": [12, 203, 208, 249], "veri": [12, 44, 72, 74, 76, 77, 109, 110, 111, 191, 220, 237], "some": [12, 14, 33, 70, 72, 77, 104, 114, 117, 143, 163, 165, 171, 176, 196, 197, 198, 205, 242, 243, 244, 245, 246, 247, 256, 258, 274, 277, 283], "minor": 12, "spars": [12, 13, 37, 46, 47, 48, 49, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 275, 280], "current": [12, 13, 33, 44, 71, 86, 101, 114, 117, 133, 143, 151, 172, 177, 201, 221, 249, 258, 276, 278, 283], "unsupport": [12, 13, 143], "becaus": [12, 13, 41, 43, 105, 135, 136, 137, 138, 139, 140, 141, 142, 155, 175, 191, 192, 193, 205, 220, 253, 267, 274, 276, 284], "implement": [12, 13, 33, 44, 64, 71, 91, 92, 100, 104, 108, 111, 115, 133, 135, 143, 148, 155, 156, 157, 170, 172, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 241, 248, 249, 274, 279, 283], "extrem": [12, 13, 175, 220, 277], "solver": [12, 13], "doe": [12, 13, 57, 64, 106, 162, 174, 194, 204, 209, 210, 211, 212, 213, 214, 215, 217], "yet": [12, 13, 249, 283], "exist": [12, 13, 119, 132, 133, 134, 139, 143, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 277, 283], "jax": [12, 13, 26, 29, 30, 33, 68, 70, 86, 91, 108, 110, 111, 115, 121, 152, 153, 177, 194, 196, 197, 198, 202, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 221, 256, 274, 276, 278, 283], "For": [12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 33, 36, 37, 38, 47, 49, 51, 52, 53, 54, 55, 57, 72, 74, 76, 77, 81, 107, 109, 110, 111, 114, 117, 121, 133, 138, 139, 143, 155, 157, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 190, 192, 193, 197, 198, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 242, 243, 244, 245, 246, 247, 263, 270, 274, 277, 278, 283], "generalis": [12, 13, 276, 279, 280], "connectop": [12, 13, 78, 205, 275, 280], "instead": [12, 13, 15, 16, 21, 22, 23, 33, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 70, 75, 76, 89, 97, 117, 141, 142, 143, 148, 155, 157, 158, 170, 213, 217, 220, 221, 227, 228, 230, 248, 251, 256, 267, 274, 276], "onc": [12, 13, 114, 117, 118, 237], "we": [12, 13, 15, 16, 68, 70, 105, 133, 162, 174, 183, 193, 198, 205, 220, 237, 256, 274, 276, 283], "vjp": [12, 13], "rule": [12, 13, 31, 32, 193], "elementari": [12, 13, 275], "anywai": [12, 13], "anisotrop": 12, "kind": [12, 192, 198], "produc": [12, 57, 60, 97, 118, 148, 152, 238, 242, 243, 244, 245, 246, 247, 267], "algorithm": [12, 74, 177, 179, 192, 274, 283], "eigenmap": [12, 13, 192, 205], "random": [12, 72, 74, 76, 77, 83, 109, 110, 111, 133, 138, 139, 148, 152, 153, 155, 177, 194, 196, 204, 209, 210, 211, 212, 213, 214, 215, 217, 237, 274, 275, 277, 280, 283], "walk": 12, "style": 12, "fokker": 12, "planck": 12, "laplac": [12, 277, 280], "beltrami": 12, "vertic": [12, 13, 35, 36, 37, 38, 39, 126, 133, 136, 138, 177, 192, 198, 205, 235, 263, 269, 270], "edg": [12, 13, 35, 36, 37, 38, 39, 177, 205, 267, 274, 276], "edge_index": [12, 13, 37], "q": [12, 13, 39, 192, 202, 203, 205, 226, 274], "adjac": [12, 13, 33, 36, 37, 38, 39, 205, 270, 276], "affin": [12, 13, 161, 192, 193, 205], "multi": [12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 121, 143, 191, 198, 242, 243, 245, 246], "consid": [12, 38, 39, 41, 43, 72, 74, 76, 77, 109, 110, 111, 175, 193, 209, 210, 211, 212, 213, 214, 215, 217, 253], "valid": [12, 143, 196, 209, 210, 211, 212, 213, 214, 215, 217, 276, 277, 283], "etc": [12, 242, 243, 245, 246], "true": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 39, 41, 42, 43, 44, 52, 70, 72, 74, 75, 76, 77, 79, 84, 93, 97, 98, 106, 109, 110, 111, 126, 132, 135, 136, 137, 138, 139, 140, 141, 142, 155, 157, 177, 188, 192, 193, 197, 198, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 226, 228, 235, 242, 243, 244, 245, 246, 247, 255, 256, 263, 274], "otherwis": [13, 37, 41, 44, 60, 67, 97, 106, 132, 192, 193, 197, 198, 202, 203, 205, 220, 226, 228, 251], "list": [13, 37, 101, 113, 155, 156, 157, 180, 248, 258, 259], "degre": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 37, 38, 39, 53, 114, 116, 117, 118, 192, 204, 205, 242, 243, 244, 245, 246, 247, 267], "deriv": [14, 25, 241, 259, 263, 276], "connect": [14, 35, 36, 38, 39, 177, 205, 206, 207, 274, 276, 283], "statist": [14, 242, 243, 244, 245, 246, 247], "relationship": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 242, 243, 244, 245, 246, 247, 256], "between": [14, 15, 16, 19, 20, 21, 22, 33, 35, 36, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 60, 64, 74, 88, 90, 101, 105, 106, 155, 163, 165, 169, 175, 176, 179, 180, 184, 189, 190, 191, 192, 196, 201, 202, 203, 204, 205, 242, 243, 244, 257, 258, 259, 263, 274, 283], "localis": 14, "seri": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 114, 117, 118, 133, 152, 204, 220, 226, 235, 242, 243, 245, 246, 248, 253, 268, 275, 279, 280, 283], "signal": [14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 152, 155, 158, 225, 226, 227, 228, 229, 230, 234, 235, 266, 267, 274, 276, 277], "It": [14, 15, 16, 19, 20, 21, 22, 39, 43, 44, 57, 70, 72, 74, 77, 91, 101, 118, 121, 140, 143, 155, 157, 170, 171, 179, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 237, 248, 253, 255, 256, 276], "typic": [14, 101, 107, 143, 276], "operationalis": [14, 101, 274], "most": [14, 175, 192, 220, 276, 277], "often": [14, 41, 43, 106, 143, 170, 192, 198, 220, 253, 276], "corr": [14, 18, 21, 204, 245, 246, 247, 274, 275], "partialcov": [14, 16, 21, 23, 275], "partial": [14, 17, 18, 23, 113, 245, 246, 247, 275, 283], "partialcorr": [14, 15, 17, 18, 22, 23, 245, 246, 247, 275], "pairedcov": [14, 18, 48, 242, 243, 244, 275], "pairedcorr": [14, 20, 46, 242, 243, 244, 275], "conditionalcov": [14, 15, 20, 22, 242, 243, 244, 275], "conditionalcorr": [14, 16, 17, 21, 242, 243, 244, 275, 283], "precis": [14, 18, 22, 245, 246, 247, 275], "cov": [15, 16, 17, 19, 20, 21, 22, 23, 225, 226, 229, 241, 242, 243, 244, 245, 246, 247, 275, 280, 282, 283], "y": [15, 16, 19, 20, 70, 102, 103, 105, 190, 195, 199, 256], "require_nonsingular": [15, 16, 21, 22, 23, 75, 76], "param": [15, 16, 17, 19, 21, 22, 23, 31, 32, 38, 39, 114, 117, 118, 134, 186], "variabl": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 113, 114, 116, 117, 118, 206, 237, 242, 243, 244, 245, 246, 247, 248, 256, 267], "one": [15, 16, 62, 84, 89, 97, 98, 121, 133, 158, 177, 180, 192, 196, 198, 201, 205, 209, 210, 211, 212, 213, 214, 215, 217, 237, 242, 243, 244, 274, 283], "anoth": [15, 16, 92, 133, 135, 136, 137, 138, 139, 140, 141, 142, 180, 198, 205, 254], "sigma_": [15, 16], "xx": [15, 16], "yy": [15, 16], "xy": [15, 16], "schur": [15, 16], "complement": [15, 16, 33, 237, 242, 245], "equival": [15, 16, 35, 39, 60, 106, 114, 117, 118, 193, 212, 215, 220, 242, 243, 244, 245, 246, 263, 267, 278], "after": [15, 16, 33, 63, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 186, 188, 207, 209, 210, 211, 212, 213, 214, 215, 217, 229, 230, 235, 242, 243, 244, 284], "residualis": [15, 16, 275, 280, 282, 283], "them": [15, 16, 41, 42, 43, 44, 164, 166, 192, 193, 197, 204, 205, 237, 253], "respect": [15, 16, 33, 70, 185], "plu": [15, 16, 69, 152], "intercept": [15, 16, 113, 114, 116, 117, 242, 243, 244], "term": [15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 49, 54, 60, 70, 106, 113, 114, 116, 117, 204, 205, 220, 242, 243, 244, 245, 246, 247, 256, 263, 267], "interpret": [15, 16, 21, 22, 49, 54, 143, 155, 158, 204, 205, 242, 243, 244, 245, 246, 247, 277], "interest": [15, 16, 36, 38, 39, 198, 279], "control": [15, 16, 41, 43, 207, 242, 243, 244, 253], "effect": [15, 16, 19, 20, 32, 33, 37, 67, 206, 242, 243, 244], "confound": [15, 16, 237, 238, 239, 242, 243, 244, 283], "nuisanc": [15, 16, 274], "obtain": [15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 84, 97, 98, 101, 206, 242, 243, 244, 245, 246, 247], "via": [15, 17, 19, 21, 22, 27, 29, 30, 31, 32, 63, 70, 72, 74, 77, 106, 114, 117, 179, 220, 235, 248, 256], "given": [15, 17, 19, 35, 37, 38, 39, 43, 68, 72, 77, 113, 153, 188, 191, 192, 207, 220, 225, 226, 235, 253, 258, 259], "hat": [15, 17, 19, 179, 199, 258, 259], "sigma": [15, 16, 17, 18, 19, 20, 22, 49, 54, 134, 135, 136, 137, 138, 139, 140, 141, 142, 226], "mathbb": [15, 17, 19, 35, 36, 39, 89, 205, 235], "r": [15, 17, 19, 21, 35, 36, 39, 53, 55, 60, 67, 68, 89, 103, 104, 105, 106, 114, 117, 118, 155, 158, 182, 205, 235, 263], "r_": [15, 17, 19, 187], "c_x": [15, 16, 19, 20, 70], "ob": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 113, 114, 116, 117, 118, 180], "size": [15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 67, 70, 72, 73, 74, 75, 76, 77, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 128, 129, 130, 131, 143, 169, 177, 179, 188, 198, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 235, 242, 243, 244, 245, 246, 247, 248, 258, 259, 267], "data": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 67, 70, 78, 80, 85, 86, 89, 100, 101, 104, 106, 112, 113, 114, 116, 117, 118, 135, 136, 137, 138, 139, 140, 141, 142, 143, 175, 191, 196, 198, 201, 208, 229, 230, 237, 242, 243, 244, 245, 246, 247, 248, 253, 257, 258, 259, 265, 267, 274, 276, 280, 283], "channel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 67, 70, 84, 97, 98, 101, 104, 106, 113, 114, 116, 117, 118, 180, 198, 206, 225, 226, 227, 228, 230, 242, 243, 244, 245, 246, 247, 248, 255, 258, 259, 263, 267, 283], "observ": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 70, 101, 104, 113, 114, 116, 117, 118, 175, 180, 183, 185, 186, 187, 190, 194, 196, 197, 204, 205, 220, 225, 226, 227, 228, 230, 235, 237, 238, 242, 243, 244, 245, 246, 247, 248, 253, 256, 267], "per": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 101, 104, 113, 114, 116, 117, 118, 225, 226, 227, 228, 230, 237, 238, 242, 243, 244, 245, 246, 247, 248, 267], "c_y": [15, 16, 19, 20, 70], "sampl": [15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 43, 72, 74, 76, 77, 97, 109, 110, 111, 128, 129, 130, 131, 132, 133, 137, 138, 139, 143, 150, 152, 153, 155, 158, 194, 204, 229, 230, 237, 253, 259, 267], "multivari": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 183, 185, 186, 206, 225, 226, 227, 228, 229, 230, 242, 243, 244, 245, 246, 247], "influenc": [15, 16], "wish": [15, 16, 72, 74, 76, 77, 109, 110, 111], "remov": [15, 16, 70, 106, 126], "penultim": [15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 114, 117, 242, 243, 244, 245, 246, 247, 256], "gener": [15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 72, 74, 76, 77, 83, 88, 97, 106, 108, 109, 110, 111, 133, 137, 148, 152, 153, 162, 163, 165, 168, 169, 170, 171, 172, 174, 175, 176, 192, 194, 198, 204, 209, 210, 211, 212, 213, 214, 215, 217, 235, 243, 246, 263, 277, 283], "limit": [15, 16, 60, 235], "nonsingular": [15, 16, 21, 22, 23, 75, 76], "moor": [15, 16, 21, 22, 23, 57, 75, 76], "penros": [15, 16, 21, 22, 23, 57, 75, 76], "pseudoinvers": [15, 16, 21, 22, 23, 57, 75, 76], "rowvar": [15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 242, 243, 244, 245, 246, 247, 256], "bia": [15, 16, 17, 18, 19, 20, 21, 22, 23, 106, 114, 115, 117, 118, 255, 263, 267], "bias": [15, 16, 17, 18, 19, 20, 21, 22, 23, 106, 242, 243, 244, 245, 246, 247], "unweight": [15, 16, 17, 18, 19, 20, 21, 22, 23, 242, 243, 244, 245, 246, 247], "case": [15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 38, 39, 57, 67, 70, 72, 74, 76, 77, 78, 84, 98, 109, 110, 111, 133, 151, 177, 191, 192, 199, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 242, 243, 244, 245, 246, 247, 256, 258, 259, 263, 276, 277], "perform": [15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 84, 91, 97, 98, 101, 114, 117, 118, 143, 171, 187, 209, 210, 211, 212, 213, 214, 215, 217, 237, 242, 243, 244, 245, 246, 247, 250, 274], "By": [15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 39, 44, 65, 66, 69, 135, 136, 138, 140, 141, 142, 152, 155, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 242, 243, 244, 245, 246, 247, 248, 283], "unbias": [15, 16, 17, 18, 19, 20, 21, 22, 23, 133, 242, 243, 244, 245, 246, 247], "ddof": [15, 16, 17, 18, 19, 20, 21, 22, 23, 241, 242, 243, 244, 245, 246, 247], "freedom": [15, 16, 17, 18, 19, 20, 21, 22, 23, 242, 243, 244, 245, 246, 247], "overrid": [15, 16, 17, 18, 19, 20, 21, 22, 23, 242, 243, 244, 245, 246, 247], "automat": [15, 16, 17, 18, 19, 20, 21, 22, 23, 47, 53, 54, 55, 97, 117, 118, 136, 143, 148, 187, 220, 242, 243, 244, 245, 246, 247, 276, 278, 283], "import": [15, 16, 17, 18, 19, 20, 21, 22, 23, 192, 242, 243, 245, 246, 274, 283], "coupl": [15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 60, 106, 205, 242, 243, 245, 246, 263], "semidefinit": [15, 16, 17, 18, 19, 20, 21, 22, 23, 57, 60, 62, 63, 72, 73, 74, 75, 76, 77, 106, 107, 110, 171, 179, 180, 204, 242, 243, 245, 246, 258, 259, 263, 275, 277, 280, 282, 283], "In": [15, 16, 17, 18, 19, 20, 21, 22, 23, 33, 44, 57, 67, 72, 74, 76, 77, 101, 106, 109, 110, 111, 133, 155, 157, 175, 177, 179, 191, 193, 198, 204, 213, 220, 242, 243, 245, 246, 259, 267, 274, 276, 277], "again": [15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 63, 242, 243, 245, 246, 274], "rel": [15, 16, 17, 18, 19, 20, 21, 22, 23, 155, 158, 174, 175, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 242, 243, 245, 246, 258], "off": [15, 16, 17, 18, 19, 20, 21, 22, 23, 67, 192, 242, 243, 245, 246], "band": [15, 16, 17, 18, 19, 20, 21, 22, 23, 67, 155, 158, 182, 242, 243, 245, 246, 277, 280, 283], "inter": [15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 39, 205, 226, 242, 243, 245, 246, 279, 280, 283], "tempor": [15, 16, 17, 18, 19, 20, 21, 22, 23, 235, 242, 243, 245, 246, 283], "l2": [15, 16, 17, 18, 19, 20, 21, 22, 23, 46, 48, 50, 52, 70, 100, 101, 192, 205, 206, 242, 243, 244, 245, 246, 247, 256, 283], "nonneg": [15, 16, 17, 18, 19, 20, 21, 22, 23, 38, 39, 74, 110, 162, 168, 174, 179, 188, 204, 207, 242, 243, 244, 245, 246, 247, 263, 274], "add": [15, 16, 17, 18, 19, 20, 21, 22, 23, 188, 193, 207, 242, 243, 244, 245, 246, 247, 255, 263], "likelihood": [15, 16, 17, 18, 19, 20, 21, 22, 23, 242, 243, 244, 245, 246, 247], "intermedi": [15, 16, 17, 18, 19, 20, 21, 22, 23, 97, 191, 220, 242, 243, 244, 245, 246, 247], "empir": [15, 16, 17, 18, 19, 20, 22, 23, 242, 243, 244, 245, 246, 247, 283], "unnormalis": [15, 198, 220], "two": [19, 20, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 65, 90, 98, 101, 105, 114, 117, 147, 151, 156, 177, 189, 190, 196, 201, 202, 203, 204, 205, 217, 242, 243, 244, 251, 274, 283], "includ": [19, 20, 44, 65, 69, 97, 101, 104, 113, 114, 116, 117, 133, 135, 143, 155, 177, 183, 198, 204, 220, 237, 242, 243, 244, 245, 246, 247, 267, 274, 276, 283], "direct": [21, 22, 37, 39, 44, 47, 49, 51, 52, 53, 54, 55, 278], "effici": [21, 27, 29, 30, 82, 104, 220, 267], "success": 21, "accompani": 21, "negat": [21, 22, 163, 176, 213], "singular": [23, 62, 63, 109, 111, 194, 204, 242, 243, 244, 245, 246, 247], "less": [23, 41, 43, 74, 82, 110, 179, 193, 253], "ensur": [23, 62, 63, 72, 74, 76, 77, 84, 98, 105, 109, 110, 111, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 242, 243, 244, 245, 246, 247, 248, 258, 259, 274, 276, 278], "done": 23, "altern": [23, 258, 259, 283], "omega": [23, 35, 39, 53, 72, 77, 192, 205, 258, 259], "product_filt": [24, 32, 275], "product_filtfilt": [24, 31, 248, 275], "unwrap": [24, 26, 29, 30, 275], "analytic_sign": [24, 26, 27, 28, 29, 30, 275], "hilbert_transform": [24, 25, 26, 27, 29, 30, 275], "envelop": [24, 25, 26, 28, 29, 30, 275], "instantaneous_phas": [24, 25, 26, 27, 28, 29, 275], "instantaneous_frequ": [24, 25, 26, 27, 28, 30, 275], "env_inst": [24, 25, 27, 28, 29, 30, 275], "fourier": [25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 43, 253, 275, 280, 283], "analyt": [25, 26, 27, 29, 30, 276], "helic": 25, "represent": [25, 46, 47, 48, 49, 50, 51, 53, 54, 55, 135, 143, 263], "Its": [25, 143], "real": [25, 31, 32, 123, 169, 226, 228, 276], "imaginari": 25, "part": [25, 135, 136, 138, 139, 140, 141, 142, 237], "relat": [25, 276], "hilbert": [25, 28], "properti": [25, 37, 78, 204, 224, 243, 246, 277], "quickli": 25, "instantan": [25, 26, 27, 29, 30], "frequenc": [25, 26, 27, 28, 29, 30, 31, 32, 41, 43, 155, 156, 157, 158, 198, 225, 228, 229, 253, 275, 277, 280, 282, 283], "compon": [25, 26, 27, 28, 29, 30, 32, 120, 122, 228, 276, 283], "f": [26, 29, 80, 85, 97, 155, 156, 157, 158, 190, 209, 210, 211, 212, 213, 214, 215, 217, 225, 228, 229, 248, 249, 274, 283], "period": [26, 29, 30, 33, 41, 43, 253], "6": [26, 29, 30, 33, 283], "283185307179586": [26, 29, 30, 33], "decompos": [26, 63, 122], "pi": [26, 29, 30, 33], "rang": [26, 29, 30, 33, 163, 165, 169, 175, 176, 274, 283], "over": [26, 29, 30, 33, 43, 44, 73, 74, 75, 76, 80, 84, 97, 98, 108, 113, 114, 117, 118, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 171, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 235, 243, 246, 248, 253, 266, 267, 274, 277, 283], "wrap": [26, 29, 30, 33, 170, 279], "numpi": [26, 29, 30, 33, 64, 197, 198, 202, 203, 221, 274, 276, 283], "analytic_signal_sampling_frequ": [26, 29], "you": [27, 29, 30, 72, 74, 76, 77, 80, 101, 104, 109, 110, 111, 117, 175, 188, 192, 207, 248, 249, 284], "requir": [27, 29, 30, 72, 74, 76, 77, 97, 104, 109, 110, 111, 113, 143, 168, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 259], "convolv": [31, 101, 104, 114, 117, 118, 135, 136, 137, 138, 139, 140, 141, 142, 143], "multipl": [31, 32, 81, 84, 87, 91, 92, 98, 141, 142, 143, 155, 177, 187, 220, 237, 245, 246, 247, 248, 279, 280], "domain": [31, 32, 148, 154, 155, 157, 162, 163, 164, 165, 169, 171, 174, 175, 176, 179, 191, 198, 228, 258, 259, 275, 276, 277, 280, 282, 283], "filter": [31, 43, 106, 152, 154, 155, 156, 157, 218, 253, 274, 275, 277, 280, 282, 283], "guarante": [31, 60, 63, 72, 106, 177, 179, 258, 259, 283], "even": [31, 155, 157, 274], "when": [31, 39, 41, 43, 70, 74, 97, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 155, 157, 162, 174, 179, 186, 192, 197, 198, 201, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 220, 226, 253, 256, 263, 277], "strictli": [31, 32, 35, 39, 82, 155, 194, 204, 258], "lfloor": [31, 32], "rfloor": [31, 32], "analogu": [31, 32], "gain": [31, 32, 248], "bin": [31, 32, 41, 43, 155, 156, 157, 198, 248, 253], "spectrum": [31, 32, 43, 155, 157, 225, 227, 228, 229, 230, 248, 253, 283], "low": [31, 32, 60, 88, 106, 155, 158, 191, 262, 263], "high": [31, 32, 43, 155, 158, 191, 253, 258, 276], "broadcast": [31, 32, 87, 123, 149, 152, 193, 217, 220, 223], "jnp": [31, 32, 57, 155, 171, 216, 221, 274, 283], "fft": [31, 32], "rfft": [31, 32], "irfft": [31, 32], "digit": 32, "revers": [32, 44, 248], "copi": 32, "quadrat": [32, 47], "delai": [32, 155, 158], "could": [32, 37, 101, 105, 114, 117, 177, 198, 209, 210, 211, 212, 213, 214, 215, 217, 283], "make": [32, 183, 204], "sens": [32, 155, 157], "simpli": [32, 198], "depend": [32, 37, 97, 155, 158, 226, 228, 242, 243, 244, 245, 246, 247], "context": [32, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 274, 279], "discont": 33, "larg": [33, 37, 38, 39, 67, 191, 220, 221, 274, 276, 283], "delta": [33, 152, 205], "retain": [33, 57], "new": [33, 74, 113, 116, 132, 133, 170, 177, 179, 208, 258, 276, 283], "code": [33, 143, 274, 276, 283], "contigu": 33, "greater": [33, 143, 194, 198, 204, 212, 237], "discontinu": 33, "half": [33, 196], "radian": [33, 122, 123], "achiev": [33, 274], "ad": [33, 63, 70, 72, 74, 76, 77, 106, 109, 110, 111, 134, 152, 180, 194, 204, 256, 267, 276], "appropri": [33, 70, 87, 113, 180, 192, 209, 221, 267], "cast": 33, "exceed": 33, "continu": [33, 133, 135, 141, 142, 143, 274], "smaller": [33, 38, 39, 63, 197, 274], "girvan_newman_nul": [34, 38, 39, 275], "modularity_matrix": [34, 274, 275], "coaffili": [34, 39, 205, 274, 275], "commun": [34, 38, 39, 177, 192, 198, 205, 274, 275, 283], "relaxed_modular": [34, 38, 275], "graph_laplacian": [34, 275], "c_o": [35, 39, 114, 117, 118], "exclude_diag": [35, 39, 205], "normalise_coaffili": [35, 39, 274], "under": [35, 39, 143, 169, 170, 192, 205, 283], "structur": [35, 38, 39, 43, 67, 68, 182, 205, 242, 243, 244, 245, 246, 247, 253, 274], "affili": [35, 39, 198, 205, 274], "node": [35, 36, 39, 106, 143, 177, 198, 205, 274], "o": [35, 36, 38, 39, 238, 242, 243, 244, 245, 246, 247, 267], "sink": [35, 36, 38, 39], "coeffici": [35, 47, 53, 54, 55, 60, 106, 158], "h": [35, 39, 60, 106, 205, 263, 274], "c_i": [35, 39], "propos": [35, 39, 192, 205], "partit": [35, 38, 39, 274], "emit": [35, 36, 38, 39], "receiv": [35, 36, 38, 39, 180, 277], "encod": [35, 39, 106, 133, 135, 143, 153, 258, 259], "uncertainti": [35, 39, 205], "vertex": [35, 39, 133, 136, 138, 177, 192, 205, 235, 280, 282], "jk": [35, 39], "probabl": [35, 39, 68, 86, 110, 143, 153, 162, 174, 184, 190, 197, 198, 202, 203, 205, 221, 274, 277, 283, 284], "j": [35, 39, 196, 198, 202], "binari": [35, 39, 242, 243, 244, 274], "reflect": [35, 39, 148], "determinist": [35, 39, 177, 197, 198, 205], "assum": [35, 39, 47, 49, 51, 52, 53, 54, 55, 126, 140, 191, 194, 201, 204, 205, 208, 228], "l_": [35, 39, 133, 185], "assort": [35, 39, 205], "preferenti": [35, 39], "remain": [35, 39, 185, 283], "disaffili": [35, 39], "self": [35, 39, 134, 274, 279, 280, 283], "link": [35, 39, 284], "max": [35, 38, 39, 159, 163, 169, 175, 176], "girvan": [36, 38, 39], "newman": [36, 38, 39], "null": [36, 38, 39, 143, 201, 205], "model": [36, 38, 39, 134, 136, 138, 143, 148, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 188, 198, 201, 205, 207, 237, 238, 239, 242, 243, 244, 245, 246, 247, 258, 276, 277, 278, 279, 283], "expect": [36, 43, 175, 205, 206, 226, 228, 253, 276], "cut": [36, 205], "result": [36, 38, 39, 43, 57, 63, 70, 72, 81, 91, 97, 105, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 155, 157, 162, 174, 177, 185, 193, 197, 209, 210, 211, 212, 213, 214, 215, 217, 220, 237, 253, 255, 256, 274], "stub": 36, "randomli": [36, 155, 177, 205, 237], "rewir": [36, 205], "k_o": 36, "2m": [36, 38], "yield": [36, 248], "p_": [36, 205], "gn": [36, 205], "quantiti": [36, 38, 39, 189, 191, 220], "compris": [36, 38, 143, 283], "topk": [37, 78, 275], "bcoo": [37, 50, 51, 52, 79, 81, 82, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 275], "mani": [37, 38, 39, 78, 143, 171, 177, 192, 209, 210, 211, 212, 213, 214, 215, 217, 276], "applic": [37, 78, 197, 198, 204, 249, 274, 276, 283], "tend": 37, "domin": [37, 274], "further": [37, 163, 165, 168, 169, 176, 185, 248, 276], "analysi": [37, 204, 283], "widetild": [37, 72, 74, 76, 77, 109, 110, 111, 226], "undirect": [37, 205], "duplic": 37, "index": [37, 78, 84, 91, 98, 198, 248, 274], "swap": 37, "convent": [37, 47, 49, 51, 52, 53, 54, 55], "adopt": 37, "top": [37, 47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 275], "gamma": [38, 39, 47, 49, 53, 54, 55, 205, 274], "callabl": [38, 39, 44, 80, 85, 97, 101, 106, 110, 113, 114, 117, 118, 120, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 177, 180, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 237, 242, 243, 244, 245, 246, 247, 248, 274], "normalise_modular": [38, 39, 274], "modular": [38, 39, 274, 279, 280, 283], "suitabl": [38, 39, 72, 74, 76, 77, 109, 110, 111, 179, 258, 259], "b": [38, 39, 91, 92, 205, 249, 274], "resolut": [38, 39, 205, 274], "larger": [38, 39, 41, 43, 101, 175, 253], "small": [38, 39, 72, 74, 76, 77, 109, 110, 111, 283], "mai": [38, 39, 70, 192, 205, 209], "necessari": [38, 39, 72, 143, 187, 284], "arg": [38, 39, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 153, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 218, 219, 220, 221, 222, 232, 233, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 259, 263, 266, 267, 268, 270, 271, 274], "relax": [39, 274, 279, 280], "support": [39, 68, 99, 112, 194, 199, 204, 205, 217, 236, 240, 265, 276, 278, 283], "linkag": [39, 205], "revert": [39, 205], "standard": [39, 49, 82, 100, 126, 134, 155, 170, 180, 190, 205, 226, 229, 230, 235, 259, 274, 283], "sum": [39, 63, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 159, 196, 197, 198, 199, 202, 203, 205, 220, 235, 274, 279, 280, 283], "hadamard": [39, 88, 205], "method": [40, 41, 43, 63, 68, 72, 74, 76, 77, 104, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 152, 153, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 191, 192, 193, 196, 198, 199, 201, 204, 205, 206, 207, 208, 218, 219, 220, 221, 222, 232, 233, 235, 237, 239, 241, 248, 249, 251, 252, 253, 258, 263, 271, 276, 283], "extrapol": 40, "unseen": [40, 41, 42, 44, 251], "censor": [40, 283], "frame": [40, 41, 42, 43, 44, 114, 117, 251, 267, 283], "hybrid_interpol": [40, 275], "linear": [40, 51, 70, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 220, 234, 238, 239, 251, 252, 254, 255, 256, 275, 277, 282], "spectral": [40, 43, 224, 251, 253, 275], "linear_interpol": [40, 275], "weighted_interpol": [40, 275], "spectral_interpol": [40, 253, 275], "mask": [41, 42, 43, 44, 121, 124, 125, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 156, 242, 243, 245, 246, 248, 277], "max_consecutive_linear": [41, 251], "oversampling_frequ": [41, 43, 253], "8": [41, 43, 253, 283], "maximum_frequ": [41, 43, 253], "sampling_period": [41, 43, 253], "frequency_thresh": [41, 43, 253], "hybrid": [41, 251], "approach": [41, 43, 60, 106, 108, 111, 177, 192, 251, 253, 276], "awai": [41, 135, 136, 140, 141, 142, 197, 251], "seen": [41, 44, 114, 117, 248, 251], "imput": [41, 42, 43, 44, 165, 251, 275, 280], "proce": [41, 44, 101, 135, 251], "group": [41, 104, 119, 251, 274], "boolean": [41, 42, 43, 44, 84, 98, 135, 136, 138, 139, 140, 141, 142, 143, 155, 156, 226, 228, 242, 243, 245, 246, 248], "whether": [41, 42, 43, 44, 66, 70, 114, 117, 132, 209, 210, 211, 212, 213, 214, 215, 217, 235, 256, 274], "good": [41, 42, 43, 44, 237], "bad": [41, 42, 43, 44, 258], "miss": [41, 42, 43, 44, 86, 253], "flag": [41, 42, 43, 44, 135, 136, 137, 138, 139, 140, 141, 142, 253], "consecut": [41, 43, 251, 253], "cannot": [41, 155, 186, 251], "sine": [41, 43, 253], "cosin": [41, 43, 47, 253], "spectra": [41, 43, 155, 253], "oversampl": [41, 43, 253], "fit": [41, 43, 70, 89, 220, 235, 253, 256], "fraction": [41, 43, 253, 263], "nyquist": [41, 43, 155, 158, 253], "orthogon": [41, 43, 70, 172, 192, 204, 253, 256], "basi": [41, 43, 106, 113, 114, 116, 117, 204, 253, 266], "spuriou": [41, 43, 253], "varianc": [41, 43, 70, 114, 117, 152, 175, 253], "captur": [41, 43, 253, 283], "dataset": [41, 42, 43, 44, 101, 113, 114, 116, 117, 118, 175, 180, 208, 220, 229, 248, 259, 263, 267, 276], "proxim": [42, 196], "nearest": [42, 44, 283], "neighbour": [42, 44], "interpol": [43, 44, 251, 252, 253, 275, 280, 282, 283], "corrupt": [43, 253], "proxi": [43, 253], "reconstruct": [43, 63, 177, 253], "user": [43, 133, 135, 143, 209, 210, 211, 212, 213, 214, 215, 217, 253], "advis": [43, 70, 143, 209, 210, 211, 212, 213, 214, 215, 217, 253, 256, 267], "accordingli": [43, 198, 204, 220, 253], "might": [43, 72, 74, 76, 77, 101, 104, 106, 109, 110, 111, 133, 148, 163, 165, 169, 176, 183, 187, 193, 198, 204, 220, 221, 237, 253, 258, 276], "share": [43, 60, 78, 253, 274], "inspir": [43, 253], "previou": [43, 74, 179, 253, 258, 267], "work": [43, 74, 101, 102, 103, 104, 105, 106, 121, 171, 175, 179, 201, 220, 249, 253], "anish": [43, 253], "mitra": [43, 253], "jonathan": [43, 253], "power": [43, 116, 117, 253, 267, 276], "turn": [43, 204, 253], "lomb": [43, 253], "scargl": [43, 253], "periodogram": [43, 253], "temporarili": [43, 253, 272, 284], "omiss": [43, 253], "due": [43, 72, 74, 76, 77, 109, 110, 111, 253], "artefact": [43, 236, 253, 283], "content": [43, 143, 253, 272], "reduc": [43, 52, 80, 91, 97, 133, 183, 185, 197, 202, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 253], "disrupt": [43, 253], "autocorrel": [43, 253], "introduc": [43, 253, 274, 276], "artefactu": [43, 253], "outlier": [43, 175, 253], "arguabl": [43, 253], "linearli": [43, 238, 253], "convolut": [43, 44, 100, 106, 114, 115, 117, 118, 134, 152, 238, 239, 248, 253, 255, 266, 267, 268, 275, 280, 283], "relev": [43, 134, 218, 253], "plai": [43, 253], "role": [43, 253], "easili": [43, 253, 277], "tmask": [43, 253], "your": [43, 89, 117, 253, 278], "start_stag": 44, "max_stag": 44, "auto": [44, 174, 188, 207], "stage": [44, 220, 276], "map_to_kernel": 44, "averag": [44, 60, 66, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 191, 263], "progress": 44, "longer": [44, 284], "window": [44, 114, 117, 118, 128, 129, 130, 131, 132, 271, 275, 280], "kernel": [44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 100, 101, 104, 106, 114, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 194, 204, 262, 267, 275, 280, 283], "mark": [44, 143], "next": [44, 63, 177, 274, 283], "until": [44, 67], "everi": [44, 89, 101, 105, 135, 136, 137, 138, 139, 140, 141, 142, 171, 237], "practic": [44, 155, 157, 220, 237, 274, 277], "ineffici": 44, "mean": [44, 72, 73, 74, 75, 76, 77, 84, 98, 155, 178, 179, 180, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 216, 220, 222, 227, 228, 230, 235, 258, 259, 279, 280, 283], "govern": 44, "initi": [44, 60, 106, 117, 118, 283], "boxcar": 44, "forward": [44, 71, 106, 162, 165, 170, 174, 218, 237, 276, 283], "integ": [44, 84, 98, 133, 143, 213, 235, 243, 246], "creat": [44, 67, 106, 113, 116, 117, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 170, 213, 229, 230, 274, 283], "metric": [45, 100, 101, 106, 196, 263, 283], "linear_kernel": [45, 275], "param_norm": [45, 275], "linear_dist": [45, 196, 275], "polynomial_kernel": [45, 275], "sigmoid_kernel": [45, 275], "gaussian_kernel": [45, 54, 275], "rbf_kernel": [45, 49, 275], "cosine_kernel": [45, 275], "cov_kernel": [45, 275], "corr_kernel": [45, 194, 204, 275], "x0": [46, 47, 48, 49, 50, 51, 53, 54, 55], "x1": [46, 47, 48, 49, 50, 51, 53, 54, 55], "theta": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 72, 77, 192, 194, 204, 205, 258, 259], "parameteris": [46, 47, 48, 49, 51, 52, 53, 54, 55, 148, 192, 202, 203, 205, 206, 237, 275, 276, 279, 280], "thin": [46, 48, 150, 221, 238], "wrapper": [46, 48, 80, 85, 91, 150, 218, 221, 238, 279], "featur": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 198, 254, 255, 263], "dens": [46, 47, 48, 49, 51, 53, 54, 55, 106], "m": [46, 47, 48, 49, 51, 53, 54, 55, 86, 89, 202, 278], "unparameteris": [46, 47, 48, 49, 50, 51, 53, 54, 55], "gram": [46, 47, 48, 49, 51, 53, 54, 55, 194, 279, 280], "x_0": [47, 49, 51, 53, 54, 55], "x_1": [47, 49, 51, 53, 54, 55], "k_": [47, 49, 51, 53, 54, 55], "a_i": 47, "form": [47, 52, 64, 65, 69, 72, 77, 87, 89, 123, 133, 192, 209, 210, 211, 212, 213, 214, 215, 217, 226, 238], "here": [47, 49, 51, 52, 53, 54, 55, 67, 68, 71, 104, 139, 162, 174, 237, 258, 274, 277, 283], "frequent": [47, 49, 51, 52, 53, 54, 55, 135, 204], "literatur": [47, 49, 51, 52, 53, 54, 55], "howev": [47, 49, 51, 52, 53, 54, 55, 72, 165, 263, 274], "benefit": [47, 49, 51, 52, 53, 54, 55], "format": [47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 85, 87, 91, 92, 93, 96, 97, 98, 102, 103, 105, 275], "gaussian": [49, 100, 104, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 229, 230], "deviat": [49, 126, 134, 155, 180, 198, 235], "pairwis": [49, 54, 90, 101, 105, 192, 205, 283], "rather": [49, 54, 143, 170, 192, 209, 210, 211, 212, 213, 214, 215, 217, 242, 243, 244, 245, 246, 247, 283], "euclidean": [50, 73, 74, 75, 76, 101, 105, 135, 136, 137, 138, 139, 140, 141, 142, 143, 171, 179, 185, 208, 259, 277], "mahalanobi": [50, 171, 206], "intermediate_indic": 51, "x_i": [52, 62], "polynomi": [53, 114, 116, 117, 118, 267], "offset": [53, 55, 59, 61, 65, 69, 242, 243, 244, 245, 246, 247], "rbf": 54, "sigmoid": [55, 205, 237], "special": [56, 199, 222], "cholesky_invert": [56, 275], "spd": [56, 110, 275], "expand_out": [56, 275], "recondition_eigenspac": [56, 275], "delete_diagon": [56, 263, 275], "diag_emb": [56, 275], "fill_diagon": [56, 275], "toeplitz_2d": [56, 275], "toeplitz": [56, 68, 243, 246, 275, 277, 280], "sym2vec": [56, 275], "vec2sym": [56, 275], "squareform": [56, 275], "invert": [57, 206, 242, 243, 244, 245, 246, 247], "choleski": 57, "decomposit": [57, 62, 63, 72, 74, 76, 77, 109, 110, 111, 172, 204], "rais": [57, 116, 117, 267], "linalgerror": 57, "appear": 57, "faster": [57, 108, 110, 111], "fact": 57, "almost": [57, 124, 197, 258, 267], "slower": 57, "linalg": [57, 70, 108, 110, 111, 171, 256], "inv": 57, "histor": [57, 258], "reason": [57, 70, 197, 198, 205, 256, 274, 277], "ainv": 57, "delet": [58, 263], "infer": [58, 61, 143, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222], "v": [59, 196, 235, 248, 274], "emb": 59, "symmetri": [60, 66, 106, 126, 201, 263], "cross": [60, 105, 106, 263], "skew": [60, 66, 106, 263], "multipli": [60, 126, 128, 129, 130, 131, 132, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 217, 220, 221, 222, 248], "rank": [60, 88, 106, 183, 209, 210, 211, 212, 213, 214, 215, 216, 217, 262, 263], "inner": [60, 87, 209, 210, 211, 212, 213, 214, 215, 217, 274], "height": [60, 106], "expand": [60, 106, 113, 116, 263, 276], "width": [60, 106, 134, 135, 136, 137, 138, 139, 140, 141, 142, 159], "expans": [60, 106, 263, 266, 267], "modul": [60, 106, 133, 144, 148, 160, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 257, 258, 259, 263, 265, 274, 275, 276, 277, 280, 283], "toggl": [60, 106], "neg": [60, 63, 106, 111, 193, 204, 205, 209, 221, 235, 243, 246, 263], "constraint": [60, 106, 192, 197, 222, 263, 274, 279, 280], "impos": [60, 63, 66, 106, 196, 197, 263, 274], "templat": [60, 106, 137, 138, 263], "subtract": [60, 106], "fill": [61, 67, 68], "select": [61, 84, 93, 97, 98, 135, 136, 137, 138, 139, 140, 141, 142, 177, 237, 238, 239, 258, 259, 274, 276, 279, 280], "psi": [62, 72, 74, 76, 77, 109, 110, 111, 179, 194, 204, 258, 259, 283], "xi": [62, 72, 74, 76, 77, 109, 110, 111, 194, 204], "kei": [62, 72, 74, 76, 77, 83, 109, 110, 111, 128, 129, 130, 131, 133, 134, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 177, 180, 181, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 229, 230, 274, 283], "recondit": [62, 72, 74, 76, 77, 109, 110, 111, 204, 283], "eigenspac": [62, 72, 74, 76, 77, 109, 110, 111], "help": [62, 177, 258], "stabilis": 62, "modifi": [62, 63], "sim": 62, "uniform": [62, 181, 194, 204, 237], "foral": 62, "nonzero": [62, 78, 84, 97, 98, 188, 207, 242, 243, 244, 245, 246, 247], "nondegener": [62, 89], "ep": [63, 74], "1e": [63, 74, 162, 174, 283], "06": [63, 74], "eig": 63, "svd": [63, 72, 74, 76, 77, 109, 110, 111, 204], "made": [63, 151, 283], "symmetris": [63, 66, 69, 106], "diagonalis": [63, 108, 109, 111], "identifi": [63, 133, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222], "threshold": [63, 74, 84, 97, 98, 179, 188, 207, 237], "theori": 63, "up": [63, 116, 243, 246], "thu": [63, 74, 89, 97, 133, 155, 157, 163, 169, 171, 176, 179, 188, 204, 207, 267], "error": [63, 72, 74, 76, 77, 106, 109, 110, 111, 220, 279, 280], "minimum": [63, 162, 163, 165, 169, 174, 176, 189, 191, 197, 198, 213, 242, 243, 244, 245, 246, 247], "possibl": [63, 80, 104, 114, 117, 170, 197, 237, 248, 255], "unus": [63, 192, 205, 209, 210, 211, 212, 213, 214, 215, 217], "recomposit": 63, "treat": [63, 235], "though": [63, 235], "were": [63, 235, 276], "therebi": [63, 248, 283], "least": [63, 70, 177, 192, 235, 256], "margin": 63, "occasion": 63, "insuffici": [63, 192], "avoid": [63, 191], "numer": [63, 71, 72, 74, 76, 77, 109, 110, 111, 135, 136, 138, 139, 140, 141, 142], "convert": [64, 65, 69, 79, 87, 96, 97, 102, 103, 283], "unlik": 64, "matlab": 64, "verifi": [64, 70, 209, 210, 211, 212, 213, 214, 215, 217, 256], "vectoris": 64, "sym": [65, 69], "ravel": [65, 69], "upper": [65, 69, 235], "triangl": [65, 69, 197], "main": [65, 69, 133, 242, 243, 244, 245, 246, 247, 278], "begin": [65, 69, 177, 226, 235, 237, 274, 276], "vec": [65, 69, 72, 77, 258, 259], "delin": 66, "antisymmetri": 66, "fill_valu": [67, 68, 125], "element": [67, 69, 72, 74, 76, 77, 78, 84, 97, 98, 109, 110, 111, 126, 153, 155, 184, 185, 189, 193, 197, 198, 202, 203, 222, 235, 274, 283], "match": [67, 87, 155, 159, 201, 224, 225, 226, 227, 228, 229, 230, 283], "scipi": [67, 68, 108, 110, 155, 158], "check": [67, 209, 210, 211, 212, 213, 214, 215, 217], "event": 67, "ignor": [67, 126, 185, 191], "opposit": [67, 201], "propag": [67, 177], "unless": [67, 72, 267, 275], "concaten": [67, 235], "stack": [67, 106, 126, 128, 129, 130, 131, 182, 263, 274, 276], "unspecifi": 67, "extend": [67, 165], "construct": [68, 135, 136, 138, 139, 140, 141, 142, 283], "2d": [68, 266, 267], "post": 68, "mattjj": 68, "evalu": [68, 101, 113, 114, 117, 191, 193, 196, 206, 276], "blakehechtman": 68, "http": [68, 104, 115, 249, 278], "github": [68, 249, 278], "com": [68, 115, 249, 278], "googl": [68, 115], "issu": [68, 277], "1646": 68, "issuecom": 68, "1139044324": 68, "appar": 68, "underperform": 68, "tpu": 68, "But": [68, 274], "big": 68, "deal": 68, "our": [68, 220, 274, 276, 283], "flexibl": [68, 133, 151, 183], "admit": [68, 148, 165], "without": [68, 143, 191, 197, 220, 238, 244, 247, 283], "circul": 68, "api": [68, 86, 115, 183, 276, 277, 283], "complet": [68, 101, 104, 135, 136, 138, 140, 141, 142], "document": [68, 114, 117, 134, 135, 136, 137, 138, 139, 140, 141, 142, 155, 158, 241, 248, 276], "lead": [68, 78, 193, 243, 246], "length": [69, 155, 248], "choos": [69, 276], "place": [69, 152, 197, 205, 237, 263], "resid": [70, 135, 136, 138, 139, 140, 141, 142, 283], "return_mod": [70, 256], "residu": [70, 256], "ordinari": [70, 256], "torch": [70, 114, 115, 117, 153, 160, 229, 256], "found": [70, 180, 220, 256, 274, 284], "wa": [70, 135, 136, 138, 139, 140, 141, 142, 256], "incorrect": [70, 256, 283], "clear": [70, 135, 136, 140, 141, 142, 256], "lstsq": [70, 256], "although": [70, 105, 110, 143, 256], "correct": [70, 187, 256], "pinv": [70, 256], "caution": [70, 220, 256], "orthogonalis": 70, "subspac": [70, 71, 72, 77, 180, 257, 258, 259, 283], "explanatori": 70, "explain": 70, "solut": [70, 177, 192, 205, 256], "penalti": [70, 193, 197, 198, 237, 256, 263, 279, 280], "cost": [70, 256], "proper": [71, 171, 257, 258, 259], "riemann": 71, "nearli": [71, 175], "exhibit": [71, 267], "instabl": 71, "tangent_project_spd": [71, 72, 275], "cone_project_spd": [71, 77, 275], "mean_euc_spd": [71, 275], "mean_harm_spd": [71, 275], "mean_logeuc_spd": [71, 275], "mean_geom_spd": [71, 275], "convexcombin": [72, 74, 76, 77, 109, 110, 111], "fill_nan": [72, 74, 76, 77, 109, 110, 111], "truncate_eigenvalu": [72, 74, 76, 77, 109, 110, 111], "cone": [72, 73, 74, 76, 77, 178, 179, 180, 257, 258, 259, 275, 280, 283], "tangenc": [72, 74, 77, 179, 180, 258, 259, 283], "exp": [72, 76, 108, 179, 258, 259], "exponenti": [72, 76, 106, 107, 108, 159, 179, 242, 243, 245, 246], "well": [72, 78, 174, 192, 204, 237, 276], "occur": [72, 74, 76, 77, 109, 110, 111, 198, 204], "promot": [72, 74, 76, 77, 109, 110, 111, 179, 191, 196, 197, 201, 204, 205, 258, 259, 274, 277, 283], "pseudo": [72, 74, 76, 77, 109, 110, 111, 152, 153], "nois": [72, 74, 76, 77, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 152, 180, 242, 243, 244, 245, 246, 247], "independ": [72, 74, 76, 77, 109, 110, 111, 204], "uniformli": [72, 74, 76, 77, 109, 110, 111], "degener": [72, 74, 76, 77, 109, 110, 111, 194, 204], "repeat": [72, 74, 76, 77, 109, 110, 111, 243, 246, 248], "nondegeneraci": [72, 74, 76, 77, 109, 110, 111], "truncat": [72, 74, 76, 77, 100, 101, 104, 109, 110, 111, 134, 135, 136, 137, 138, 139, 140, 141, 142, 163, 165, 169, 176], "do": [72, 74, 76, 77, 86, 89, 109, 110, 111, 124, 133, 148, 155, 209, 210, 211, 212, 213, 214, 215, 217, 220, 237, 276], "wise": [73, 74, 76, 179, 235, 267], "familiar": [73, 179, 205], "arithmet": [73, 74, 179], "sum_": [73, 75, 76, 179, 196, 201, 203], "x_": [73, 75, 76, 179], "log": [73, 74, 75, 76, 77, 109, 179, 197, 203, 258, 259, 279, 280], "max_it": [74, 179], "geometr": [74, 179, 283], "descent": [74, 179], "geodes": [74, 105, 179, 191, 283], "brief": [74, 179], "initialis": [74, 134, 137, 138, 139, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 174, 177, 178, 179, 180, 181, 182, 201, 235, 237, 242, 243, 245, 246, 248, 255, 258, 259, 274, 276, 280, 283], "back": [74, 179, 188, 207, 248], "now": [74, 101, 102, 103, 104, 119, 179], "becom": [74, 179, 197, 204], "termin": [74, 179], "converg": [74, 179], "frobeniu": [74, 179], "been": [74, 179, 186, 209, 210, 211, 212, 213, 214, 215, 217, 272, 274, 284], "attain": [74, 163, 165, 169, 176, 179, 197, 198, 204], "run": [74, 80, 101, 104, 177, 179, 283], "harmon": [75, 179], "logarithm": [76, 77, 107, 109, 162, 174, 179, 197], "util": [78, 120, 121, 122, 123, 124, 125, 160, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 274, 275, 276, 280, 283], "variou": [78, 155, 279, 283], "One": [78, 106, 197, 204, 218], "common": [78, 177, 274, 283], "n_row": 78, "channel_dim": 78, "substitut": [78, 143, 255], "batch_siz": [78, 187], "random_spars": [78, 275], "spdiagmm": [78, 275], "dspdmm": [78, 275], "spspmm_full": [78, 275], "as_topk": [78, 275], "full_as_topk": [78, 275], "sparse_astyp": [78, 275], "trace_spspmm": [78, 275], "spspmm": [78, 89, 275], "spsp_pairdiff": [78, 275], "select_indic": [78, 97, 275], "topkx": [78, 275], "sp_block_serialis": [78, 275], "splr_hadamard": [78, 275], "spsp_innerpair": [78, 275], "topk_to_bcoo": [78, 275], "topk_diagzero": [78, 275], "topk_diagreplac": [78, 275], "block_serialis": [78, 275], "descend": [79, 93], "n_block": [80, 85, 91], "retnum": [80, 85, 97], "in_ax": [80, 85], "out_ax": [80, 85], "carrier_fn": 80, "carry_init": 80, "return_carri": 80, "postprocess_fn": 80, "serialis": [80, 85, 91], "memori": [80, 91, 97, 101, 104, 135, 136, 137, 138, 139, 140, 141, 142, 191, 220, 267], "footprint": [80, 191, 220], "call": [80, 87, 97, 134, 143, 186, 209, 210, 211, 212, 213, 214, 215, 217, 279], "keyword": [80, 143, 148], "write": [80, 276], "diag": [81, 94], "full": [82, 92, 97, 155, 220, 237, 242, 245], "prngkei": [83, 128, 129, 130, 131, 134, 149, 150, 151, 152, 153, 155, 156, 157, 159, 177, 180, 181, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 229, 230, 274, 283], "threshold_typ": [84, 97, 98], "ab": [84, 97, 98, 188, 207], "top_k": [84, 98], "top_k_reduct": [84, 98], "fix_indices_over_channel_dim": [84, 97, 98], "prepar": 84, "sparsif": 84, "surviv": [84, 98, 263], "jit": [84, 97, 98, 121, 177], "compil": [84, 97, 98, 177, 283], "fix": [84, 97, 98, 168, 171, 186, 259, 263, 283], "allow": [84, 97, 98, 132, 164, 242, 243, 244, 245, 246, 247, 274, 279], "vari": [84, 97, 98, 274], "sp_argnum": 85, "sp_retnum": 85, "sp_retshap": 85, "conveni": [85, 91, 118], "dtype": [86, 135, 136, 138, 139, 140, 141, 142, 216, 229], "unnecessari": 86, "wai": [86, 104, 106, 124, 213, 276, 283], "lh": [87, 89, 90, 91, 92, 98, 201], "rh": [87, 89, 90, 91, 92, 98, 201], "lhs_diag": 87, "vmap": 87, "bilinear": 89, "signatur": [89, 113, 209, 210, 211, 212, 213, 214, 215, 217], "inform": [89, 177, 283], "rightarrow": [89, 126], "schema": 89, "bcoo_dot_gener": 91, "usag": [91, 97, 146, 152, 276], "addition": [91, 133, 143], "pre": [91, 197, 205, 235, 237, 276, 283], "topktensor": [91, 98], "hand": [91, 98, 218], "side": [91, 98, 201, 267], "split": [91, 263, 274, 283], "unstructur": [96, 133, 191], "auto_index": 97, "step": [97, 106, 135, 148, 274, 283], "trace": 98, "system": [99, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 283], "spherical_geodes": [99, 101, 275], "sphere_to_norm": [99, 275], "sphere_to_latlong": [99, 275], "spatial_conv": [99, 100, 104, 275], "spherical_conv": [99, 275], "euclidean_conv": [99, 275], "max_bin": [100, 101, 104, 135, 136, 137, 138, 139, 140, 141, 142], "10000": [100, 101, 104, 135, 136, 137, 138, 139, 140, 141, 142], "spatial": [100, 101, 104, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 191, 196, 201, 235, 279, 280], "kernel_gaussian": 101, "associ": [101, 104, 143, 187, 196, 205], "load": [101, 133, 135, 136, 138, 140, 141, 142, 143, 276, 283], "shorter": 101, "n_i": 101, "spheric": [101, 102, 103, 105, 135, 136, 137, 138, 139, 140, 141, 142, 143, 191, 201, 208, 275, 277, 280, 283], "great": [101, 105], "circl": [101, 105], "try": [101, 104], "decreas": [101, 104], "data_conv": [101, 104], "normal": [102, 103, 105, 148, 155, 181, 206, 226, 229, 230, 274], "latitud": [102, 103, 105], "longitud": [102, 103, 105], "z": [102, 103, 220], "centr": [102, 103, 152, 171, 191, 192, 196, 201, 208, 220, 275, 280], "pretti": 104, "much": [104, 175, 220], "dumbest": 104, "like": [104, 106, 115, 133, 143, 171, 183, 197, 215, 221, 263, 276, 283], "lie": 104, "thing": 104, "openreview": 104, "net": 104, "pdf": 104, "id": 104, "hkbd5xzrb": 104, "haversin": 105, "pleas": [105, 277], "express": [105, 143, 152, 191], "n_x": 105, "n_y": 105, "surfac": [105, 133, 136, 138, 139, 143, 201, 277, 283], "just": [105, 263], "get": [105, 143], "don": 105, "t": [105, 149, 187, 206, 220, 226, 235, 237, 238, 248, 258, 274, 283], "dist": 105, "brainnetcnn": 106, "equip": 106, "induct": 106, "favour": [106, 198, 204, 205, 220, 263], "learn": [106, 114, 117, 192, 198, 205, 220, 237, 238, 248, 249, 254, 259, 263, 274, 276, 277], "unord": 106, "design": [106, 133, 143, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 276, 283], "analogi": [106, 201], "There": [106, 124, 184], "still": [106, 143, 276], "lot": 106, "quirk": 106, "usabl": 106, "crosshair_similar": [106, 263], "remove_diagon": [106, 126], "local": [106, 276], "bank": [106, 248, 263], "summari": 106, "c_": [106, 205, 242, 243, 244, 255, 267, 270], "precursor": 106, "nonsquar": [106, 263], "bipartit": [106, 177, 263], "count": [106, 188, 207, 263], "doubl": [106, 159, 242, 243, 245, 246, 263], "attribut": [106, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 148, 152, 158, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 180, 182, 232, 233, 235, 238, 241, 242, 243, 245, 246, 248, 255, 258, 259, 263, 267], "subject": [106, 183, 274, 277], "parametris": [106, 153], "symexp": [107, 275], "symlog": [107, 275], "symsqrt": [107, 275], "symmap": [108, 109, 111, 275, 280], "q_x": [108, 109, 111, 203], "lambda_x": [108, 109, 111], "recompos": [108, 109, 111], "principl": [108, 111, 276, 283], "robust": [108, 111, 133, 258], "expm": 108, "stabl": [108, 110, 249], "recommend": [108, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 278], "infeas": [109, 111], "guard": [109, 110, 111], "against": [109, 110, 111, 193], "funm": 110, "hermitian": 110, "reli": 110, "round": [110, 111], "sqrtm": 111, "conv": [112, 254, 275], "tsconv2d": [112, 117, 275], "basischan": [112, 275], "basisconv2d": [112, 265, 275], "polychan": [112, 275], "polyconv2d": [112, 265, 275], "tsconv": [113, 114, 115, 116, 117, 118, 266, 267, 268, 275, 280], "basis_funct": [113, 114], "include_const": [113, 114, 116, 117, 267], "ith": [113, 114, 116, 117, 267], "constitut": [113, 275], "constant": [113, 114, 116, 117, 145, 149, 267], "pad": [114, 115, 117, 118, 267], "conv_fn": [114, 117, 118], "view": [114, 117, 118, 258, 267], "sequenti": [114, 117], "past": [114, 117], "futur": [114, 117, 151, 193, 209, 210, 211, 212, 213, 214, 215, 217, 284], "permit": [114, 117, 242, 243, 244, 245, 246, 247], "divers": [114, 117, 133], "consist": [114, 117, 139], "penalis": [114, 117, 189, 191, 193, 196, 197, 201, 204, 205, 208, 221, 222], "spread": [114, 117], "conv2d": [114, 117], "stride": 115, "dilat": 115, "basic": [115, 226, 276, 283], "pilfer": 115, "stackoverflow": 115, "question": [115, 276], "69571976": 115, "grad": [115, 274, 283], "zeroth": 116, "alreadi": [117, 143, 191, 220, 274], "configur": [118, 152, 162, 174, 180, 274, 276, 283], "hideou": 119, "disorganis": 119, "hopefulli": 119, "somedai": 119, "disappear": 119, "altogeth": 119, "move": 119, "elsewher": 119, "sad": 119, "blemish": 119, "conform_mask": [119, 121, 275], "apply_mask": [119, 124, 275], "mask_tensor": [119, 121, 275], "complex_decompos": [119, 123, 275], "complex_recompos": [119, 122, 275], "amplitude_appli": [119, 275], "func": 120, "decor": 120, "msk": 121, "strongli": [121, 274], "discourag": 121, "incompat": [121, 177], "ampl": [122, 123], "store": [123, 133, 140, 141, 142, 242, 243, 244, 277], "certainli": [124, 197, 220, 276], "better": [124, 143, 184, 192, 220, 277], "sylo": [126, 275, 277, 280, 282], "row_compressor": 126, "col_compressor": 126, "renormalis": [126, 160, 277], "fold_channel": 126, "compress": [126, 177, 270, 280, 282], "h_": [126, 270], "w_": [126, 270], "compressor": 126, "sample_window": [127, 275], "sample_nonoverlapping_windows_existing_ax": [127, 275], "sample_nonoverlapping_windows_new_ax": [127, 275], "sample_overlapping_windows_new_ax": [127, 275], "sample_overlapping_windows_existing_ax": [127, 275], "window_s": [128, 129, 130, 131], "num_window": [128, 129, 130, 131], "windowing_axi": [128, 129, 130, 131], "multiplying_axi": [128, 129, 130, 131, 132], "allow_overlap": 132, "create_new_axi": 132, "overlap": [132, 133, 140, 141, 142, 143], "insert": 132, "tool": [133, 154, 158, 276, 281, 283], "brain": [133, 136, 138, 274, 279, 283], "atlas": [133, 137, 140, 141, 142, 143, 198, 283], "neuroimag": [133, 276, 277, 281, 283], "princip": [133, 276], "distribut": [133, 137, 138, 139, 143, 146, 150, 152, 153, 155, 190, 191, 194, 197, 201, 202, 203, 204, 205, 206, 208, 226, 229, 230, 235, 274, 277, 283], "volumetr": [133, 136, 138, 139, 143, 277, 283], "discret": [133, 135, 140, 143, 277, 283], "hard": [133, 277], "label": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 235], "parcel": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 191, 196, 197, 198, 201, 204, 205, 208, 220, 235, 248, 274, 277, 283], "leverag": [133, 204], "prior": [133, 143, 248], "knowledg": [133, 283], "class": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 152, 153, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 218, 219, 220, 221, 222, 232, 233, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 258, 263, 271, 274, 277, 279, 280, 282, 283], "atlasinit": 133, "object": [133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 150, 156, 157, 162, 163, 165, 169, 171, 174, 176, 177, 180, 191, 192, 196, 201, 208, 248, 258, 259, 279], "subclass": [133, 134, 148, 170, 180], "abstract": [133, 137, 277], "baseatla": [133, 134, 137, 235, 277], "incorpor": [133, 277, 283], "mixin": [133, 135, 173, 277, 280], "pointer": [133, 135, 136, 138, 139, 140, 141, 142], "previous": [133, 134], "annot": 133, "discretevolumetricatla": [133, 277], "imag": [133, 134, 135, 137, 140, 141, 142, 143, 162, 165, 170, 174, 192, 205, 283], "uniqu": [133, 162, 174, 267], "multivolumetricatla": [133, 142, 277], "multifilevolumetricatla": [133, 141, 277], "file": [133, 136, 138, 140, 141, 142, 143, 283], "cortexsubcortexciftiatla": [133, 277], "cifti": [133, 136, 138, 143], "compartmentalis": 133, "cerebr": 133, "cortex": [133, 136, 138, 283], "subcortex": [133, 136, 138], "dirichletinitvolumetricatla": [133, 138, 277], "dirichlet": [133, 137, 138, 139, 143, 174, 235, 277, 280, 283], "dirichletinitsurfaceatla": [133, 139, 277], "would": [133, 192, 196, 274], "eventu": [133, 276, 277], "enough": 133, "straightforwardli": 133, "realiti": 133, "dictionari": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 255], "isol": [133, 135, 143], "compart": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 201, 235, 277], "distinct": 133, "dirichletinitbaseatla": [133, 277], "atlasinitialis": [133, 235, 277], "init": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 235, 237, 248, 255, 274, 276, 280], "kwarg": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 153, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 218, 219, 220, 221, 222, 232, 233, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 259, 263, 266, 267, 268, 270, 271], "characteris": [134, 192], "subset": [134, 185, 274, 279], "instanti": [134, 135, 143, 148, 170, 186, 229, 248, 283], "blur": 134, "pointwis": 134, "inject": [134, 135, 136, 137, 138, 139, 140, 141, 142, 209, 210, 211, 212, 213, 214, 215, 217], "kernel_sigma": 134, "smooth": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 162, 174, 277, 279, 280], "establish": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "topologi": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 277], "noise_sigma": 134, "__call__": [134, 135, 136, 137, 138, 139, 140, 141, 142, 274, 277, 283], "pytre": [134, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 274], "inherit": [135, 173], "sever": [135, 204, 283], "cover": [135, 276], "scenario": 135, "own": [135, 192, 209, 210, 211, 212, 213, 214, 215, 217], "composition": [135, 183, 283], "_load_refer": 135, "referencemixin": [135, 277], "_create_mask": 135, "maskmixin": [135, 277], "_compartment_names_dict": 135, "compartmentmixin": [135, 277], "_create_compart": 135, "_configure_decod": 135, "labelmixin": [135, 277], "_populate_map_from_ref": 135, "_init_coor": 135, "meshmixin": [135, 277], "_configure_sigma": 135, "convmixin": [135, 277], "_convolv": 135, "abstractli": 135, "creation": [135, 136, 140, 141, 142], "candid": [135, 237, 238], "inclus": [135, 136, 138, 139, 140, 141, 142, 143, 155], "subcompart": [135, 136, 137, 138, 139, 140, 141, 142, 143], "cortic": [135, 136, 138, 143, 201], "hemispher": [135, 136, 138, 143, 279, 280], "decod": [135, 136, 138, 139, 140, 141, 142, 143, 235], "present": [135, 143, 274, 277], "ref_point": [135, 136, 140, 141, 142, 143], "path": [135, 136, 138, 140, 141, 142, 143, 274, 277], "mask_sourc": [135, 137, 139], "datatyp": [135, 136, 138, 139, 140, 141, 142], "long": [135, 136, 138, 139, 140, 141, 142, 149], "devic": [135, 136, 138, 139, 140, 141, 142, 229], "clear_cach": [135, 136, 140, 141, 142], "statu": [135, 136, 138, 139, 140, 141, 142, 143], "dict": [135, 136, 137, 138, 139, 140, 141, 142, 155, 235, 255], "extent": [135, 136, 138, 139, 140, 141, 142], "cached_ref_data": [135, 136, 138, 139, 140, 141, 142], "enabl": [135, 136, 137, 138, 139, 140, 141, 142, 155, 263, 277], "purg": [135, 136, 138, 140, 141, 142], "spherical_scal": [135, 136, 137, 138, 139, 140, 141, 142], "substanti": [135, 136, 137, 138, 139, 140, 141, 142, 143, 276], "overhead": [135, 136, 137, 138, 139, 140, 141, 142], "ceil": [135, 136, 137, 138, 139, 140, 141, 142], "dure": [135, 136, 137, 138, 139, 140, 141, 142, 237, 258], "subcort": [136, 138, 143], "grei": [136, 138], "matter": [136, 138], "endow": [136, 138], "mask_l": [136, 138], "gifti": [136, 138], "32k": [136, 138], "fslr": [136, 138], "exclud": [136, 138, 143], "medial": [136, 138, 143], "wall": [136, 138, 143], "mask_r": [136, 138], "surf_l": [136, 138], "cortex_l": [136, 138], "cortex_r": [136, 138], "name": [136, 137, 138, 143, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 254, 274], "cifti_structure_cortex_left": [136, 138], "cifti_structure_cortex_right": [136, 138], "nb": [136, 138, 139, 140, 141, 142], "nifti1imag": [136, 138, 139, 140, 141, 142], "to_imag": [136, 138, 143, 277], "save": [136, 138], "compartment_label": [137, 138, 143], "conc": [137, 138, 139], "concentr": [137, 138, 139, 189, 191, 197, 205, 235, 283], "template_imag": 137, "categor": [138, 139, 153, 190, 202, 203, 274, 279, 280, 283], "cifti_templ": 138, "n_label": [139, 235], "noth": 139, "field": [139, 170, 191, 276], "nifti": [140, 141, 142, 143], "therefor": [141, 142, 153, 155, 179, 258, 259], "probabilist": [141, 142, 283], "segment": [141, 142], "ica": [141, 142], "_volumeobjectreferencemixin": [143, 277], "_surfaceobjectreferencemixin": [143, 277], "_volumesinglereferencemixin": [143, 277], "disk": 143, "_surfacesinglereferencemixin": [143, 277], "_volumemultireferencemixin": [143, 277], "_phantomreferencemixin": [143, 277], "unimport": 143, "_ciftireferencemixin": [143, 277], "model_axi": 143, "facilit": 143, "access": [143, 170], "loader": 143, "_objectreferencemixin": 143, "_singlereferencemixin": 143, "_logicmaskmixin": [143, 277], "nest": [143, 217], "logic": 143, "tree": 143, "maskintersect": 143, "maskthreshold": 143, "filesystem": 143, "leaf": 143, "_cortexsubcortexciftimaskmixin": [143, 277], "exclus": 143, "_fromnullmaskmixin": [143, 277], "background": 143, "_singlecompartmentmixin": [143, 277], "_multicompartmentmixin": [143, 277], "With": [143, 274], "extra": [143, 148], "constructor": 143, "_cortexsubcortexcifticompartmentmixin": [143, 277], "_discretelabelmixin": [143, 277], "_continuouslabelmixin": [143, 277], "scheme": [143, 152, 218, 276, 279, 280], "discretelabelmixin": 143, "_dirichletlabelmixin": [143, 277], "_volumetricmeshmixin": [143, 277], "evenli": [143, 267], "_vertexciftimeshmixin": [143, 277], "_evenlysampledconvmixin": [143, 277], "_spatialconvmixin": [143, 277], "axobj": 143, "thank": 143, "chri": 143, "markiewicz": 143, "tutori": [143, 274], "dataobj": 143, "header": [143, 274, 283], "model_axobj": 143, "model_shap": 143, "model_zoom": 143, "modelobj": 143, "ndim": 143, "nifti_head": 143, "other_ax": 143, "zoom": 143, "cache_dataobj": 143, "cache_modelobj": 143, "cifti_model_ax": 143, "dataobj_from_imobj": 143, "imobj_from_point": 143, "load_imobj": 143, "purge_cach": 143, "map_to_mask": 143, "mask_arrai": 143, "dynamic_slice_map": 143, "compartmentset": [143, 277], "item": [143, 274], "from_distr_init": [144, 146, 277], "constant_init": [144, 145, 277], "identity_init": [144, 147, 277], "mappedinitialis": [144, 145, 146, 147, 152, 153, 277], "distributioninitialis": [144, 277], "identityinitialis": [144, 277], "throughout": [145, 149], "re": [148, 192, 242, 243, 244, 245, 246, 247, 274, 283], "suppli": [148, 248], "_init": 148, "request": 148, "thereaft": [148, 170], "ultim": 148, "handler": [148, 162, 163, 165, 169, 171, 174, 175, 176], "mapper": [148, 160, 161, 167, 191, 197, 198], "doesn": 149, "actual": [149, 155, 220], "scalar": [149, 177, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 274, 279, 280, 283], "distr": [150, 153], "distrax": [150, 203], "shift": 151, "loc": [152, 159, 169, 171], "var": [152, 159], "approxim": [152, 155, 157, 192, 201, 263, 283], "lag": [152, 242, 243, 244, 245, 246, 247], "magnitud": [152, 163, 165, 169, 176, 283], "chang": [152, 155, 158, 173, 183, 186, 221, 235, 276, 277], "deltaplus_init_": 152, "1d": [153, 162, 174, 274], "understood": 153, "emul": [154, 155, 157, 158, 248], "replic": [154, 274], "transfer": [154, 155, 156, 157, 248], "freqfilterspec": [154, 156, 157, 248, 277, 283], "freqfilt": [155, 156, 157, 277, 280, 282], "respons": [155, 238], "curv": 155, "iir": [155, 157, 277, 280, 282], "butterworth": [155, 157, 158], "action": [155, 157], "iirfilt": [155, 157, 277, 280, 282], "chebyshev": [155, 158], "ellipt": [155, 158], "bessel": [155, 158], "thompson": [155, 158], "ideal": [155, 158, 177, 274, 283], "overst": 155, "remot": 155, "recurs": [155, 158], "contrast": 155, "exact": [155, 192], "wn": [155, 158, 283], "thereof": [155, 209, 210, 211, 212, 213, 214, 215, 217], "critic": [155, 158], "cutoff": [155, 158], "worn": 155, "btype": [155, 158], "lowpass": [155, 158], "highpass": [155, 158], "bandpass": [155, 158, 283], "stop": [155, 158], "rippl": [155, 158], "rp": [155, 158, 283], "consult": [155, 158, 241, 248], "ampl_loc": 155, "ampl_scal": 155, "phase_loc": 155, "phase_scal": 155, "clamp": [155, 156, 248], "clampabl": 155, "particular": [155, 175, 248, 259, 283], "closest": [155, 164, 196], "get_clamp": [155, 277], "initialise_spectrum": [155, 277], "filter_spec": [156, 157, 248, 283], "points_tensor": 156, "spec": [156, 157], "values_tensor": 156, "ftype": [158, 283], "butter": 158, "cheby1": 158, "cheby2": 158, "ellip": 158, "kuznetsov": [158, 249], "bandstop": 158, "20": 158, "mag": 158, "initialise_coef": [158, 277], "02": 159, "excl_axi": 159, "equinox": [160, 162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 274, 283], "pytorch": 160, "nn": [160, 232, 233, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 258, 259, 263, 266, 267, 268, 270, 271, 275, 276, 280], "parametr": 160, "mappedparamet": [160, 165, 277], "domainmappedparamet": [160, 277], "identitymappedparamet": [160, 277], "affinemappedparamet": [160, 277], "tanhmappedparamet": [160, 277], "amplitudetanhmappedparamet": [160, 277], "mappedlogit": [160, 274, 277, 283], "normsphereparamet": [160, 277], "probabilitysimplexparamet": [160, 274, 277, 283], "amplitudeprobabilitysimplexparamet": [160, 277], "orthogonalparamet": [160, 277], "isochoricparamet": [160, 277], "clip": [160, 162, 163, 165, 169, 171, 174, 175, 176, 277], "forcepositivedefinit": [160, 277], "phaseamplitudemixin": [160, 277], "mapparam": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 274, 277, 280, 283], "image_map_impl": [161, 165, 168, 169, 171, 174, 176], "preimage_map_impl": [161, 165, 168, 169, 171, 174, 176], "simplex": [162, 174, 197, 198, 274, 277, 283], "natur": [162, 174], "belong": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 274], "tree_at": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "exampl": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 184, 185, 193, 198, 204, 209, 210, 211, 212, 213, 214, 215, 217, 276, 277, 278], "lambda": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 193, 226, 274], "mlp": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176], "retriev": [162, 163, 165, 168, 169, 170, 171, 172, 174, 176, 274], "outofdomainhandl": [162, 163, 165, 169, 171, 174, 176], "lower": [162, 174, 235], "prescrib": [162, 163, 165, 169, 174, 175, 176], "bound": [162, 165, 174, 175, 197], "increas": [162, 174, 258, 274], "higher": [162, 174], "entropi": [162, 174, 198, 205, 279, 280], "equiprob": [162, 174, 197, 198], "finit": [163, 169, 176], "preimage_bound": [163, 165, 169, 176], "min": [163, 169, 175, 176], "preimag": [163, 165, 169, 170, 176], "necessarili": [163, 165, 169, 176, 193], "infimum": [163, 165, 169, 176, 237], "supremum": [163, 165, 169, 176, 237], "neglig": [163, 165, 169, 176], "mechan": [165, 283], "image_bound": 165, "outsid": [165, 175, 283], "forc": [166, 168, 212], "image_map": [167, 170, 172], "preimage_map": [167, 170, 172], "logist": 169, "arbitrari": [169, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 279], "interv": [169, 175], "At": [170, 259, 276], "tranform": 170, "updat": [170, 188, 207, 258, 274, 283], "immediatelycontain": 170, "constitu": [171, 172, 174], "obvious": 171, "l0": 171, "simpl": [171, 186, 204, 235, 274, 276], "ellips": 171, "No": [171, 235], "crude": 172, "manner": 172, "qr": 172, "unchang": 173, "behav": 174, "radic": 175, "edit": 175, "destroi": 175, "accommod": 175, "feasibl": 175, "obs_min": 175, "obs_max": 175, "lbound": 175, "ubound": 175, "lattic": 177, "maximum_potential_bipartite_lattic": [177, 277], "n_out": 177, "100": [177, 191, 201, 208], "random_init": 177, "attenu": [177, 283], "criterion": 177, "corr_criterion": 177, "_src": [177, 194, 196, 204], "greedi": 177, "mont": 177, "carlo": 177, "naiv": 177, "problem": [177, 197, 274, 276], "experiment": [177, 277], "maximis": 177, "mutual": [177, 196], "allegi": 177, "n_in": 177, "solv": 177, "h_in": 177, "w_in": 177, "twice": [177, 205], "fuse": [177, 270], "join": 177, "prevent": [177, 248, 258], "redund": 177, "best": [177, 276, 277], "orig": 177, "recon": 177, "uncompress": 177, "u": [177, 274], "minim": [177, 276, 279, 280], "optimum": [177, 206], "tri": 177, "global": [177, 204], "downstream": [177, 263], "tangencyinitialis": [178, 277], "tangency_init": [178, 277], "semidefinitemean": [178, 277], "spdeuclideanmean": [178, 277], "spdharmonicmean": [178, 277], "spdlogeuclideanmean": [178, 277], "spdgeometricmean": [178, 277, 283], "semidefinite_psi_spec": 179, "init_data": [180, 259, 283], "mean_spec": [180, 258, 259, 283], "std": 180, "need": [180, 242, 243, 244, 245, 246, 247, 274], "_semidefinitemean": [180, 258, 259], "central": [180, 258, 259], "tendenc": [180, 258, 259], "shape_r": 181, "negative_slop": 181, "mode": [181, 274, 279, 280, 283], "fan_in": 181, "fan_out": 181, "init_distr": 181, "nonlinear": [181, 255], "leaky_relu": 181, "toeplitzinitialis": [182, 277], "composit": [183, 209, 210, 211, 212, 213, 214, 215, 217], "scalaris": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 216, 220, 221, 222, 274, 279, 280, 283], "reduct": [183, 196, 212, 220, 274], "contribut": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 276], "nu": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 274], "vi": 183, "regard": [183, 283], "report": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 277, 283], "strength": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 274], "schedul": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222], "dynam": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 274], "adjust": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222], "cours": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222], "train": [183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222, 276, 283], "aggreg": [183, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 220, 221, 222], "loss": [184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 259, 276, 280], "compos": [184, 185, 209, 210, 211, 212, 213, 214, 215, 217, 218, 275, 276], "l_p": 185, "flatten": 185, "l_2": 185, "outer_scalaris": 185, "l_1": 185, "manhattan": 185, "citi": 185, "inf": [185, 191, 221], "intend": [186, 283], "immut": 186, "tail": 187, "level": [187, 188, 198, 207], "tol": [187, 188, 207], "uncorrect": 187, "test": [187, 237, 276, 277], "sophist": 187, "tol_sig": [188, 207], "toler": [188, 207, 279, 280], "signific": [188, 207, 279, 280], "shrink": [188, 198, 207], "batchwis": [188, 207], "toward": [188, 207], "want": [188, 207, 274], "bimod": [189, 283], "whichev": 189, "f_dim": 190, "induc": [190, 191, 192, 204, 205], "logit": [190, 191, 197, 198, 202, 203], "bregman_divergence_logit": [190, 279], "unmap": [190, 198], "bregmandivergencelogitloss": [190, 279], "mass": [191, 196, 198, 201, 208, 275, 280], "collect": [191, 201, 208, 274, 279], "calcul": [191, 196, 205], "centroid": [191, 196], "simul": 191, "collaps": 191, "dissimilar": [192, 205], "progressive_theta": 192, "s_": 192, "minimis": [192, 197, 205, 283], "optimis": [192, 204, 205, 259, 276, 283], "detect": [192, 274, 283], "attempt": 192, "jointli": 192, "shot": 192, "prone": 192, "misalign": 192, "reciproc": [192, 205], "latent": [192, 205], "encourag": [192, 198, 274], "broadcast_against_input": 193, "violat": 193, "satisfi": [193, 263], "proport": 193, "unilateral_loss": [193, 199, 279, 280], "unexpect": 193, "op": [194, 204], "semi": [194, 204], "stochast": [194, 204, 242, 243, 244, 245, 246, 247], "precomput": [196, 220], "mathcal": [196, 203, 205], "v_i": 196, "v_j": 196, "cluster": [196, 204], "Such": 196, "vectordispers": 196, "keepdim": [197, 198, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 217, 274], "entropy_logit": [197, 279], "categori": 197, "unsum": [197, 202, 203], "surpris": 197, "entropylogitloss": [197, 279], "cartoon": [197, 220], "schemat": 197, "contour": 197, "outcom": 197, "superpos": 197, "concav": [197, 204], "afford": 197, "unbound": 197, "capac": 197, "undesir": 197, "level_axi": 198, "instance_ax": 198, "balanc": [198, 274], "equilibrium_logit": [198, 279], "prob_axi": 198, "superset": 198, "equilibriumlogitloss": [198, 279], "th": 198, "improv": [198, 276], "situat": 198, "trivial": 198, "uninterest": 198, "minima": 198, "conjunct": [198, 283], "y_hat": 199, "machin": [199, 249], "constraint_viol": [199, 222, 279, 280], "lh_coor": 201, "rh_coor": 201, "math": [201, 255], "ell": 201, "ell_": 201, "ight": 201, "moder": 201, "strong": [201, 204, 283], "js_divergence_logit": [202, 279], "kl": [202, 203], "jsdivergencelogitloss": [202, 279], "kl_divergence_logit": [203, 279], "js_diverg": [203, 279, 280], "p_x": 203, "kldivergencelogitloss": [203, 279], "gramian": [204, 279, 280], "outlin": 204, "suit": [204, 276], "seek": 204, "weaker": 204, "moment": [204, 279, 280], "intern": [204, 220, 237, 277, 283], "certain": 204, "involv": [204, 220], "denomin": [204, 205], "unstabl": [204, 276], "occurr": 204, "_q": 205, "nu_q": 205, "essenti": 205, "notat": 205, "account": 205, "lend": [205, 277], "intuit": [205, 209, 210, 211, 212, 213, 214, 215, 217, 277], "quantif": 205, "similarli": [205, 263], "wherein": 205, "equilibrium": [205, 279, 280], "dimensional_sc": 206, "kurtosi": 206, "mardia": 206, "laumann": [206, 226], "colleagu": 206, "stationari": [206, 229, 230], "infinit": 206, "durat": 206, "alia": [207, 226, 249, 283], "batch_corr": [207, 279, 280], "qualiti": 207, "spatial_loss_spec": 208, "particularli": [209, 276, 283], "chain": [209, 210, 211, 212, 213, 214, 215, 217], "indefinit": [209, 210, 211, 212, 213, 214, 215, 217], "Be": [209, 210, 211, 212, 213, 214, 215, 217], "mind": [209, 210, 211, 212, 213, 214, 215, 217], "themselv": [209, 210, 211, 212, 213, 214, 215, 217], "mean_scalaris": [209, 211, 212, 213, 214, 215, 217, 221, 274, 279, 280], "vnorm_scalaris": [209, 210, 211, 212, 213, 214, 217, 221, 274, 279, 280, 283], "amount": [209, 210, 211, 212, 213, 214, 215, 217], "except": [209, 210, 211, 212, 213, 214, 215, 217], "third": [209, 210, 211, 212, 213, 214, 215, 217, 263, 274], "perhap": [209, 210, 211, 212, 213, 214, 215, 217], "keep": [209, 210, 211, 212, 213, 214, 215, 217], "fewer": [209, 210, 211, 212, 213, 214, 215, 217], "outermost": [209, 210, 211, 212, 213, 214, 215, 217], "max_scalaris": [210, 211, 212, 213, 214, 215, 217, 279, 280], "force_vector_norm": [212, 215], "unfold": [212, 215], "softmax_axi": 213, "softmax_invert": 213, "backpropag": 213, "taken": 213, "upweight": 213, "norm_scalaris": [215, 279, 280], "devicearrai": 216, "float32": 216, "selector": [218, 237], "pretransform": 218, "lossschem": [218, 274, 279, 280], "standardis": 220, "skip_normalis": 220, "AT": 220, "mu": 220, "second_moment_centr": [220, 279], "known": 220, "seem": 220, "standardise_data": 220, "standardise_mu": 220, "homogen": 220, "core": 220, "illustr": [220, 283], "intens": 220, "lavend": 220, "blue": 220, "green": 220, "ve": [220, 274, 276, 284], "uneven": 220, "extens": [220, 279, 280, 283], "omit": 220, "voxelwis": [220, 234], "too": 220, "gpu": [220, 276, 278, 283], "fortun": 220, "broken": 220, "down": 220, "affect": 220, "reactivetermin": 220, "improp": 220, "destruct": 220, "secondmomentcentredloss": [220, 279], "pad_valu": 221, "sudden": 221, "diff": 221, "sum_scalaris": [221, 274, 279, 280], "meansq_scalaris": [221, 279, 280], "prepend": 221, "l1": [221, 237], "soft": [222, 263, 279, 280], "nonposit": 222, "synthesis": 224, "match_spectra": [224, 281], "match_covari": [224, 281], "match_refer": [224, 225, 230, 281], "match_cov_and_spectrum": [224, 227, 229, 281], "synthesise_match": [224, 227, 229, 281, 283], "synthesise_from_cov_and_spectrum": [224, 225, 230, 281], "neuro": [225, 226, 227, 228, 229, 230, 274, 276, 280, 283], "synth": [225, 226, 227, 228, 229, 230, 280, 281, 283], "describ": [226, 258], "et": 226, "al": 226, "2017": 226, "On": 226, "stabil": 226, "bold": 226, "fmri": [226, 274, 276], "align": [226, 235], "end": [226, 235], "assumpt": 226, "drawn": [226, 229, 230], "hold": 226, "use_mean": [227, 228, 230], "synthet": [229, 230, 237, 283], "correlationnorm": [231, 282], "labelwis": 234, "atlaslinear": [234, 282], "extract": 235, "from_atla": 235, "withouth": 235, "50": 235, "n_locat": 235, "cumul": 235, "absmean": 235, "zscore": 235, "psc": 235, "strategi": 235, "percent": 235, "forward_mod": 235, "t_": 235, "min_": 235, "_f": 235, "set_default_limit": 235, "denois": [236, 274], "regress": [236, 242, 243, 244, 283], "linearrfnn": [236, 238], "linearcombinationselector": 236, "eliminationselector": 236, "elimin": 237, "fluke": 237, "seed": 237, "shown": 237, "experi": [237, 274], "n_column": [237, 238], "gentler": 237, "slope": 237, "or_dim": 237, "did": 237, "didn": 237, "look": 237, "carefulli": 237, "someon": 237, "and_dim": 237, "intersect": 237, "model_dim": 238, "augment": [239, 258], "basecovari": [240, 282], "unarycovari": [240, 282], "unarycovariancetw": [240, 282], "unarycovarianceuw": [240, 282], "binarycovari": [240, 282, 283], "binarycovariancetw": [240, 282], "binarycovarianceuw": [240, 282], "comprehens": 241, "process_paramet": 241, "learnabl": [242, 243, 244, 245, 246, 247, 248, 255, 258, 259, 263, 267], "dropout": [242, 243, 244, 245, 246, 247], "c_1": [242, 243, 244], "c_2": [242, 243, 244], "min_lag": [242, 243, 244, 245, 246, 247], "max_lag": [242, 243, 244, 245, 246, 247], "out_channel": [242, 243, 244, 245, 246, 247, 255, 263, 267, 283], "weight_col": [243, 246], "weight_row": [243, 246], "unari": [245, 246, 247], "raw": [245, 246, 247, 248], "frequencydomainfilt": [248, 282, 283], "uncertain": 248, "time_dim": [248, 283], "amplitudeatanh": 248, "atanh": 248, "explos": 248, "amplitudemultilogit": 248, "preweight": 248, "freqfilter_init_": 248, "entail": 248, "predomain": 248, "declar": 248, "clamp_point": 248, "clamp_valu": 248, "from_spec": [248, 258, 283], "rnn": 249, "bori": 249, "kuz": 249, "differentiable_iir_filt": 249, "publish": 249, "cite": 249, "parker": 249, "jd": 249, "esqueda": 249, "2020": 249, "dafx2020": 249, "vienna": 249, "austria": 249, "septemb": 249, "21": 249, "dtdf": 249, "iirfiltfilt": [249, 282], "spectralinterpol": [250, 282], "linearinterpol": [250, 282], "hybridinterpol": [250, 282], "1x1": [254, 255], "in_channel": [255, 263], "positive_onli": 255, "kaim": 255, "mixtur": 255, "tangentproject": [257, 282, 283], "batchtangentproject": [257, 282], "transport": [258, 259], "destin": [258, 259], "idea": [258, 276], "somehow": 258, "inerti": 258, "eta": 258, "omega_t": 258, "omega_": 258, "inertia": 258, "tangencypoint": 258, "skip": 258, "heavili": 258, "histori": 258, "dest": [258, 259], "syloresnet": [262, 282], "possibli": 263, "disabl": 263, "unilater": [263, 279, 280], "simultan": [263, 267], "respond": 263, "rectifi": 263, "learnable_al": 263, "c_in": 263, "c_out": 263, "timeseriesconv2d": 265, "viewabl": 267, "kernel_width": 267, "adjoin": 267, "verticalcompress": [269, 282], "vertcom": [270, 280, 282], "redact": 272, "program": [274, 275, 277, 279, 283], "paradigm": 274, "preprint": 274, "goal": 274, "connectom": 274, "evolut": 274, "track": 274, "absent": 274, "ll": [274, 283], "midnight": 274, "scan": 274, "club": 274, "msc": 274, "expedit": 274, "rich": 274, "scanner": 274, "task": 274, "session": 274, "rest": 274, "state": [274, 276, 283], "openneuro": 274, "websit": 274, "preprocess": 274, "400": [274, 283], "36": [274, 283], "motion": 274, "pathlib": 274, "panda": [274, 283], "pd": [274, 283], "extend_to_max_s": 274, "data_msc": 274, "minimal_msc_download": 274, "dataset_root": 274, "glob": 274, "se": 274, "func0": 274, "time_seri": 274, "read_csv": [274, 283], "sep": [274, 283], "assert": 274, "30": 274, "814": 274, "let": [274, 283], "n_node": 274, "n_commun": 274, "n_time_point": [274, 283], "n_scan": 274, "exactli": 274, "give": 274, "combinatori": [274, 276], "behind": 274, "scene": 274, "simplexparamet": 274, "sake": 274, "presenc": 274, "later": [274, 283], "discoveri": 274, "won": 274, "purpos": [274, 283], "unbalanc": 274, "few": 274, "said": 274, "eqx": [274, 283], "dynamiccommunitymodel": 274, "def": [274, 283], "__init__": 274, "init_scale_affili": 274, "01": [274, 283], "init_scale_dynam": 274, "001": 274, "super": 274, "model_forward": 274, "parameterise_model": 274, "lossappli": [274, 279, 280], "lossargu": [274, 279], "unpackinglossargu": 274, "modularityloss": [274, 279], "smoothnessloss": [274, 279], "bimodalsymmetricloss": [274, 279], "dynamic_community_loss": 274, "modularity_nu": 274, "smoothness_nu": 274, "dynamic_community_nu": 274, "bimodal_symmetric_nu": 274, "corr_unparam": 274, "dynamiccommun": 274, "_to_jax_arrai": 274, "corr_param": 274, "co": 274, "build": [274, 276], "optax": [274, 283], "init_optimis": 274, "lr": 274, "gradienttransform": 274, "optim": 274, "adam": [274, 283], "optim_st": 274, "is_inexact_arrai": [274, 283], "loss_schem": 274, "optstat": 274, "loss_fn": 274, "meta": 274, "filter_value_and_grad": [274, 283], "has_aux": 274, "apply_upd": [274, 283], "hyperparamet": 274, "05": 274, "2e": 274, "max_epoch": [274, 283], "500": 274, "key_model": 274, "key_train": 274, "epoch": 274, "key_epoch": 274, "fold_in": [274, 283], "filter_jit": [274, 283], "print": [274, 283], "4f": 274, "interfac": 275, "atom": 275, "miscellan": [275, 280], "softwar": 276, "librari": [276, 283], "fulli": 276, "framework": [276, 277, 278, 283], "acceler": [276, 278, 283], "develop": [276, 283], "advent": 276, "public": 276, "repositori": 276, "brought": 276, "prolifer": 276, "instrument": 276, "analys": 276, "challeng": 276, "reproduc": 276, "scientif": 276, "workflow": [276, 277, 283], "know": 276, "answer": 276, "ask": 276, "go": 276, "beyond": [276, 283], "built": 276, "upon": 276, "deep": 276, "deploi": 276, "focu": 276, "warn": 276, "fragil": 276, "incomplet": 276, "bug": [276, 277], "lurk": 276, "break": 276, "refin": 276, "welcom": 276, "incipi": 276, "hub": 276, "fairli": 276, "focus": 276, "guidelin": 276, "port": 276, "soon": 276, "submodul": [276, 277, 279], "benchmark": 276, "visualis": 276, "instal": 276, "technic": 276, "overview": 276, "formula": 276, "grammar": 276, "viz": 276, "neurosci": [276, 280], "loop": [276, 283], "search": 276, "page": [276, 284], "integr": 277, "expertis": 277, "routin": 277, "transpar": 277, "disciplin": 277, "start": [277, 279, 283], "modif": 277, "clean": 277, "slate": 277, "interact": 277, "coverag": 277, "inadequ": 277, "warrant": 277, "atlasmixin": [277, 280], "deltaplu": [277, 280], "deltaplus_init": 277, "deltaplusinitialis": 277, "dirichlet_init": 277, "dirichletinitialis": [277, 283], "iirfilterspec": 277, "laplace_init": 277, "laplaceinitialis": 277, "mpbl": [277, 280], "sylo_init": 277, "syloinitialis": 277, "python": [278, 283], "pip": 278, "archiv": 278, "tar": 278, "gz": 278, "cuda": 278, "cudnn": 278, "underli": 278, "helper": 279, "packag": 279, "parameterisedloss": [279, 280], "custom": [279, 280], "mseloss": [279, 280], "normedloss": [279, 280], "constraintviolationloss": 279, "unilateralloss": 279, "hinge_loss": [279, 280], "svm": [279, 280, 282], "hing": [279, 280], "hingeloss": 279, "bimodal_symmetr": [279, 280, 283], "det_gram": [279, 280], "gramdeterminantloss": 279, "log_det_gram": [279, 280], "gramlogdeterminantloss": 279, "entropyloss": 279, "kl_diverg": [279, 280], "kullback": [279, 280], "leibler": [279, 280], "diverg": [279, 280], "kldivergenceloss": 279, "jensen": [279, 280], "shannon": [279, 280], "jsdivergenceloss": 279, "bregman_diverg": [279, 280], "bregman": [279, 280], "bregmandivergenceloss": 279, "equilibriumloss": 279, "second_mo": [279, 280], "secondmomentloss": 279, "auto_tol": [279, 280], "batchcorrelationloss": 279, "qcfc": [279, 280], "qc": [279, 280], "fc": [279, 280], "qcfcloss": 279, "reference_teth": [279, 280], "tether": [279, 280], "referencetetherloss": 279, "interhemispheric_teth": [279, 280], "interhemispherictetherloss": 279, "compactnessloss": 279, "dispers": [279, 280], "dispersionloss": 279, "multivariate_kurtosi": [279, 280], "stationar": [279, 280], "multivariatekurtosi": 279, "connectopyloss": 279, "wmean_scalaris": [279, 280], "selfwmean_scalaris": [279, 280], "synthesi": [280, 281], "recombin": [280, 282], "spdnois": [280, 282], "windowamplifi": [280, 282], "ecosystem": 283, "readi": 283, "research": 283, "theoret": 283, "contamin": 283, "complic": 283, "complementarili": 283, "excel": 283, "fslmath": 283, "manipul": 283, "syntax": 283, "address": 283, "pyvista": 283, "3d": 283, "plot": 283, "read": 283, "show": 283, "serv": 283, "astut": 283, "reader": 283, "remark": 283, "oversimplifi": 283, "decis": 283, "intent": 283, "vignett": 283, "instruct": 283, "json": 283, "functool": 283, "pkg_resourc": 283, "resource_filenam": 283, "pkgrf": 283, "confoundformulagrammar": 283, "log_interv": 283, "n_subject": 283, "n_voxel": 283, "200": 283, "n_channel": 283, "4": 283, "Or": 283, "trainabl": 283, "pipelin": 283, "multivers": 283, "data_kei": 283, "filter_kei": 283, "cov_kei": 283, "proj_kei": 283, "human": 283, "ref_path": 283, "regt": 283, "schaefer400_desc": 283, "synth_t": 283, "tsv": 283, "ref_data": 283, "desc": 283, "confounds_timeseri": 283, "metadata": 283, "model_36p": 283, "dd1": 283, "wm": 283, "csf": 283, "gsr": 283, "model_censor": 283, "scatter": 283, "OR": 283, "1_": 283, "fd": 283, "dv": 283, "model_formula": 283, "pars": 283, "fillna": 283, "hz": 283, "high_pass": 283, "low_pass": 283, "proj_spec": 283, "proj": 283, "weak": 283, "vnorm": 283, "7": 283, "rate": 283, "5e": 283, "opt": 283, "opt_stat": 283, "9": 283, "3f": 283, "scrub": 284, "anonym": 284, "restor": 284}, "objects": {"hypercoil": [[273, 0, 0, "-", "engine"], [275, 0, 0, "-", "functional"], [277, 0, 0, "-", "init"], [279, 0, 0, "-", "loss"], [281, 0, 0, "-", "neuro"], [282, 0, 0, "-", "nn"]], "hypercoil.engine.axisutil": [[0, 1, 1, "", "orient_and_conform"]], "hypercoil.functional": [[1, 0, 0, "-", "activation"], [6, 0, 0, "-", "cmass"], [11, 0, 0, "-", "connectopy"], [14, 0, 0, "-", "cov"], [24, 0, 0, "-", "fourier"], [34, 0, 0, "-", "graph"], [40, 0, 0, "-", "interpolate"], [45, 0, 0, "-", "kernel"], [56, 0, 0, "-", "matrix"], [71, 0, 0, "-", "semidefinite"], [78, 0, 0, "-", "sparse"], [99, 0, 0, "-", "sphere"], [106, 0, 0, "-", "sylo"], [107, 0, 0, "-", "symmap"], [112, 0, 0, "-", "tsconv"], [119, 0, 0, "-", "utils"], [127, 0, 0, "-", "window"]], "hypercoil.functional.activation": [[2, 1, 1, "", "amplitude_atanh"], [3, 1, 1, "", "amplitude_tanh"], [4, 1, 1, "", "corrnorm"], [5, 1, 1, "", "isochor"]], "hypercoil.functional.cmass": [[7, 1, 1, "", "cmass"], [8, 1, 1, "", "cmass_coor"], [9, 1, 1, "", "cmass_reference_displacement"], [9, 1, 1, "", "cmass_reference_displacement_grid"], [10, 1, 1, "", "diffuse"]], "hypercoil.functional.connectopy": [[12, 1, 1, "", "diffusion_mapping"], [13, 1, 1, "", "laplacian_eigenmaps"]], "hypercoil.functional.cov": [[15, 1, 1, "", "conditionalcorr"], [16, 1, 1, "", "conditionalcov"], [17, 1, 1, "", "corr"], [18, 1, 1, "", "cov"], [19, 1, 1, "", "pairedcorr"], [20, 1, 1, "", "pairedcov"], [21, 1, 1, "", "partialcorr"], [22, 1, 1, "", "partialcov"], [23, 1, 1, "", "precision"]], "hypercoil.functional.fourier": [[25, 1, 1, "", "analytic_signal"], [26, 1, 1, "", "env_inst"], [27, 1, 1, "", "envelope"], [28, 1, 1, "", "hilbert_transform"], [29, 1, 1, "", "instantaneous_frequency"], [30, 1, 1, "", "instantaneous_phase"], [31, 1, 1, "", "product_filter"], [32, 1, 1, "", "product_filtfilt"], [33, 1, 1, "", "unwrap"]], "hypercoil.functional.graph": [[35, 1, 1, "", "coaffiliation"], [36, 1, 1, "", "girvan_newman_null"], [37, 1, 1, "", "graph_laplacian"], [38, 1, 1, "", "modularity_matrix"], [39, 1, 1, "", "relaxed_modularity"]], "hypercoil.functional.interpolate": [[41, 1, 1, "", "hybrid_interpolate"], [42, 1, 1, "", "linear_interpolate"], [43, 1, 1, "", "spectral_interpolate"], [44, 1, 1, "", "weighted_interpolate"]], "hypercoil.functional.kernel": [[46, 1, 1, "", "corr_kernel"], [47, 1, 1, "", "cosine_kernel"], [48, 1, 1, "", "cov_kernel"], [49, 1, 1, "", "gaussian_kernel"], [50, 1, 1, "", "linear_distance"], [51, 1, 1, "", "linear_kernel"], [52, 1, 1, "", "param_norm"], [53, 1, 1, "", "polynomial_kernel"], [54, 1, 1, "", "rbf_kernel"], [55, 1, 1, "", "sigmoid_kernel"]], "hypercoil.functional.matrix": [[57, 1, 1, "", "cholesky_invert"], [58, 1, 1, "", "delete_diagonal"], [59, 1, 1, "", "diag_embed"], [60, 1, 1, "", "expand_outer"], [61, 1, 1, "", "fill_diagonal"], [62, 1, 1, "", "recondition_eigenspaces"], [63, 1, 1, "", "spd"], [64, 1, 1, "", "squareform"], [65, 1, 1, "", "sym2vec"], [66, 1, 1, "", "symmetric"], [67, 1, 1, "", "toeplitz"], [68, 1, 1, "", "toeplitz_2d"], [69, 1, 1, "", "vec2sym"]], "hypercoil.functional.resid": [[70, 1, 1, "", "residualise"]], "hypercoil.functional.semidefinite": [[72, 1, 1, "", "cone_project_spd"], [73, 1, 1, "", "mean_euc_spd"], [74, 1, 1, "", "mean_geom_spd"], [75, 1, 1, "", "mean_harm_spd"], [76, 1, 1, "", "mean_logeuc_spd"], [77, 1, 1, "", "tangent_project_spd"]], "hypercoil.functional.sparse": [[79, 1, 1, "", "as_topk"], [80, 1, 1, "", "block_serialise"], [81, 1, 1, "", "dspdmm"], [82, 1, 1, "", "full_as_topk"], [83, 1, 1, "", "random_sparse"], [84, 1, 1, "", "select_indices"], [85, 1, 1, "", "sp_block_serialise"], [86, 1, 1, "", "sparse_astype"], [87, 1, 1, "", "spdiagmm"], [88, 1, 1, "", "splr_hadamard"], [89, 1, 1, "", "spsp_innerpaired"], [90, 1, 1, "", "spsp_pairdiff"], [91, 1, 1, "", "spspmm"], [92, 1, 1, "", "spspmm_full"], [93, 1, 1, "", "topk"], [94, 1, 1, "", "topk_diagreplace"], [95, 1, 1, "", "topk_diagzero"], [96, 1, 1, "", "topk_to_bcoo"], [97, 1, 1, "", "topkx"], [98, 1, 1, "", "trace_spspmm"]], "hypercoil.functional.sphere": [[100, 1, 1, "", "euclidean_conv"], [101, 1, 1, "", "spatial_conv"], [102, 1, 1, "", "sphere_to_latlong"], [103, 1, 1, "", "sphere_to_normals"], [104, 1, 1, "", "spherical_conv"], [105, 1, 1, "", "spherical_geodesic"]], "hypercoil.functional.sylo": [[106, 1, 1, "", "sylo"], [126, 1, 1, "", "vertical_compression"]], "hypercoil.functional.symmap": [[108, 1, 1, "", "symexp"], [109, 1, 1, "", "symlog"], [110, 1, 1, "", "symmap"], [111, 1, 1, "", "symsqrt"]], "hypercoil.functional.tsconv": [[113, 1, 1, "", "basischan"], [114, 1, 1, "", "basisconv2d"], [115, 1, 1, "", "conv"], [116, 1, 1, "", "polychan"], [117, 1, 1, "", "polyconv2d"], [118, 1, 1, "", "tsconv2d"]], "hypercoil.functional.utils": [[120, 1, 1, "", "amplitude_apply"], [121, 1, 1, "", "apply_mask"], [122, 1, 1, "", "complex_decompose"], [123, 1, 1, "", "complex_recompose"], [124, 1, 1, "", "conform_mask"], [125, 1, 1, "", "mask_tensor"]], "hypercoil.functional.window": [[128, 1, 1, "", "sample_nonoverlapping_windows_existing_ax"], [129, 1, 1, "", "sample_nonoverlapping_windows_new_ax"], [130, 1, 1, "", "sample_overlapping_windows_existing_ax"], [131, 1, 1, "", "sample_overlapping_windows_new_ax"], [132, 1, 1, "", "sample_windows"]], "hypercoil.init": [[133, 0, 0, "-", "atlas"], [143, 0, 0, "-", "atlasmixins"], [144, 0, 0, "-", "base"], [152, 0, 0, "-", "deltaplus"], [153, 0, 0, "-", "dirichlet"], [154, 0, 0, "-", "freqfilter"], [158, 0, 0, "-", "iirfilter"], [159, 0, 0, "-", "laplace"], [160, 0, 0, "-", "mapparam"], [177, 0, 0, "-", "mpbl"], [178, 0, 0, "-", "semidefinite"], [181, 0, 0, "-", "sylo"], [182, 0, 0, "-", "toeplitz"]], "hypercoil.init.atlas": [[134, 2, 1, "", "AtlasInitialiser"], [135, 2, 1, "", "BaseAtlas"], [136, 2, 1, "", "CortexSubcortexCIfTIAtlas"], [137, 2, 1, "", "DirichletInitBaseAtlas"], [138, 2, 1, "", "DirichletInitSurfaceAtlas"], [139, 2, 1, "", "DirichletInitVolumetricAtlas"], [140, 2, 1, "", "DiscreteVolumetricAtlas"], [141, 2, 1, "", "MultiVolumetricAtlas"], [142, 2, 1, "", "MultifileVolumetricAtlas"]], "hypercoil.init.atlas.AtlasInitialiser": [[134, 3, 1, "", "__call__"]], "hypercoil.init.atlas.BaseAtlas": [[135, 3, 1, "", "__call__"]], "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas": [[136, 3, 1, "", "__call__"], [136, 3, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitBaseAtlas": [[137, 3, 1, "", "__call__"]], "hypercoil.init.atlas.DirichletInitSurfaceAtlas": [[138, 3, 1, "", "__call__"], [138, 3, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitVolumetricAtlas": [[139, 3, 1, "", "__call__"]], "hypercoil.init.atlas.DiscreteVolumetricAtlas": [[140, 3, 1, "", "__call__"]], "hypercoil.init.atlas.MultiVolumetricAtlas": [[141, 3, 1, "", "__call__"]], "hypercoil.init.atlas.MultifileVolumetricAtlas": [[142, 3, 1, "", "__call__"]], "hypercoil.init.atlasmixins": [[143, 2, 1, "", "Compartment"], [143, 2, 1, "", "CompartmentSet"], [143, 2, 1, "", "Mask"], [143, 2, 1, "", "Reference"], [143, 2, 1, "", "_CIfTIReferenceMixin"], [143, 2, 1, "", "_ContinuousLabelMixin"], [143, 2, 1, "", "_CortexSubcortexCIfTICompartmentMixin"], [143, 2, 1, "", "_CortexSubcortexCIfTIMaskMixin"], [143, 2, 1, "", "_DirichletLabelMixin"], [143, 2, 1, "", "_DiscreteLabelMixin"], [143, 2, 1, "", "_EvenlySampledConvMixin"], [143, 2, 1, "", "_FromNullMaskMixin"], [143, 2, 1, "", "_LogicMaskMixin"], [143, 2, 1, "", "_MultiCompartmentMixin"], [143, 2, 1, "", "_PhantomReferenceMixin"], [143, 2, 1, "", "_SingleCompartmentMixin"], [143, 2, 1, "", "_SpatialConvMixin"], [143, 2, 1, "", "_SurfaceObjectReferenceMixin"], [143, 2, 1, "", "_SurfaceSingleReferenceMixin"], [143, 2, 1, "", "_VertexCIfTIMeshMixin"], [143, 2, 1, "", "_VolumeMultiReferenceMixin"], [143, 2, 1, "", "_VolumeObjectReferenceMixin"], [143, 2, 1, "", "_VolumeSingleReferenceMixin"], [143, 2, 1, "", "_VolumetricMeshMixin"]], "hypercoil.init.base": [[145, 1, 1, "", "ConstantInitialiser"], [146, 1, 1, "", "DistributionInitialiser"], [147, 2, 1, "", "IdentityInitialiser"], [148, 2, 1, "", "MappedInitialiser"], [149, 1, 1, "", "constant_init"], [150, 1, 1, "", "from_distr_init"], [151, 1, 1, "", "identity_init"]], "hypercoil.init.deltaplus": [[152, 2, 1, "", "DeltaPlusInitialiser"], [152, 1, 1, "", "deltaplus_init"]], "hypercoil.init.dirichlet": [[153, 2, 1, "", "DirichletInitialiser"], [153, 1, 1, "", "dirichlet_init"]], "hypercoil.init.freqfilter": [[155, 2, 1, "", "FreqFilterSpec"], [156, 1, 1, "", "clamp_init"], [157, 1, 1, "", "freqfilter_init"]], "hypercoil.init.freqfilter.FreqFilterSpec": [[155, 3, 1, "", "get_clamps"], [155, 3, 1, "", "initialise_spectrum"]], "hypercoil.init.iirfilter": [[158, 2, 1, "", "IIRFilterSpec"]], "hypercoil.init.iirfilter.IIRFilterSpec": [[158, 3, 1, "", "initialise_coefs"]], "hypercoil.init.laplace": [[159, 2, 1, "", "LaplaceInitialiser"], [159, 1, 1, "", "laplace_init"]], "hypercoil.init.mapparam": [[161, 2, 1, "", "AffineMappedParameter"], [162, 2, 1, "", "AmplitudeProbabilitySimplexParameter"], [163, 2, 1, "", "AmplitudeTanhMappedParameter"], [164, 2, 1, "", "Clip"], [165, 2, 1, "", "DomainMappedParameter"], [166, 2, 1, "", "ForcePositiveDefinite"], [167, 2, 1, "", "IdentityMappedParameter"], [168, 2, 1, "", "IsochoricParameter"], [169, 2, 1, "", "MappedLogits"], [170, 2, 1, "", "MappedParameter"], [171, 2, 1, "", "NormSphereParameter"], [172, 2, 1, "", "OrthogonalParameter"], [173, 2, 1, "", "PhaseAmplitudeMixin"], [174, 2, 1, "", "ProbabilitySimplexParameter"], [175, 2, 1, "", "Renormalise"], [176, 2, 1, "", "TanhMappedParameter"]], "hypercoil.init.mpbl": [[177, 1, 1, "", "maximum_potential_bipartite_lattice"]], "hypercoil.init.semidefinite": [[179, 2, 1, "", "SPDEuclideanMean"], [179, 2, 1, "", "SPDGeometricMean"], [179, 2, 1, "", "SPDHarmonicMean"], [179, 2, 1, "", "SPDLogEuclideanMean"], [180, 2, 1, "", "TangencyInitialiser"], [180, 1, 1, "", "tangency_init"]], "hypercoil.init.sylo": [[181, 2, 1, "", "SyloInitialiser"], [181, 1, 1, "", "sylo_init"]], "hypercoil.init.toeplitz": [[182, 2, 1, "", "ToeplitzInitialiser"]], "hypercoil.loss": [[188, 2, 1, "", "BatchCorrelationLoss"], [189, 2, 1, "", "BimodalSymmetricLoss"], [190, 2, 1, "", "BregmanDivergenceLogitLoss"], [190, 2, 1, "", "BregmanDivergenceLoss"], [191, 2, 1, "", "CompactnessLoss"], [192, 2, 1, "", "ConnectopyLoss"], [193, 2, 1, "", "ConstraintViolationLoss"], [196, 2, 1, "", "DispersionLoss"], [197, 2, 1, "", "EntropyLogitLoss"], [197, 2, 1, "", "EntropyLoss"], [198, 2, 1, "", "EquilibriumLogitLoss"], [198, 2, 1, "", "EquilibriumLoss"], [194, 2, 1, "", "GramDeterminantLoss"], [204, 2, 1, "", "GramLogDeterminantLoss"], [199, 2, 1, "", "HingeLoss"], [201, 2, 1, "", "InterhemisphericTetherLoss"], [202, 2, 1, "", "JSDivergenceLogitLoss"], [202, 2, 1, "", "JSDivergenceLoss"], [203, 2, 1, "", "KLDivergenceLogitLoss"], [203, 2, 1, "", "KLDivergenceLoss"], [183, 2, 1, "", "Loss"], [184, 2, 1, "", "MSELoss"], [205, 2, 1, "", "ModularityLoss"], [206, 2, 1, "", "MultivariateKurtosis"], [185, 2, 1, "", "NormedLoss"], [186, 2, 1, "", "ParameterisedLoss"], [207, 2, 1, "", "QCFCLoss"], [208, 2, 1, "", "ReferenceTetherLoss"], [220, 2, 1, "", "SecondMomentCentredLoss"], [220, 2, 1, "", "SecondMomentLoss"], [221, 2, 1, "", "SmoothnessLoss"], [222, 2, 1, "", "UnilateralLoss"], [187, 1, 1, "", "auto_tol"], [188, 1, 1, "", "batch_corr"], [189, 1, 1, "", "bimodal_symmetric"], [190, 1, 1, "", "bregman_divergence"], [190, 1, 1, "", "bregman_divergence_logit"], [191, 1, 1, "", "compactness"], [192, 1, 1, "", "connectopy"], [193, 1, 1, "", "constraint_violation"], [194, 1, 1, "", "det_gram"], [195, 1, 1, "", "difference"], [196, 1, 1, "", "dispersion"], [197, 1, 1, "", "entropy"], [197, 1, 1, "", "entropy_logit"], [198, 1, 1, "", "equilibrium"], [198, 1, 1, "", "equilibrium_logit"], [199, 1, 1, "", "hinge_loss"], [200, 1, 1, "", "identity"], [201, 1, 1, "", "interhemispheric_tether"], [202, 1, 1, "", "js_divergence"], [202, 1, 1, "", "js_divergence_logit"], [203, 1, 1, "", "kl_divergence"], [203, 1, 1, "", "kl_divergence_logit"], [204, 1, 1, "", "log_det_gram"], [205, 1, 1, "", "modularity"], [206, 1, 1, "", "multivariate_kurtosis"], [207, 1, 1, "", "qcfc"], [208, 1, 1, "", "reference_tether"], [220, 1, 1, "", "second_moment"], [220, 1, 1, "", "second_moment_centred"], [221, 1, 1, "", "smoothness"], [222, 1, 1, "", "unilateral_loss"], [223, 1, 1, "", "zero"]], "hypercoil.loss.scalarise": [[209, 1, 1, "", "max_scalarise"], [210, 1, 1, "", "mean_scalarise"], [211, 1, 1, "", "meansq_scalarise"], [212, 1, 1, "", "norm_scalarise"], [213, 1, 1, "", "selfwmean_scalarise"], [214, 1, 1, "", "sum_scalarise"], [215, 1, 1, "", "vnorm_scalarise"], [216, 1, 1, "", "wmean"], [217, 1, 1, "", "wmean_scalarise"]], "hypercoil.loss.scheme": [[218, 2, 1, "", "LossApply"], [219, 2, 1, "", "LossScheme"]], "hypercoil.neuro": [[224, 0, 0, "-", "synth"]], "hypercoil.neuro.synth": [[225, 1, 1, "", "match_cov_and_spectrum"], [226, 1, 1, "", "match_covariance"], [227, 1, 1, "", "match_reference"], [228, 1, 1, "", "match_spectra"], [229, 1, 1, "", "synthesise_from_cov_and_spectrum"], [230, 1, 1, "", "synthesise_matched"]], "hypercoil.nn": [[231, 0, 0, "-", "activation"], [234, 0, 0, "-", "atlas"], [236, 0, 0, "-", "confound"], [240, 0, 0, "-", "cov"], [249, 0, 0, "-", "iirfilter"], [250, 0, 0, "-", "interpolate"], [254, 0, 0, "-", "recombinator"], [257, 0, 0, "-", "semidefinite"], [262, 0, 0, "-", "sylo"], [265, 0, 0, "-", "tsconv"], [269, 0, 0, "-", "vertcom"]], "hypercoil.nn.activation": [[232, 2, 1, "", "CorrelationNorm"], [233, 2, 1, "", "Isochor"]], "hypercoil.nn.atlas": [[235, 2, 1, "", "AtlasLinear"]], "hypercoil.nn.confound": [[237, 2, 1, "", "EliminationSelector"], [238, 2, 1, "", "LinearCombinationSelector"], [239, 2, 1, "", "LinearRFNN"]], "hypercoil.nn.cov": [[241, 2, 1, "", "BaseCovariance"], [242, 2, 1, "", "BinaryCovariance"], [243, 2, 1, "", "BinaryCovarianceTW"], [244, 2, 1, "", "BinaryCovarianceUW"], [245, 2, 1, "", "UnaryCovariance"], [246, 2, 1, "", "UnaryCovarianceTW"], [247, 2, 1, "", "UnaryCovarianceUW"]], "hypercoil.nn.freqfilter": [[248, 2, 1, "", "FrequencyDomainFilter"]], "hypercoil.nn.iirfilter": [[249, 2, 1, "", "IIRFiltFilt"], [249, 2, 1, "", "IIRFilter"]], "hypercoil.nn.interpolate": [[251, 2, 1, "", "HybridInterpolate"], [252, 2, 1, "", "LinearInterpolate"], [253, 2, 1, "", "SpectralInterpolate"]], "hypercoil.nn.recombinator": [[255, 1, 1, "", "Recombinator"]], "hypercoil.nn.resid": [[256, 0, 0, "-", "Residualise"]], "hypercoil.nn.semidefinite": [[258, 1, 1, "", "BatchTangentProject"], [259, 1, 1, "", "TangentProject"]], "hypercoil.nn.sylo": [[263, 2, 1, "", "Sylo"]], "hypercoil.nn.tsconv": [[266, 1, 1, "", "BasisConv2D"], [267, 1, 1, "", "PolyConv2D"], [268, 1, 1, "", "TimeSeriesConv2D"]], "hypercoil.nn.vertcom": [[270, 1, 1, "", "VerticalCompression"]], "hypercoil.nn.window": [[271, 2, 1, "", "WindowAmplifier"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"orient_and_conform": 0, "activ": [1, 231], "function": [1, 106, 192, 200, 223, 231, 274, 275, 276, 283], "amplitude_atanh": 2, "amplitude_tanh": 3, "corrnorm": 4, "isochor": [5, 233], "psd": 5, "normalis": [5, 232, 233], "cmass": [6, 7], "centr": [6, 7, 8, 9, 10], "mass": [6, 7, 8, 9, 10], "arrai": 7, "coordin": [7, 8, 99], "cmass_coor": 8, "ani": 8, "displac": 9, "from": [9, 189], "refer": [9, 208, 280], "diffus": 10, "around": 10, "connectopi": [11, 192], "connectop": [11, 192], "manifold": 11, "diffusion_map": 12, "laplacian_eigenmap": 13, "cov": [14, 18, 240], "covari": [14, 16, 18, 20, 22, 23, 240, 241], "correl": [14, 15, 17, 19, 21, 188, 232], "conditionalcorr": 15, "condit": [15, 16], "conditionalcov": 16, "corr": 17, "pearson": 17, "pairedcorr": 19, "pair": [19, 20], "pairedcov": 20, "partialcorr": 21, "partial": [21, 22], "partialcov": 22, "precis": 23, "invers": 23, "fourier": 24, "frequenc": [24, 154, 248], "domain": [24, 248], "filter": [24, 32, 158, 248, 249], "analytic_sign": 25, "env_inst": 26, "envelop": 27, "hilbert_transform": 28, "instantaneous_frequ": 29, "instantaneous_phas": 30, "product_filt": 31, "product_filtfilt": 32, "zero": [32, 223], "phase": [32, 33], "unwrap": 33, "graph": [34, 37], "network": [34, 282], "coaffili": 35, "commun": 35, "girvan_newman_nul": 36, "graph_laplacian": 37, "laplacian": 37, "modularity_matrix": 38, "relaxed_modular": 39, "interpol": [40, 41, 42, 250], "imput": 40, "hybrid_interpol": 41, "linear": [41, 42, 235], "spectral": 41, "linear_interpol": 42, "spectral_interpol": 43, "weighted_interpol": 44, "kernel": 45, "parameteris": [45, 186, 283], "corr_kernel": 46, "cosine_kernel": 47, "cov_kernel": 48, "gaussian_kernel": 49, "linear_dist": 50, "linear_kernel": 51, "param_norm": 52, "polynomial_kernel": 53, "rbf_kernel": 54, "sigmoid_kernel": 55, "matrix": [56, 78, 107], "oper": [56, 78], "cholesky_invert": 57, "perform": 57, "delete_diagon": 58, "diag_emb": 59, "expand_out": 60, "fill_diagon": 61, "recondition_eigenspac": 62, "spd": 63, "squareform": 64, "sym2vec": 65, "symmetr": [66, 107], "toeplitz": [67, 182], "toeplitz_2d": 68, "vec2sym": 69, "residualis": [70, 256], "semidefinit": [71, 178, 257], "posit": 71, "cone": 71, "cone_project_spd": 72, "mean_euc_spd": 73, "mean_geom_spd": 74, "mean_harm_spd": 75, "mean_logeuc_spd": 76, "tangent_project_spd": 77, "spars": 78, "top": 78, "k": 78, "bcoo": 78, "format": 78, "as_topk": 79, "block_serialis": 80, "dspdmm": 81, "full_as_topk": 82, "random_spars": 83, "select_indic": 84, "sp_block_serialis": 85, "sparse_astyp": 86, "spdiagmm": 87, "splr_hadamard": 88, "spsp_innerpair": 89, "spsp_pairdiff": 90, "spspmm": 91, "spspmm_full": 92, "topk": 93, "topk_diagreplac": 94, "topk_diagzero": 95, "topk_to_bcoo": 96, "topkx": 97, "trace_spspmm": 98, "sphere": 99, "spheric": 99, "euclidean_conv": 100, "spatial_conv": 101, "sphere_to_latlong": 102, "sphere_to_norm": 103, "spherical_conv": 104, "spherical_geodes": 105, "sylo": [106, 181, 262, 263], "symmap": [107, 110], "map": [107, 160, 276], "symexp": 108, "symlog": 109, "symsqrt": 111, "tsconv": [112, 265], "time": [112, 206, 265], "seri": [112, 206, 265], "convolut": [112, 265], "basischan": 113, "basisconv2d": [114, 266], "conv": 115, "polychan": 116, "polyconv2d": [117, 267], "tsconv2d": 118, "util": [119, 281], "miscellan": 119, "amplitude_appli": 120, "apply_mask": 121, "complex_decompos": 122, "complex_recompos": 123, "conform_mask": 124, "mask_tensor": 125, "vertical_compress": 126, "window": 127, "random": 127, "sample_nonoverlapping_windows_existing_ax": 128, "sample_nonoverlapping_windows_new_ax": 129, "sample_overlapping_windows_existing_ax": 130, "sample_overlapping_windows_new_ax": 131, "sample_window": 132, "atla": [133, 143, 234, 235], "initialis": [133, 144, 277], "content": [133, 276, 277, 284], "atlasinitialis": 134, "baseatla": 135, "cortexsubcortexciftiatla": 136, "dirichletinitbaseatla": 137, "dirichletinitsurfaceatla": 138, "dirichletinitvolumetricatla": 139, "discretevolumetricatla": 140, "multivolumetricatla": 141, "multifilevolumetricatla": 142, "atlasmixin": 143, "mixin": 143, "referencemixin": 143, "maskmixin": 143, "compartmentmixin": 143, "labelmixin": 143, "meshmixin": 143, "convmixin": 143, "abstract": 143, "base": [144, 183, 241], "constantinitialis": 145, "distributioninitialis": 146, "identityinitialis": 147, "mappedinitialis": 148, "constant_init": 149, "from_distr_init": 150, "identity_init": 151, "deltaplu": 152, "deltaplus_init": 152, "deltaplusinitialis": 152, "dirichlet": 153, "dirichlet_init": 153, "dirichletinitialis": 153, "freqfilt": [154, 248], "band": 154, "init": [154, 158, 277, 283], "freqfilterspec": 155, "clamp_init": 156, "freqfilter_init": 157, "iirfilt": [158, 249], "iir": [158, 249], "iirfilterspec": 158, "laplac": 159, "laplace_init": 159, "laplaceinitialis": 159, "mapparam": 160, "paramet": [160, 185, 218, 256], "affinemappedparamet": 161, "amplitudeprobabilitysimplexparamet": 162, "amplitudetanhmappedparamet": 163, "clip": 164, "domainmappedparamet": 165, "forcepositivedefinit": 166, "identitymappedparamet": 167, "isochoricparamet": 168, "mappedlogit": 169, "mappedparamet": 170, "normsphereparamet": 171, "orthogonalparamet": 172, "phaseamplitudemixin": 173, "probabilitysimplexparamet": 174, "renormalis": 175, "tanhmappedparamet": 176, "mpbl": 177, "semidefinitemean": 179, "spdeuclideanmean": 179, "spdharmonicmean": 179, "spdlogeuclideanmean": 179, "spdgeometricmean": 179, "tangencyinitialis": 180, "tangency_init": 180, "sylo_init": 181, "syloinitialis": 181, "loss": [183, 186, 198, 199, 201, 204, 207, 218, 219, 274, 279, 283], "class": [183, 186, 241], "scalar": 183, "valu": [183, 209], "mseloss": 184, "mean": [184, 210, 211, 213, 217], "squar": [184, 211], "error": 184, "normedloss": 185, "norm": [185, 212, 215], "regularis": [185, 279], "parameterisedloss": 186, "extens": 186, "custom": 186, "auto_tol": 187, "signific": 187, "toler": 187, "batch_corr": 188, "batch": 188, "axi": 188, "batchcorrelationloss": 188, "bimodal_symmetr": 189, "minim": 189, "distanc": 189, "2": 189, "mode": 189, "bimodalsymmetricloss": 189, "bregman_diverg": 190, "bregman": 190, "diverg": [190, 202, 203], "bregmandivergenceloss": 190, "compact": 191, "compactnessloss": 191, "generalis": 192, "connectopyloss": 192, "constraint_viol": 193, "soft": 193, "constraint": 193, "constraintviolationloss": 193, "det_gram": 194, "gramian": 194, "determin": [194, 204], "gramdeterminantloss": 194, "differ": [195, 221], "elementwis": 195, "dispers": 196, "vector": [196, 215], "dispersionloss": 196, "entropi": 197, "categor": 197, "entropyloss": 197, "equilibrium": 198, "equilibriumloss": 198, "hinge_loss": 199, "svm": [199, 261], "hing": 199, "hingeloss": 199, "ident": 200, "interhemispheric_teth": 201, "inter": 201, "hemispher": 201, "tether": [201, 208], "interhemispherictetherloss": 201, "js_diverg": 202, "jensen": 202, "shannon": 202, "jsdivergenceloss": 202, "kl_diverg": 203, "kullback": 203, "leibler": 203, "kldivergenceloss": 203, "log_det_gram": 204, "gram": 204, "log": 204, "gramlogdeterminantloss": 204, "det": 204, "modular": 205, "relax": 205, "modularityloss": 205, "girvan": 205, "newman": 205, "multivariate_kurtosi": 206, "stationar": 206, "multivariatekurtosi": 206, "qcfc": 207, "qc": 207, "fc": 207, "measur": 207, "qcfcloss": 207, "reference_teth": 208, "spatial": 208, "point": 208, "referencetetherloss": 208, "max_scalaris": 209, "maximum": 209, "scalaris": [209, 210, 211, 212, 213, 214, 215, 217], "mean_scalaris": 210, "meansq_scalaris": 211, "norm_scalaris": 212, "selfwmean_scalaris": 213, "self": 213, "weight": [213, 217], "sum_scalaris": 214, "sum": 214, "vnorm_scalaris": 215, "wmean": 216, "wmean_scalaris": 217, "lossappli": 218, "select": 218, "appli": 218, "lossschem": 219, "scheme": [219, 277], "multipl": 219, "second_mo": 220, "second": 220, "moment": 220, "secondmomentloss": 220, "smooth": 221, "backward": 221, "smoothnessloss": 221, "unilateral_loss": 222, "unilater": 222, "penalti": 222, "unilateralloss": 222, "synth": 224, "data": [224, 281], "synthesi": 224, "match_cov_and_spectrum": 225, "match_covari": 226, "match_refer": 227, "match_spectra": 228, "synthesise_from_cov_and_spectrum": 229, "synthesise_match": 230, "modul": [231, 240, 282], "correlationnorm": 232, "layer": [234, 235, 248, 249, 250], "atlaslinear": 235, "confound": 236, "model": [236, 274], "eliminationselector": 237, "linearcombinationselector": 238, "linearrfnn": 239, "basecovari": 241, "binarycovari": 242, "binarycovariancetw": 243, "binarycovarianceuw": 244, "unarycovari": 245, "unarycovariancetw": 246, "unarycovarianceuw": 247, "hybridinterpol": 251, "linearinterpol": 252, "spectralinterpol": 253, "recombin": [254, 255], "batchtangentproject": 258, "tangentproject": 259, "spdnois": 260, "syloresnet": 264, "timeseriesconv2d": 268, "vertcom": 269, "vertex": 269, "compress": 269, "verticalcompress": 270, "windowamplifi": 271, "framework": 272, "engin": 273, "differenti": [273, 276, 283], "A": [274, 276, 283], "first": 274, "real": 274, "exampl": [274, 283], "load": 274, "dataset": 274, "defin": 274, "forward": 274, "pass": 274, "optimis": 274, "loop": 274, "train": 274, "program": 276, "brain": 276, "about": 276, "remark": 276, "indic": 276, "tabl": 276, "instal": 278, "api": 280, "neuro": 281, "neurosci": 281, "nn": [282, 283], "neural": 282, "technic": 283, "overview": 283, "compos": 283, "learn": 283, "signal": 283, "formula": 283, "grammar": 283, "viz": 283, "visualis": 283, "simpl": 283, "redact": 284}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"orient_and_conform": [[0, "orient-and-conform"]], "activation: Activation functions": [[1, "module-hypercoil.functional.activation"]], "amplitude_atanh": [[2, "amplitude-atanh"]], "amplitude_tanh": [[3, "amplitude-tanh"]], "corrnorm": [[4, "corrnorm"]], "isochor: PSD normalisation": [[5, "isochor-psd-normalisation"]], "cmass: Centre of mass": [[6, "module-hypercoil.functional.cmass"]], "cmass: Centre of mass, array coordinates": [[7, "cmass-centre-of-mass-array-coordinates"]], "cmass_coor: Centre of mass, any coordinates": [[8, "cmass-coor-centre-of-mass-any-coordinates"]], "Displacement from a reference centre of mass": [[9, "displacement-from-a-reference-centre-of-mass"]], "diffuse: Diffuseness around centre of mass": [[10, "diffuse-diffuseness-around-centre-of-mass"]], "connectopy: Connectopic manifolds": [[11, "module-hypercoil.functional.connectopy"]], "diffusion_mapping": [[12, "diffusion-mapping"]], "laplacian_eigenmaps": [[13, "laplacian-eigenmaps"]], "cov: Covariances and correlations": [[14, "module-hypercoil.functional.cov"]], "conditionalcorr: Conditional correlation": [[15, "conditionalcorr-conditional-correlation"]], "conditionalcov: Conditional covariance": [[16, "conditionalcov-conditional-covariance"]], "corr: Pearson correlation": [[17, "corr-pearson-correlation"]], "cov: Covariance": [[18, "cov-covariance"]], "pairedcorr: Paired correlation": [[19, "pairedcorr-paired-correlation"]], "pairedcov: Paired covariance": [[20, "pairedcov-paired-covariance"]], "partialcorr: Partial correlation": [[21, "partialcorr-partial-correlation"]], "partialcov: Partial covariance": [[22, "partialcov-partial-covariance"]], "precision: Inverse covariance (precision)": [[23, "precision-inverse-covariance-precision"]], "fourier: Frequency-domain filter": [[24, "module-hypercoil.functional.fourier"]], "analytic_signal": [[25, "analytic-signal"]], "env_inst": [[26, "env-inst"]], "envelope": [[27, "envelope"]], "hilbert_transform": [[28, "hilbert-transform"]], "instantaneous_frequency": [[29, "instantaneous-frequency"]], "instantaneous_phase": [[30, "instantaneous-phase"]], "product_filter": [[31, "product-filter"]], "product_filtfilt: Zero-phase filter": [[32, "product-filtfilt-zero-phase-filter"]], "unwrap: Unwrap phase": [[33, "unwrap-unwrap-phase"]], "graph: Graphs and networks": [[34, "module-hypercoil.functional.graph"]], "coaffiliation: Community coaffiliation": [[35, "coaffiliation-community-coaffiliation"]], "girvan_newman_null": [[36, "girvan-newman-null"]], "graph_laplacian: Graph Laplacian": [[37, "graph-laplacian-graph-laplacian"]], "modularity_matrix": [[38, "modularity-matrix"]], "relaxed_modularity": [[39, "relaxed-modularity"]], "interpolate: Interpolation and imputation": [[40, "module-hypercoil.functional.interpolate"]], "hybrid_interpolate: Linear + spectral interpolation": [[41, "hybrid-interpolate-linear-spectral-interpolation"]], "linear_interpolate: Linear interpolation": [[42, "linear-interpolate-linear-interpolation"]], "spectral_interpolate": [[43, "spectral-interpolate"]], "weighted_interpolate": [[44, "weighted-interpolate"]], "kernel: Parameterised kernels": [[45, "module-hypercoil.functional.kernel"]], "corr_kernel": [[46, "corr-kernel"]], "cosine_kernel": [[47, "cosine-kernel"]], "cov_kernel": [[48, "cov-kernel"]], "gaussian_kernel": [[49, "gaussian-kernel"]], "linear_distance": [[50, "linear-distance"]], "linear_kernel": [[51, "linear-kernel"]], "param_norm": [[52, "param-norm"]], "polynomial_kernel": [[53, "polynomial-kernel"]], "rbf_kernel": [[54, "rbf-kernel"]], "sigmoid_kernel": [[55, "sigmoid-kernel"]], "matrix: Matrix operations": [[56, "module-hypercoil.functional.matrix"]], "cholesky_invert": [[57, "cholesky-invert"]], "Performance": [[57, null]], "delete_diagonal": [[58, "delete-diagonal"]], "diag_embed": [[59, "diag-embed"]], "expand_outer": [[60, "expand-outer"]], "fill_diagonal": [[61, "fill-diagonal"]], "recondition_eigenspaces": [[62, "recondition-eigenspaces"]], "spd": [[63, "spd"]], "squareform": [[64, "squareform"]], "sym2vec": [[65, "sym2vec"]], "symmetric": [[66, "symmetric"]], "toeplitz": [[67, "toeplitz"], [182, "module-hypercoil.init.toeplitz"]], "toeplitz_2d": [[68, "toeplitz-2d"]], "vec2sym": [[69, "vec2sym"]], "residualise": [[70, "residualise"]], "semidefinite: Positive semidefinite cone": [[71, "module-hypercoil.functional.semidefinite"]], "cone_project_spd": [[72, "cone-project-spd"]], "mean_euc_spd": [[73, "mean-euc-spd"]], "mean_geom_spd": [[74, "mean-geom-spd"]], "mean_harm_spd": [[75, "mean-harm-spd"]], "mean_logeuc_spd": [[76, "mean-logeuc-spd"]], "tangent_project_spd": [[77, "tangent-project-spd"]], "sparse: Sparse matrix operations": [[78, "module-hypercoil.functional.sparse"]], "Top-k BCOO format": [[78, "top-k-bcoo-format"]], "as_topk": [[79, "as-topk"]], "block_serialise": [[80, "block-serialise"]], "dspdmm": [[81, "dspdmm"]], "full_as_topk": [[82, "full-as-topk"]], "random_sparse": [[83, "random-sparse"]], "select_indices": [[84, "select-indices"]], "sp_block_serialise": [[85, "sp-block-serialise"]], "sparse_astype": [[86, "sparse-astype"]], "spdiagmm": [[87, "spdiagmm"]], "splr_hadamard": [[88, "splr-hadamard"]], "spsp_innerpaired": [[89, "spsp-innerpaired"]], "spsp_pairdiff": [[90, "spsp-pairdiff"]], "spspmm": [[91, "spspmm"]], "spspmm_full": [[92, "spspmm-full"]], "topk": [[93, "topk"]], "topk_diagreplace": [[94, "topk-diagreplace"]], "topk_diagzero": [[95, "topk-diagzero"]], "topk_to_bcoo": [[96, "topk-to-bcoo"]], "topkx": [[97, "topkx"]], "trace_spspmm": [[98, "trace-spspmm"]], "sphere: Spherical coordinates": [[99, "module-hypercoil.functional.sphere"]], "euclidean_conv": [[100, "euclidean-conv"]], "spatial_conv": [[101, "spatial-conv"]], "sphere_to_latlong": [[102, "sphere-to-latlong"]], "sphere_to_normals": [[103, "sphere-to-normals"]], "spherical_conv": [[104, "spherical-conv"]], "spherical_geodesic": [[105, "spherical-geodesic"]], "sylo: Sylo function": [[106, "module-hypercoil.functional.sylo"]], "symmap: Symmetric matrix maps": [[107, "module-hypercoil.functional.symmap"]], "symexp": [[108, "symexp"]], "symlog": [[109, "symlog"]], "symmap": [[110, "symmap"]], "symsqrt": [[111, "symsqrt"]], "tsconv: Time series convolution": [[112, "module-hypercoil.functional.tsconv"], [265, "module-hypercoil.nn.tsconv"]], "basischan": [[113, "basischan"]], "basisconv2d": [[114, "basisconv2d"]], "conv": [[115, "conv"]], "polychan": [[116, "polychan"]], "polyconv2d": [[117, "polyconv2d"]], "tsconv2d": [[118, "tsconv2d"]], "utils: Miscellaneous": [[119, "module-hypercoil.functional.utils"]], "amplitude_apply": [[120, "amplitude-apply"]], "apply_mask": [[121, "apply-mask"]], "complex_decompose": [[122, "complex-decompose"]], "complex_recompose": [[123, "complex-recompose"]], "conform_mask": [[124, "conform-mask"]], "mask_tensor": [[125, "mask-tensor"]], "vertical_compression": [[126, "vertical-compression"]], "window: Random windowing": [[127, "module-hypercoil.functional.window"]], "sample_nonoverlapping_windows_existing_ax": [[128, "sample-nonoverlapping-windows-existing-ax"]], "sample_nonoverlapping_windows_new_ax": [[129, "sample-nonoverlapping-windows-new-ax"]], "sample_overlapping_windows_existing_ax": [[130, "sample-overlapping-windows-existing-ax"]], "sample_overlapping_windows_new_ax": [[131, "sample-overlapping-windows-new-ax"]], "sample_windows": [[132, "sample-windows"]], "atlas: Atlas initialisation": [[133, "module-hypercoil.init.atlas"]], "Contents:": [[133, null], [276, null], [277, null]], "AtlasInitialiser": [[134, "atlasinitialiser"]], "BaseAtlas": [[135, "baseatlas"]], "CortexSubcortexCIfTIAtlas": [[136, "cortexsubcortexciftiatlas"]], "DirichletInitBaseAtlas": [[137, "dirichletinitbaseatlas"]], "DirichletInitSurfaceAtlas": [[138, "dirichletinitsurfaceatlas"]], "DirichletInitVolumetricAtlas": [[139, "dirichletinitvolumetricatlas"]], "DiscreteVolumetricAtlas": [[140, "discretevolumetricatlas"]], "MultiVolumetricAtlas": [[141, "multivolumetricatlas"]], "MultifileVolumetricAtlas": [[142, "multifilevolumetricatlas"]], "atlasmixins: Atlas mixins": [[143, "module-hypercoil.init.atlasmixins"]], "~ReferenceMixin": [[143, "referencemixin"]], "~MaskMixin": [[143, "maskmixin"]], "~CompartmentMixin": [[143, "compartmentmixin"]], "~LabelMixin": [[143, "labelmixin"]], "~MeshMixin": [[143, "meshmixin"]], "~ConvMixin": [[143, "convmixin"]], "Abstractions": [[143, "abstractions"]], "base: Base initialisations": [[144, "module-hypercoil.init.base"]], "ConstantInitialiser": [[145, "constantinitialiser"]], "DistributionInitialiser": [[146, "distributioninitialiser"]], "IdentityInitialiser": [[147, "identityinitialiser"]], "MappedInitialiser": [[148, "mappedinitialiser"]], "constant_init": [[149, "constant-init"]], "from_distr_init": [[150, "from-distr-init"]], "identity_init": [[151, "identity-init"]], "deltaplus": [[152, "module-hypercoil.init.deltaplus"]], "deltaplus_init": [[152, "deltaplus-init"]], "DeltaPlusInitialiser": [[152, "deltaplusinitialiser"]], "dirichlet": [[153, "module-hypercoil.init.dirichlet"]], "dirichlet_init": [[153, "dirichlet-init"]], "DirichletInitialiser": [[153, "dirichletinitialiser"]], "freqfilter: Frequency band init": [[154, "module-hypercoil.init.freqfilter"]], "FreqFilterSpec": [[155, "freqfilterspec"]], "clamp_init": [[156, "clamp-init"]], "freqfilter_init": [[157, "freqfilter-init"]], "iirfilter: IIR filter init": [[158, "module-hypercoil.init.iirfilter"]], "IIRFilterSpec": [[158, "iirfilterspec"]], "laplace": [[159, "module-hypercoil.init.laplace"]], "laplace_init": [[159, "laplace-init"]], "LaplaceInitialiser": [[159, "laplaceinitialiser"]], "mapparam: Mapped parameters and parameter maps": [[160, "module-hypercoil.init.mapparam"]], "AffineMappedParameter": [[161, "affinemappedparameter"]], "AmplitudeProbabilitySimplexParameter": [[162, "amplitudeprobabilitysimplexparameter"]], "AmplitudeTanhMappedParameter": [[163, "amplitudetanhmappedparameter"]], "Clip": [[164, "clip"]], "DomainMappedParameter": [[165, "domainmappedparameter"]], "ForcePositiveDefinite": [[166, "forcepositivedefinite"]], "IdentityMappedParameter": [[167, "identitymappedparameter"]], "IsochoricParameter": [[168, "isochoricparameter"]], "MappedLogits": [[169, "mappedlogits"]], "MappedParameter": [[170, "mappedparameter"]], "NormSphereParameter": [[171, "normsphereparameter"]], "OrthogonalParameter": [[172, "orthogonalparameter"]], "PhaseAmplitudeMixin": [[173, "phaseamplitudemixin"]], "ProbabilitySimplexParameter": [[174, "probabilitysimplexparameter"]], "Renormalise": [[175, "renormalise"]], "TanhMappedParameter": [[176, "tanhmappedparameter"]], "mpbl": [[177, "module-hypercoil.init.mpbl"]], "semidefinite": [[178, "module-hypercoil.init.semidefinite"], [257, "module-hypercoil.nn.semidefinite"]], "SemidefiniteMean": [[179, "semidefinitemean"]], "SPDEuclideanMean": [[179, "spdeuclideanmean"]], "SPDHarmonicMean": [[179, "spdharmonicmean"]], "SPDLogEuclideanMean": [[179, "spdlogeuclideanmean"]], "SPDGeometricMean": [[179, "spdgeometricmean"]], "TangencyInitialiser": [[180, "tangencyinitialiser"], [180, "id1"]], "tangency_init": [[180, "tangency-init"]], "sylo": [[181, "module-hypercoil.init.sylo"], [262, "module-hypercoil.nn.sylo"]], "sylo_init": [[181, "sylo-init"]], "SyloInitialiser": [[181, "syloinitialiser"]], "Loss: Base class for scalar-valued losses": [[183, "loss-base-class-for-scalar-valued-losses"]], "MSELoss: Mean squared error": [[184, "mseloss-mean-squared-error"]], "NormedLoss: Normed parameter regularisation": [[185, "normedloss-normed-parameter-regularisation"]], "ParameterisedLoss: Extensible class for custom parameterised losses": [[186, "parameterisedloss-extensible-class-for-custom-parameterised-losses"]], "auto_tol: Significance tolerance": [[187, "auto-tol-significance-tolerance"]], "batch_corr: Batch-axis correlation": [[188, "batch-corr-batch-axis-correlation"]], "batch_corr": [[188, "batch-corr"]], "BatchCorrelationLoss": [[188, "batchcorrelationloss"]], "bimodal_symmetric: Minimal distance from 2 modes": [[189, "bimodal-symmetric-minimal-distance-from-2-modes"]], "bimodal_symmetric": [[189, "bimodal-symmetric"]], "BimodalSymmetricLoss": [[189, "bimodalsymmetricloss"]], "bregman_divergence: Bregman divergences": [[190, "bregman-divergence-bregman-divergences"]], "bregman_divergence": [[190, "bregman-divergence"]], "BregmanDivergenceLoss": [[190, "bregmandivergenceloss"]], "compactness: Compactness": [[191, "compactness-compactness"]], "compactness": [[191, "compactness"]], "CompactnessLoss": [[191, "compactnessloss"]], "Compactness": [[191, null]], "connectopy: Generalised connectopy": [[192, "connectopy-generalised-connectopy"]], "connectopy": [[192, "connectopy"]], "Connectopic functional": [[192, null], [192, null]], "ConnectopyLoss": [[192, "connectopyloss"]], "constraint_violation: Soft constraints": [[193, "constraint-violation-soft-constraints"]], "constraint_violation": [[193, "constraint-violation"]], "ConstraintViolationLoss": [[193, "constraintviolationloss"]], "det_gram: Gramian determinant": [[194, "det-gram-gramian-determinant"]], "det_gram": [[194, "det-gram"]], "GramDeterminantLoss": [[194, "gramdeterminantloss"]], "difference: Elementwise difference": [[195, "difference-elementwise-difference"]], "dispersion: Vector dispersion": [[196, "dispersion-vector-dispersion"]], "dispersion": [[196, "dispersion"]], "DispersionLoss": [[196, "dispersionloss"]], "Vector dispersion": [[196, null]], "entropy: Categorical entropy": [[197, "entropy-categorical-entropy"]], "entropy": [[197, "entropy"]], "EntropyLoss": [[197, "entropyloss"]], "Entropy": [[197, null], [197, null]], "equilibrium: Equilibrium loss": [[198, "equilibrium-equilibrium-loss"]], "equilibrium": [[198, "equilibrium"]], "EquilibriumLoss": [[198, "equilibriumloss"]], "Equilibrium": [[198, null], [198, null]], "hinge_loss: SVM hinge loss": [[199, "hinge-loss-svm-hinge-loss"]], "hinge_loss": [[199, "hinge-loss"]], "HingeLoss": [[199, "hingeloss"]], "identity: Identity function": [[200, "identity-identity-function"]], "interhemispheric_tether: Inter-hemispheric tethering loss": [[201, "interhemispheric-tether-inter-hemispheric-tethering-loss"]], "interhemispheric_tether": [[201, "interhemispheric-tether"]], "InterhemisphericTetherLoss": [[201, "interhemispherictetherloss"]], "Hemispheric Tether": [[201, null]], "js_divergence: Jensen-Shannon divergence": [[202, "js-divergence-jensen-shannon-divergence"]], "js_divergence": [[202, "js-divergence"]], "JSDivergenceLoss": [[202, "jsdivergenceloss"]], "kl_divergence: Kullback-Leibler divergence": [[203, "kl-divergence-kullback-leibler-divergence"]], "kl_divergence": [[203, "kl-divergence"]], "KLDivergenceLoss": [[203, "kldivergenceloss"]], "log_det_gram: Gram log-determinant loss": [[204, "log-det-gram-gram-log-determinant-loss"]], "log_det_gram": [[204, "log-det-gram"]], "GramLogDeterminantLoss": [[204, "gramlogdeterminantloss"]], "Log-det-Gram": [[204, null]], "modularity: Relaxed modularity": [[205, "modularity-relaxed-modularity"]], "modularity": [[205, "modularity"]], "ModularityLoss": [[205, "modularityloss"]], "Girvan-Newman Modularity Relaxation": [[205, null]], "multivariate_kurtosis: Time series stationarity": [[206, "multivariate-kurtosis-time-series-stationarity"]], "multivariate_kurtosis": [[206, "multivariate-kurtosis"]], "MultivariateKurtosis": [[206, "multivariatekurtosis"]], "qcfc: QC-FC measures and loss": [[207, "qcfc-qc-fc-measures-and-loss"]], "qcfc": [[207, "qcfc"]], "QCFCLoss": [[207, "qcfcloss"]], "reference_tether: Spatial tether to reference points": [[208, "reference-tether-spatial-tether-to-reference-points"]], "reference_tether": [[208, "reference-tether"]], "ReferenceTetherLoss": [[208, "referencetetherloss"]], "max_scalarise: Maximum-value scalarisation": [[209, "max-scalarise-maximum-value-scalarisation"]], "mean_scalarise: Mean scalarisation": [[210, "mean-scalarise-mean-scalarisation"]], "meansq_scalarise: Squared mean scalarisation": [[211, "meansq-scalarise-squared-mean-scalarisation"]], "norm_scalarise: Norm scalarisation": [[212, "norm-scalarise-norm-scalarisation"]], "selfwmean_scalarise: Self-weighted mean scalarisation": [[213, "selfwmean-scalarise-self-weighted-mean-scalarisation"]], "sum_scalarise: Sum scalarisation": [[214, "sum-scalarise-sum-scalarisation"]], "vnorm_scalarise: Vector norm scalarisation": [[215, "vnorm-scalarise-vector-norm-scalarisation"]], "wmean": [[216, "wmean"]], "wmean_scalarise: Weighted mean scalarisation": [[217, "wmean-scalarise-weighted-mean-scalarisation"]], "LossApply: Selectively apply loss to parameters": [[218, "lossapply-selectively-apply-loss-to-parameters"]], "LossScheme: Scheme for multiple losses": [[219, "lossscheme-scheme-for-multiple-losses"]], "second_moment: Second moments": [[220, "second-moment-second-moments"]], "second_moment": [[220, "second-moment"]], "SecondMomentLoss": [[220, "secondmomentloss"]], "Second Moment": [[220, null], [220, null]], "smoothness: Backwards differences": [[221, "smoothness-backwards-differences"]], "smoothness": [[221, "smoothness"]], "SmoothnessLoss": [[221, "smoothnessloss"]], "unilateral_loss: Unilateral penalties": [[222, "unilateral-loss-unilateral-penalties"]], "unilateral_loss": [[222, "unilateral-loss"]], "UnilateralLoss": [[222, "unilateralloss"]], "zero: Zero function": [[223, "zero-zero-function"]], "synth: Data synthesis": [[224, "module-hypercoil.neuro.synth"]], "match_cov_and_spectrum": [[225, "match-cov-and-spectrum"]], "match_covariance": [[226, "match-covariance"]], "match_reference": [[227, "match-reference"]], "match_spectra": [[228, "match-spectra"]], "synthesise_from_cov_and_spectrum": [[229, "synthesise-from-cov-and-spectrum"]], "synthesise_matched": [[230, "synthesise-matched"]], "activation: Activation functions as modules": [[231, "module-hypercoil.nn.activation"]], "CorrelationNorm: Correlation normalisation": [[232, "correlationnorm-correlation-normalisation"]], "Isochor: Isochoric normalisation": [[233, "isochor-isochoric-normalisation"]], "atlas: Atlas layers": [[234, "module-hypercoil.nn.atlas"]], "AtlasLinear: Linear atlas layer": [[235, "atlaslinear-linear-atlas-layer"]], "confound: Confound Models": [[236, "module-hypercoil.nn.confound"]], "EliminationSelector": [[237, "eliminationselector"]], "LinearCombinationSelector": [[238, "linearcombinationselector"]], "LinearRFNN": [[239, "linearrfnn"]], "cov: Covariance modules": [[240, "module-hypercoil.nn.cov"]], "BaseCovariance: Covariance base class": [[241, "basecovariance-covariance-base-class"]], "BinaryCovariance": [[242, "binarycovariance"]], "BinaryCovarianceTW": [[243, "binarycovariancetw"]], "BinaryCovarianceUW": [[244, "binarycovarianceuw"]], "UnaryCovariance": [[245, "unarycovariance"]], "UnaryCovarianceTW": [[246, "unarycovariancetw"]], "UnaryCovarianceUW": [[247, "unarycovarianceuw"]], "freqfilter: Frequency-domain filter layer": [[248, "freqfilter-frequency-domain-filter-layer"]], "iirfilter: IIR filter layer": [[249, "module-hypercoil.nn.iirfilter"]], "interpolate: Interpolation layers": [[250, "module-hypercoil.nn.interpolate"]], "HybridInterpolate": [[251, "hybridinterpolate"]], "LinearInterpolate": [[252, "linearinterpolate"]], "SpectralInterpolate": [[253, "spectralinterpolate"]], "recombinator": [[254, "module-hypercoil.nn.recombinator"]], "Recombinator": [[255, "recombinator"]], "Residualise": [[256, "module-hypercoil.nn.resid.Residualise"]], "Parameters": [[256, "parameters"]], "BatchTangentProject": [[258, "batchtangentproject"]], "TangentProject": [[259, "tangentproject"]], "SPDNoise": [[260, "spdnoise"]], "SVM": [[261, "svm"]], "Sylo": [[263, "sylo"]], "SyloResNet": [[264, "syloresnet"]], "BasisConv2D": [[266, "basisconv2d"]], "PolyConv2D": [[267, "polyconv2d"]], "TimeSeriesConv2D": [[268, "timeseriesconv2d"]], "vertcom: Vertex compression": [[269, "module-hypercoil.nn.vertcom"]], "VerticalCompression": [[270, "verticalcompression"]], "WindowAmplifier": [[271, "windowamplifier"]], "Framework": [[272, "framework"]], "engine: Differentiable engine": [[273, "module-hypercoil.engine"]], "A first (real) example": [[274, "a-first-real-example"]], "Loading the dataset": [[274, "loading-the-dataset"]], "Defining the model": [[274, "defining-the-model"]], "Defining the loss function": [[274, "defining-the-loss-function"]], "Defining the forward pass": [[274, "defining-the-forward-pass"]], "Defining the optimisation loop": [[274, "defining-the-optimisation-loop"]], "Train the model": [[274, "train-the-model"]], "functional: Functions and functionals": [[275, "module-hypercoil.functional"]], "A differentiable program for mapping brain function": [[276, "a-differentiable-program-for-mapping-brain-function"]], "About": [[276, "about"]], "Remarks": [[276, "remarks"]], "Indices and tables": [[276, "indices-and-tables"]], "init: Initialisation schemes": [[277, "module-hypercoil.init"]], "Installation": [[278, "installation"]], "loss: Loss and regularisation": [[279, "module-hypercoil.loss"]], "API reference": [[280, "api-reference"]], "neuro: Neuroscience data utilities": [[281, "module-hypercoil.neuro"]], "nn: Neural network modules": [[282, "module-hypercoil.nn"]], "Technical overview": [[283, "technical-overview"]], "functional and nn: composable differentiable functionals": [[283, "functional-and-nn-composable-differentiable-functionals"]], "init: functional parameterisation": [[283, "init-functional-parameterisation"]], "loss: learning signals": [[283, "loss-learning-signals"]], "formula: functional grammar": [[283, "formula-functional-grammar"]], "viz: visualisation": [[283, "viz-visualisation"]], "A simple example": [[283, "a-simple-example"]], "Content redacted": [[284, "content-redacted"]]}, "indexentries": {"orient_and_conform() (in module hypercoil.engine.axisutil)": [[0, "hypercoil.engine.axisutil.orient_and_conform"]], "hypercoil.functional.activation": [[1, "module-hypercoil.functional.activation"]], "module": [[1, "module-hypercoil.functional.activation"], [6, "module-hypercoil.functional.cmass"], [11, "module-hypercoil.functional.connectopy"], [14, "module-hypercoil.functional.cov"], [24, "module-hypercoil.functional.fourier"], [34, "module-hypercoil.functional.graph"], [40, "module-hypercoil.functional.interpolate"], [45, "module-hypercoil.functional.kernel"], [56, "module-hypercoil.functional.matrix"], [71, "module-hypercoil.functional.semidefinite"], [78, "module-hypercoil.functional.sparse"], [99, "module-hypercoil.functional.sphere"], [106, "module-hypercoil.functional.sylo"], [107, "module-hypercoil.functional.symmap"], [112, "module-hypercoil.functional.tsconv"], [119, "module-hypercoil.functional.utils"], [127, "module-hypercoil.functional.window"], [133, "module-hypercoil.init.atlas"], [143, "module-hypercoil.init.atlasmixins"], [144, "module-hypercoil.init.base"], [152, "module-hypercoil.init.deltaplus"], [153, "module-hypercoil.init.dirichlet"], [154, "module-hypercoil.init.freqfilter"], [158, "module-hypercoil.init.iirfilter"], [159, "module-hypercoil.init.laplace"], [160, "module-hypercoil.init.mapparam"], [177, "module-hypercoil.init.mpbl"], [178, "module-hypercoil.init.semidefinite"], [181, "module-hypercoil.init.sylo"], [182, "module-hypercoil.init.toeplitz"], [224, "module-hypercoil.neuro.synth"], [231, "module-hypercoil.nn.activation"], [234, "module-hypercoil.nn.atlas"], [236, "module-hypercoil.nn.confound"], [240, "module-hypercoil.nn.cov"], [249, "module-hypercoil.nn.iirfilter"], [250, "module-hypercoil.nn.interpolate"], [254, "module-hypercoil.nn.recombinator"], [256, "module-hypercoil.nn.resid.Residualise"], [257, "module-hypercoil.nn.semidefinite"], [262, "module-hypercoil.nn.sylo"], [265, "module-hypercoil.nn.tsconv"], [269, "module-hypercoil.nn.vertcom"], [273, "module-hypercoil.engine"], [275, "module-hypercoil.functional"], [277, "module-hypercoil.init"], [279, "module-hypercoil.loss"], [281, "module-hypercoil.neuro"], [282, "module-hypercoil.nn"]], "amplitude_atanh() (in module hypercoil.functional.activation)": [[2, "hypercoil.functional.activation.amplitude_atanh"]], "amplitude_tanh() (in module hypercoil.functional.activation)": [[3, "hypercoil.functional.activation.amplitude_tanh"]], "corrnorm() (in module hypercoil.functional.activation)": [[4, "hypercoil.functional.activation.corrnorm"]], "isochor() (in module hypercoil.functional.activation)": [[5, "hypercoil.functional.activation.isochor"]], "hypercoil.functional.cmass": [[6, "module-hypercoil.functional.cmass"]], "cmass() (in module hypercoil.functional.cmass)": [[7, "hypercoil.functional.cmass.cmass"]], "cmass_coor() (in module hypercoil.functional.cmass)": [[8, "hypercoil.functional.cmass.cmass_coor"]], "cmass_reference_displacement() (in module hypercoil.functional.cmass)": [[9, "hypercoil.functional.cmass.cmass_reference_displacement"]], "cmass_reference_displacement_grid() (in module hypercoil.functional.cmass)": [[9, "hypercoil.functional.cmass.cmass_reference_displacement_grid"]], "diffuse() (in module hypercoil.functional.cmass)": [[10, "hypercoil.functional.cmass.diffuse"]], "hypercoil.functional.connectopy": [[11, "module-hypercoil.functional.connectopy"]], "diffusion_mapping() (in module hypercoil.functional.connectopy)": [[12, "hypercoil.functional.connectopy.diffusion_mapping"]], "laplacian_eigenmaps() (in module hypercoil.functional.connectopy)": [[13, "hypercoil.functional.connectopy.laplacian_eigenmaps"]], "hypercoil.functional.cov": [[14, "module-hypercoil.functional.cov"]], "conditionalcorr() (in module hypercoil.functional.cov)": [[15, "hypercoil.functional.cov.conditionalcorr"]], "conditionalcov() (in module hypercoil.functional.cov)": [[16, "hypercoil.functional.cov.conditionalcov"]], "corr() (in module hypercoil.functional.cov)": [[17, "hypercoil.functional.cov.corr"]], "cov() (in module hypercoil.functional.cov)": [[18, "hypercoil.functional.cov.cov"]], "pairedcorr() (in module hypercoil.functional.cov)": [[19, "hypercoil.functional.cov.pairedcorr"]], "pairedcov() (in module hypercoil.functional.cov)": [[20, "hypercoil.functional.cov.pairedcov"]], "partialcorr() (in module hypercoil.functional.cov)": [[21, "hypercoil.functional.cov.partialcorr"]], "partialcov() (in module hypercoil.functional.cov)": [[22, "hypercoil.functional.cov.partialcov"]], "precision() (in module hypercoil.functional.cov)": [[23, "hypercoil.functional.cov.precision"]], "hypercoil.functional.fourier": [[24, "module-hypercoil.functional.fourier"]], "analytic_signal() (in module hypercoil.functional.fourier)": [[25, "hypercoil.functional.fourier.analytic_signal"]], "env_inst() (in module hypercoil.functional.fourier)": [[26, "hypercoil.functional.fourier.env_inst"]], "envelope() (in module hypercoil.functional.fourier)": [[27, "hypercoil.functional.fourier.envelope"]], "hilbert_transform() (in module hypercoil.functional.fourier)": [[28, "hypercoil.functional.fourier.hilbert_transform"]], "instantaneous_frequency() (in module hypercoil.functional.fourier)": [[29, "hypercoil.functional.fourier.instantaneous_frequency"]], "instantaneous_phase() (in module hypercoil.functional.fourier)": [[30, "hypercoil.functional.fourier.instantaneous_phase"]], "product_filter() (in module hypercoil.functional.fourier)": [[31, "hypercoil.functional.fourier.product_filter"]], "product_filtfilt() (in module hypercoil.functional.fourier)": [[32, "hypercoil.functional.fourier.product_filtfilt"]], "unwrap() (in module hypercoil.functional.fourier)": [[33, "hypercoil.functional.fourier.unwrap"]], "hypercoil.functional.graph": [[34, "module-hypercoil.functional.graph"]], "coaffiliation() (in module hypercoil.functional.graph)": [[35, "hypercoil.functional.graph.coaffiliation"]], "girvan_newman_null() (in module hypercoil.functional.graph)": [[36, "hypercoil.functional.graph.girvan_newman_null"]], "graph_laplacian() (in module hypercoil.functional.graph)": [[37, "hypercoil.functional.graph.graph_laplacian"]], "modularity_matrix() (in module hypercoil.functional.graph)": [[38, "hypercoil.functional.graph.modularity_matrix"]], "relaxed_modularity() (in module hypercoil.functional.graph)": [[39, "hypercoil.functional.graph.relaxed_modularity"]], "hypercoil.functional.interpolate": [[40, "module-hypercoil.functional.interpolate"]], "hybrid_interpolate() (in module hypercoil.functional.interpolate)": [[41, "hypercoil.functional.interpolate.hybrid_interpolate"]], "linear_interpolate() (in module hypercoil.functional.interpolate)": [[42, "hypercoil.functional.interpolate.linear_interpolate"]], "spectral_interpolate() (in module hypercoil.functional.interpolate)": [[43, "hypercoil.functional.interpolate.spectral_interpolate"]], "weighted_interpolate() (in module hypercoil.functional.interpolate)": [[44, "hypercoil.functional.interpolate.weighted_interpolate"]], "hypercoil.functional.kernel": [[45, "module-hypercoil.functional.kernel"]], "corr_kernel() (in module hypercoil.functional.kernel)": [[46, "hypercoil.functional.kernel.corr_kernel"]], "cosine_kernel() (in module hypercoil.functional.kernel)": [[47, "hypercoil.functional.kernel.cosine_kernel"]], "cov_kernel() (in module hypercoil.functional.kernel)": [[48, "hypercoil.functional.kernel.cov_kernel"]], "gaussian_kernel() (in module hypercoil.functional.kernel)": [[49, "hypercoil.functional.kernel.gaussian_kernel"]], "linear_distance() (in module hypercoil.functional.kernel)": [[50, "hypercoil.functional.kernel.linear_distance"]], "linear_kernel() (in module hypercoil.functional.kernel)": [[51, "hypercoil.functional.kernel.linear_kernel"]], "param_norm() (in module hypercoil.functional.kernel)": [[52, "hypercoil.functional.kernel.param_norm"]], "polynomial_kernel() (in module hypercoil.functional.kernel)": [[53, "hypercoil.functional.kernel.polynomial_kernel"]], "rbf_kernel() (in module hypercoil.functional.kernel)": [[54, "hypercoil.functional.kernel.rbf_kernel"]], "sigmoid_kernel() (in module hypercoil.functional.kernel)": [[55, "hypercoil.functional.kernel.sigmoid_kernel"]], "hypercoil.functional.matrix": [[56, "module-hypercoil.functional.matrix"]], "cholesky_invert() (in module hypercoil.functional.matrix)": [[57, "hypercoil.functional.matrix.cholesky_invert"]], "delete_diagonal() (in module hypercoil.functional.matrix)": [[58, "hypercoil.functional.matrix.delete_diagonal"]], "diag_embed() (in module hypercoil.functional.matrix)": [[59, "hypercoil.functional.matrix.diag_embed"]], "expand_outer() (in module hypercoil.functional.matrix)": [[60, "hypercoil.functional.matrix.expand_outer"]], "fill_diagonal() (in module hypercoil.functional.matrix)": [[61, "hypercoil.functional.matrix.fill_diagonal"]], "recondition_eigenspaces() (in module hypercoil.functional.matrix)": [[62, "hypercoil.functional.matrix.recondition_eigenspaces"]], "spd() (in module hypercoil.functional.matrix)": [[63, "hypercoil.functional.matrix.spd"]], "squareform() (in module hypercoil.functional.matrix)": [[64, "hypercoil.functional.matrix.squareform"]], "sym2vec() (in module hypercoil.functional.matrix)": [[65, "hypercoil.functional.matrix.sym2vec"]], "symmetric() (in module hypercoil.functional.matrix)": [[66, "hypercoil.functional.matrix.symmetric"]], "toeplitz() (in module hypercoil.functional.matrix)": [[67, "hypercoil.functional.matrix.toeplitz"]], "toeplitz_2d() (in module hypercoil.functional.matrix)": [[68, "hypercoil.functional.matrix.toeplitz_2d"]], "vec2sym() (in module hypercoil.functional.matrix)": [[69, "hypercoil.functional.matrix.vec2sym"]], "residualise() (in module hypercoil.functional.resid)": [[70, "hypercoil.functional.resid.residualise"]], "hypercoil.functional.semidefinite": [[71, "module-hypercoil.functional.semidefinite"]], "cone_project_spd() (in module hypercoil.functional.semidefinite)": [[72, "hypercoil.functional.semidefinite.cone_project_spd"]], "mean_euc_spd() (in module hypercoil.functional.semidefinite)": [[73, "hypercoil.functional.semidefinite.mean_euc_spd"]], "mean_geom_spd() (in module hypercoil.functional.semidefinite)": [[74, "hypercoil.functional.semidefinite.mean_geom_spd"]], "mean_harm_spd() (in module hypercoil.functional.semidefinite)": [[75, "hypercoil.functional.semidefinite.mean_harm_spd"]], "mean_logeuc_spd() (in module hypercoil.functional.semidefinite)": [[76, "hypercoil.functional.semidefinite.mean_logeuc_spd"]], "tangent_project_spd() (in module hypercoil.functional.semidefinite)": [[77, "hypercoil.functional.semidefinite.tangent_project_spd"]], "hypercoil.functional.sparse": [[78, "module-hypercoil.functional.sparse"]], "as_topk() (in module hypercoil.functional.sparse)": [[79, "hypercoil.functional.sparse.as_topk"]], "block_serialise() (in module hypercoil.functional.sparse)": [[80, "hypercoil.functional.sparse.block_serialise"]], "dspdmm() (in module hypercoil.functional.sparse)": [[81, "hypercoil.functional.sparse.dspdmm"]], "full_as_topk() (in module hypercoil.functional.sparse)": [[82, "hypercoil.functional.sparse.full_as_topk"]], "random_sparse() (in module hypercoil.functional.sparse)": [[83, "hypercoil.functional.sparse.random_sparse"]], "select_indices() (in module hypercoil.functional.sparse)": [[84, "hypercoil.functional.sparse.select_indices"]], "sp_block_serialise() (in module hypercoil.functional.sparse)": [[85, "hypercoil.functional.sparse.sp_block_serialise"]], "sparse_astype() (in module hypercoil.functional.sparse)": [[86, "hypercoil.functional.sparse.sparse_astype"]], "spdiagmm() (in module hypercoil.functional.sparse)": [[87, "hypercoil.functional.sparse.spdiagmm"]], "splr_hadamard() (in module hypercoil.functional.sparse)": [[88, "hypercoil.functional.sparse.splr_hadamard"]], "spsp_innerpaired() (in module hypercoil.functional.sparse)": [[89, "hypercoil.functional.sparse.spsp_innerpaired"]], "spsp_pairdiff() (in module hypercoil.functional.sparse)": [[90, "hypercoil.functional.sparse.spsp_pairdiff"]], "spspmm() (in module hypercoil.functional.sparse)": [[91, "hypercoil.functional.sparse.spspmm"]], "spspmm_full() (in module hypercoil.functional.sparse)": [[92, "hypercoil.functional.sparse.spspmm_full"]], "topk() (in module hypercoil.functional.sparse)": [[93, "hypercoil.functional.sparse.topk"]], "topk_diagreplace() (in module hypercoil.functional.sparse)": [[94, "hypercoil.functional.sparse.topk_diagreplace"]], "topk_diagzero() (in module hypercoil.functional.sparse)": [[95, "hypercoil.functional.sparse.topk_diagzero"]], "topk_to_bcoo() (in module hypercoil.functional.sparse)": [[96, "hypercoil.functional.sparse.topk_to_bcoo"]], "topkx() (in module hypercoil.functional.sparse)": [[97, "hypercoil.functional.sparse.topkx"]], "trace_spspmm() (in module hypercoil.functional.sparse)": [[98, "hypercoil.functional.sparse.trace_spspmm"]], "hypercoil.functional.sphere": [[99, "module-hypercoil.functional.sphere"]], "euclidean_conv() (in module hypercoil.functional.sphere)": [[100, "hypercoil.functional.sphere.euclidean_conv"]], "spatial_conv() (in module hypercoil.functional.sphere)": [[101, "hypercoil.functional.sphere.spatial_conv"]], "sphere_to_latlong() (in module hypercoil.functional.sphere)": [[102, "hypercoil.functional.sphere.sphere_to_latlong"]], "sphere_to_normals() (in module hypercoil.functional.sphere)": [[103, "hypercoil.functional.sphere.sphere_to_normals"]], "spherical_conv() (in module hypercoil.functional.sphere)": [[104, "hypercoil.functional.sphere.spherical_conv"]], "spherical_geodesic() (in module hypercoil.functional.sphere)": [[105, "hypercoil.functional.sphere.spherical_geodesic"]], "hypercoil.functional.sylo": [[106, "module-hypercoil.functional.sylo"]], "sylo() (in module hypercoil.functional.sylo)": [[106, "hypercoil.functional.sylo.sylo"]], "hypercoil.functional.symmap": [[107, "module-hypercoil.functional.symmap"]], "symexp() (in module hypercoil.functional.symmap)": [[108, "hypercoil.functional.symmap.symexp"]], "symlog() (in module hypercoil.functional.symmap)": [[109, "hypercoil.functional.symmap.symlog"]], "symmap() (in module hypercoil.functional.symmap)": [[110, "hypercoil.functional.symmap.symmap"]], "symsqrt() (in module hypercoil.functional.symmap)": [[111, "hypercoil.functional.symmap.symsqrt"]], "hypercoil.functional.tsconv": [[112, "module-hypercoil.functional.tsconv"]], "basischan() (in module hypercoil.functional.tsconv)": [[113, "hypercoil.functional.tsconv.basischan"]], "basisconv2d() (in module hypercoil.functional.tsconv)": [[114, "hypercoil.functional.tsconv.basisconv2d"]], "conv() (in module hypercoil.functional.tsconv)": [[115, "hypercoil.functional.tsconv.conv"]], "polychan() (in module hypercoil.functional.tsconv)": [[116, "hypercoil.functional.tsconv.polychan"]], "polyconv2d() (in module hypercoil.functional.tsconv)": [[117, "hypercoil.functional.tsconv.polyconv2d"]], "tsconv2d() (in module hypercoil.functional.tsconv)": [[118, "hypercoil.functional.tsconv.tsconv2d"]], "hypercoil.functional.utils": [[119, "module-hypercoil.functional.utils"]], "amplitude_apply() (in module hypercoil.functional.utils)": [[120, "hypercoil.functional.utils.amplitude_apply"]], "apply_mask() (in module hypercoil.functional.utils)": [[121, "hypercoil.functional.utils.apply_mask"]], "complex_decompose() (in module hypercoil.functional.utils)": [[122, "hypercoil.functional.utils.complex_decompose"]], "complex_recompose() (in module hypercoil.functional.utils)": [[123, "hypercoil.functional.utils.complex_recompose"]], "conform_mask() (in module hypercoil.functional.utils)": [[124, "hypercoil.functional.utils.conform_mask"]], "mask_tensor() (in module hypercoil.functional.utils)": [[125, "hypercoil.functional.utils.mask_tensor"]], "vertical_compression() (in module hypercoil.functional.sylo)": [[126, "hypercoil.functional.sylo.vertical_compression"]], "hypercoil.functional.window": [[127, "module-hypercoil.functional.window"]], "sample_nonoverlapping_windows_existing_ax() (in module hypercoil.functional.window)": [[128, "hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax"]], "sample_nonoverlapping_windows_new_ax() (in module hypercoil.functional.window)": [[129, "hypercoil.functional.window.sample_nonoverlapping_windows_new_ax"]], "sample_overlapping_windows_existing_ax() (in module hypercoil.functional.window)": [[130, "hypercoil.functional.window.sample_overlapping_windows_existing_ax"]], "sample_overlapping_windows_new_ax() (in module hypercoil.functional.window)": [[131, "hypercoil.functional.window.sample_overlapping_windows_new_ax"]], "sample_windows() (in module hypercoil.functional.window)": [[132, "hypercoil.functional.window.sample_windows"]], "hypercoil.init.atlas": [[133, "module-hypercoil.init.atlas"]], "atlasinitialiser (class in hypercoil.init.atlas)": [[134, "hypercoil.init.atlas.AtlasInitialiser"]], "__call__() (hypercoil.init.atlas.atlasinitialiser method)": [[134, "hypercoil.init.atlas.AtlasInitialiser.__call__"]], "baseatlas (class in hypercoil.init.atlas)": [[135, "hypercoil.init.atlas.BaseAtlas"]], "__call__() (hypercoil.init.atlas.baseatlas method)": [[135, "hypercoil.init.atlas.BaseAtlas.__call__"]], "cortexsubcortexciftiatlas (class in hypercoil.init.atlas)": [[136, "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas"]], "__call__() (hypercoil.init.atlas.cortexsubcortexciftiatlas method)": [[136, "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.__call__"]], "to_image() (hypercoil.init.atlas.cortexsubcortexciftiatlas method)": [[136, "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.to_image"]], "dirichletinitbaseatlas (class in hypercoil.init.atlas)": [[137, "hypercoil.init.atlas.DirichletInitBaseAtlas"]], "__call__() (hypercoil.init.atlas.dirichletinitbaseatlas method)": [[137, "hypercoil.init.atlas.DirichletInitBaseAtlas.__call__"]], "dirichletinitsurfaceatlas (class in hypercoil.init.atlas)": [[138, "hypercoil.init.atlas.DirichletInitSurfaceAtlas"]], "__call__() (hypercoil.init.atlas.dirichletinitsurfaceatlas method)": [[138, "hypercoil.init.atlas.DirichletInitSurfaceAtlas.__call__"]], "to_image() (hypercoil.init.atlas.dirichletinitsurfaceatlas method)": [[138, "hypercoil.init.atlas.DirichletInitSurfaceAtlas.to_image"]], "dirichletinitvolumetricatlas (class in hypercoil.init.atlas)": [[139, "hypercoil.init.atlas.DirichletInitVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.dirichletinitvolumetricatlas method)": [[139, "hypercoil.init.atlas.DirichletInitVolumetricAtlas.__call__"]], "discretevolumetricatlas (class in hypercoil.init.atlas)": [[140, "hypercoil.init.atlas.DiscreteVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.discretevolumetricatlas method)": [[140, "hypercoil.init.atlas.DiscreteVolumetricAtlas.__call__"]], "multivolumetricatlas (class in hypercoil.init.atlas)": [[141, "hypercoil.init.atlas.MultiVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.multivolumetricatlas method)": [[141, "hypercoil.init.atlas.MultiVolumetricAtlas.__call__"]], "multifilevolumetricatlas (class in hypercoil.init.atlas)": [[142, "hypercoil.init.atlas.MultifileVolumetricAtlas"]], "__call__() (hypercoil.init.atlas.multifilevolumetricatlas method)": [[142, "hypercoil.init.atlas.MultifileVolumetricAtlas.__call__"]], "compartment (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.Compartment"]], "compartmentset (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.CompartmentSet"]], "mask (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.Mask"]], "reference (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins.Reference"]], "_ciftireferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CIfTIReferenceMixin"]], "_continuouslabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._ContinuousLabelMixin"]], "_cortexsubcortexcifticompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CortexSubcortexCIfTICompartmentMixin"]], "_cortexsubcortexciftimaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CortexSubcortexCIfTIMaskMixin"]], "_dirichletlabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._DirichletLabelMixin"]], "_discretelabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._DiscreteLabelMixin"]], "_evenlysampledconvmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._EvenlySampledConvMixin"]], "_fromnullmaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._FromNullMaskMixin"]], "_logicmaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._LogicMaskMixin"]], "_multicompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._MultiCompartmentMixin"]], "_phantomreferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._PhantomReferenceMixin"]], "_singlecompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SingleCompartmentMixin"]], "_spatialconvmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SpatialConvMixin"]], "_surfaceobjectreferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SurfaceObjectReferenceMixin"]], "_surfacesinglereferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SurfaceSingleReferenceMixin"]], "_vertexciftimeshmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VertexCIfTIMeshMixin"]], "_volumemultireferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumeMultiReferenceMixin"]], "_volumeobjectreferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumeObjectReferenceMixin"]], "_volumesinglereferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumeSingleReferenceMixin"]], "_volumetricmeshmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumetricMeshMixin"]], "hypercoil.init.atlasmixins": [[143, "module-hypercoil.init.atlasmixins"]], "hypercoil.init.base": [[144, "module-hypercoil.init.base"]], "constantinitialiser() (in module hypercoil.init.base)": [[145, "hypercoil.init.base.ConstantInitialiser"]], "distributioninitialiser() (in module hypercoil.init.base)": [[146, "hypercoil.init.base.DistributionInitialiser"]], "identityinitialiser (class in hypercoil.init.base)": [[147, "hypercoil.init.base.IdentityInitialiser"]], "mappedinitialiser (class in hypercoil.init.base)": [[148, "hypercoil.init.base.MappedInitialiser"]], "constant_init() (in module hypercoil.init.base)": [[149, "hypercoil.init.base.constant_init"]], "from_distr_init() (in module hypercoil.init.base)": [[150, "hypercoil.init.base.from_distr_init"]], "identity_init() (in module hypercoil.init.base)": [[151, "hypercoil.init.base.identity_init"]], "deltaplusinitialiser (class in hypercoil.init.deltaplus)": [[152, "hypercoil.init.deltaplus.DeltaPlusInitialiser"]], "deltaplus_init() (in module hypercoil.init.deltaplus)": [[152, "hypercoil.init.deltaplus.deltaplus_init"]], "hypercoil.init.deltaplus": [[152, "module-hypercoil.init.deltaplus"]], "dirichletinitialiser (class in hypercoil.init.dirichlet)": [[153, "hypercoil.init.dirichlet.DirichletInitialiser"]], "dirichlet_init() (in module hypercoil.init.dirichlet)": [[153, "hypercoil.init.dirichlet.dirichlet_init"]], "hypercoil.init.dirichlet": [[153, "module-hypercoil.init.dirichlet"]], "hypercoil.init.freqfilter": [[154, "module-hypercoil.init.freqfilter"]], "freqfilterspec (class in hypercoil.init.freqfilter)": [[155, "hypercoil.init.freqfilter.FreqFilterSpec"]], "get_clamps() (hypercoil.init.freqfilter.freqfilterspec method)": [[155, "hypercoil.init.freqfilter.FreqFilterSpec.get_clamps"]], "initialise_spectrum() (hypercoil.init.freqfilter.freqfilterspec method)": [[155, "hypercoil.init.freqfilter.FreqFilterSpec.initialise_spectrum"]], "clamp_init() (in module hypercoil.init.freqfilter)": [[156, "hypercoil.init.freqfilter.clamp_init"]], "freqfilter_init() (in module hypercoil.init.freqfilter)": [[157, "hypercoil.init.freqfilter.freqfilter_init"]], "iirfilterspec (class in hypercoil.init.iirfilter)": [[158, "hypercoil.init.iirfilter.IIRFilterSpec"]], "hypercoil.init.iirfilter": [[158, "module-hypercoil.init.iirfilter"]], "initialise_coefs() (hypercoil.init.iirfilter.iirfilterspec method)": [[158, "hypercoil.init.iirfilter.IIRFilterSpec.initialise_coefs"]], "laplaceinitialiser (class in hypercoil.init.laplace)": [[159, "hypercoil.init.laplace.LaplaceInitialiser"]], "hypercoil.init.laplace": [[159, "module-hypercoil.init.laplace"]], "laplace_init() (in module hypercoil.init.laplace)": [[159, "hypercoil.init.laplace.laplace_init"]], "hypercoil.init.mapparam": [[160, "module-hypercoil.init.mapparam"]], "affinemappedparameter (class in hypercoil.init.mapparam)": [[161, "hypercoil.init.mapparam.AffineMappedParameter"]], "amplitudeprobabilitysimplexparameter (class in hypercoil.init.mapparam)": [[162, "hypercoil.init.mapparam.AmplitudeProbabilitySimplexParameter"]], "amplitudetanhmappedparameter (class in hypercoil.init.mapparam)": [[163, "hypercoil.init.mapparam.AmplitudeTanhMappedParameter"]], "clip (class in hypercoil.init.mapparam)": [[164, "hypercoil.init.mapparam.Clip"]], "domainmappedparameter (class in hypercoil.init.mapparam)": [[165, "hypercoil.init.mapparam.DomainMappedParameter"]], "forcepositivedefinite (class in hypercoil.init.mapparam)": [[166, "hypercoil.init.mapparam.ForcePositiveDefinite"]], "identitymappedparameter (class in hypercoil.init.mapparam)": [[167, "hypercoil.init.mapparam.IdentityMappedParameter"]], "isochoricparameter (class in hypercoil.init.mapparam)": [[168, "hypercoil.init.mapparam.IsochoricParameter"]], "mappedlogits (class in hypercoil.init.mapparam)": [[169, "hypercoil.init.mapparam.MappedLogits"]], "mappedparameter (class in hypercoil.init.mapparam)": [[170, "hypercoil.init.mapparam.MappedParameter"]], "normsphereparameter (class in hypercoil.init.mapparam)": [[171, "hypercoil.init.mapparam.NormSphereParameter"]], "orthogonalparameter (class in hypercoil.init.mapparam)": [[172, "hypercoil.init.mapparam.OrthogonalParameter"]], "phaseamplitudemixin (class in hypercoil.init.mapparam)": [[173, "hypercoil.init.mapparam.PhaseAmplitudeMixin"]], "probabilitysimplexparameter (class in hypercoil.init.mapparam)": [[174, "hypercoil.init.mapparam.ProbabilitySimplexParameter"]], "renormalise (class in hypercoil.init.mapparam)": [[175, "hypercoil.init.mapparam.Renormalise"]], "tanhmappedparameter (class in hypercoil.init.mapparam)": [[176, "hypercoil.init.mapparam.TanhMappedParameter"]], "hypercoil.init.mpbl": [[177, "module-hypercoil.init.mpbl"]], "maximum_potential_bipartite_lattice() (in module hypercoil.init.mpbl)": [[177, "hypercoil.init.mpbl.maximum_potential_bipartite_lattice"]], "hypercoil.init.semidefinite": [[178, "module-hypercoil.init.semidefinite"]], "spdeuclideanmean (class in hypercoil.init.semidefinite)": [[179, "hypercoil.init.semidefinite.SPDEuclideanMean"]], "spdgeometricmean (class in hypercoil.init.semidefinite)": [[179, "hypercoil.init.semidefinite.SPDGeometricMean"]], "spdharmonicmean (class in hypercoil.init.semidefinite)": [[179, "hypercoil.init.semidefinite.SPDHarmonicMean"]], "spdlogeuclideanmean (class in hypercoil.init.semidefinite)": [[179, "hypercoil.init.semidefinite.SPDLogEuclideanMean"]], "tangencyinitialiser (class in hypercoil.init.semidefinite)": [[180, "hypercoil.init.semidefinite.TangencyInitialiser"]], "tangency_init() (in module hypercoil.init.semidefinite)": [[180, "hypercoil.init.semidefinite.tangency_init"]], "syloinitialiser (class in hypercoil.init.sylo)": [[181, "hypercoil.init.sylo.SyloInitialiser"]], "hypercoil.init.sylo": [[181, "module-hypercoil.init.sylo"]], "sylo_init() (in module hypercoil.init.sylo)": [[181, "hypercoil.init.sylo.sylo_init"]], "toeplitzinitialiser (class in hypercoil.init.toeplitz)": [[182, "hypercoil.init.toeplitz.ToeplitzInitialiser"]], "hypercoil.init.toeplitz": [[182, "module-hypercoil.init.toeplitz"]], "loss (class in hypercoil.loss)": [[183, "hypercoil.loss.Loss"]], "mseloss (class in hypercoil.loss)": [[184, "hypercoil.loss.MSELoss"]], "normedloss (class in hypercoil.loss)": [[185, "hypercoil.loss.NormedLoss"]], "parameterisedloss (class in hypercoil.loss)": [[186, "hypercoil.loss.ParameterisedLoss"]], "auto_tol() (in module hypercoil.loss)": [[187, "hypercoil.loss.auto_tol"]], "batchcorrelationloss (class in hypercoil.loss)": [[188, "hypercoil.loss.BatchCorrelationLoss"]], "batch_corr() (in module hypercoil.loss)": [[188, "hypercoil.loss.batch_corr"]], "bimodalsymmetricloss (class in hypercoil.loss)": [[189, "hypercoil.loss.BimodalSymmetricLoss"]], "bimodal_symmetric() (in module hypercoil.loss)": [[189, "hypercoil.loss.bimodal_symmetric"]], "bregmandivergencelogitloss (class in hypercoil.loss)": [[190, "hypercoil.loss.BregmanDivergenceLogitLoss"]], "bregmandivergenceloss (class in hypercoil.loss)": [[190, "hypercoil.loss.BregmanDivergenceLoss"]], "bregman_divergence() (in module hypercoil.loss)": [[190, "hypercoil.loss.bregman_divergence"]], "bregman_divergence_logit() (in module hypercoil.loss)": [[190, "hypercoil.loss.bregman_divergence_logit"]], "compactnessloss (class in hypercoil.loss)": [[191, "hypercoil.loss.CompactnessLoss"]], "compactness() (in module hypercoil.loss)": [[191, "hypercoil.loss.compactness"]], "connectopyloss (class in hypercoil.loss)": [[192, "hypercoil.loss.ConnectopyLoss"]], "connectopy() (in module hypercoil.loss)": [[192, "hypercoil.loss.connectopy"]], "constraintviolationloss (class in hypercoil.loss)": [[193, "hypercoil.loss.ConstraintViolationLoss"]], "constraint_violation() (in module hypercoil.loss)": [[193, "hypercoil.loss.constraint_violation"]], "gramdeterminantloss (class in hypercoil.loss)": [[194, "hypercoil.loss.GramDeterminantLoss"]], "det_gram() (in module hypercoil.loss)": [[194, "hypercoil.loss.det_gram"]], "difference() (in module hypercoil.loss)": [[195, "hypercoil.loss.difference"]], "dispersionloss (class in hypercoil.loss)": [[196, "hypercoil.loss.DispersionLoss"]], "dispersion() (in module hypercoil.loss)": [[196, "hypercoil.loss.dispersion"]], "entropylogitloss (class in hypercoil.loss)": [[197, "hypercoil.loss.EntropyLogitLoss"]], "entropyloss (class in hypercoil.loss)": [[197, "hypercoil.loss.EntropyLoss"]], "entropy() (in module hypercoil.loss)": [[197, "hypercoil.loss.entropy"]], "entropy_logit() (in module hypercoil.loss)": [[197, "hypercoil.loss.entropy_logit"]], "equilibriumlogitloss (class in hypercoil.loss)": [[198, "hypercoil.loss.EquilibriumLogitLoss"]], "equilibriumloss (class in hypercoil.loss)": [[198, "hypercoil.loss.EquilibriumLoss"]], "equilibrium() (in module hypercoil.loss)": [[198, "hypercoil.loss.equilibrium"]], "equilibrium_logit() (in module hypercoil.loss)": [[198, "hypercoil.loss.equilibrium_logit"]], "hingeloss (class in hypercoil.loss)": [[199, "hypercoil.loss.HingeLoss"]], "hinge_loss() (in module hypercoil.loss)": [[199, "hypercoil.loss.hinge_loss"]], "identity() (in module hypercoil.loss)": [[200, "hypercoil.loss.identity"]], "interhemispherictetherloss (class in hypercoil.loss)": [[201, "hypercoil.loss.InterhemisphericTetherLoss"]], "interhemispheric_tether() (in module hypercoil.loss)": [[201, "hypercoil.loss.interhemispheric_tether"]], "jsdivergencelogitloss (class in hypercoil.loss)": [[202, "hypercoil.loss.JSDivergenceLogitLoss"]], "jsdivergenceloss (class in hypercoil.loss)": [[202, "hypercoil.loss.JSDivergenceLoss"]], "js_divergence() (in module hypercoil.loss)": [[202, "hypercoil.loss.js_divergence"]], "js_divergence_logit() (in module hypercoil.loss)": [[202, "hypercoil.loss.js_divergence_logit"]], "kldivergencelogitloss (class in hypercoil.loss)": [[203, "hypercoil.loss.KLDivergenceLogitLoss"]], "kldivergenceloss (class in hypercoil.loss)": [[203, "hypercoil.loss.KLDivergenceLoss"]], "kl_divergence() (in module hypercoil.loss)": [[203, "hypercoil.loss.kl_divergence"]], "kl_divergence_logit() (in module hypercoil.loss)": [[203, "hypercoil.loss.kl_divergence_logit"]], "gramlogdeterminantloss (class in hypercoil.loss)": [[204, "hypercoil.loss.GramLogDeterminantLoss"]], "log_det_gram() (in module hypercoil.loss)": [[204, "hypercoil.loss.log_det_gram"]], "modularityloss (class in hypercoil.loss)": [[205, "hypercoil.loss.ModularityLoss"]], "modularity() (in module hypercoil.loss)": [[205, "hypercoil.loss.modularity"]], "multivariatekurtosis (class in hypercoil.loss)": [[206, "hypercoil.loss.MultivariateKurtosis"]], "multivariate_kurtosis() (in module hypercoil.loss)": [[206, "hypercoil.loss.multivariate_kurtosis"]], "qcfcloss (class in hypercoil.loss)": [[207, "hypercoil.loss.QCFCLoss"]], "qcfc() (in module hypercoil.loss)": [[207, "hypercoil.loss.qcfc"]], "referencetetherloss (class in hypercoil.loss)": [[208, "hypercoil.loss.ReferenceTetherLoss"]], "reference_tether() (in module hypercoil.loss)": [[208, "hypercoil.loss.reference_tether"]], "max_scalarise() (in module hypercoil.loss.scalarise)": [[209, "hypercoil.loss.scalarise.max_scalarise"]], "mean_scalarise() (in module hypercoil.loss.scalarise)": [[210, "hypercoil.loss.scalarise.mean_scalarise"]], "meansq_scalarise() (in module hypercoil.loss.scalarise)": [[211, "hypercoil.loss.scalarise.meansq_scalarise"]], "norm_scalarise() (in module hypercoil.loss.scalarise)": [[212, "hypercoil.loss.scalarise.norm_scalarise"]], "selfwmean_scalarise() (in module hypercoil.loss.scalarise)": [[213, "hypercoil.loss.scalarise.selfwmean_scalarise"]], "sum_scalarise() (in module hypercoil.loss.scalarise)": [[214, "hypercoil.loss.scalarise.sum_scalarise"]], "vnorm_scalarise() (in module hypercoil.loss.scalarise)": [[215, "hypercoil.loss.scalarise.vnorm_scalarise"]], "wmean() (in module hypercoil.loss.scalarise)": [[216, "hypercoil.loss.scalarise.wmean"]], "wmean_scalarise() (in module hypercoil.loss.scalarise)": [[217, "hypercoil.loss.scalarise.wmean_scalarise"]], "lossapply (class in hypercoil.loss.scheme)": [[218, "hypercoil.loss.scheme.LossApply"]], "lossscheme (class in hypercoil.loss.scheme)": [[219, "hypercoil.loss.scheme.LossScheme"]], "secondmomentcentredloss (class in hypercoil.loss)": [[220, "hypercoil.loss.SecondMomentCentredLoss"]], "secondmomentloss (class in hypercoil.loss)": [[220, "hypercoil.loss.SecondMomentLoss"]], "second_moment() (in module hypercoil.loss)": [[220, "hypercoil.loss.second_moment"]], "second_moment_centred() (in module hypercoil.loss)": [[220, "hypercoil.loss.second_moment_centred"]], "smoothnessloss (class in hypercoil.loss)": [[221, "hypercoil.loss.SmoothnessLoss"]], "smoothness() (in module hypercoil.loss)": [[221, "hypercoil.loss.smoothness"]], "unilateralloss (class in hypercoil.loss)": [[222, "hypercoil.loss.UnilateralLoss"]], "unilateral_loss() (in module hypercoil.loss)": [[222, "hypercoil.loss.unilateral_loss"]], "zero() (in module hypercoil.loss)": [[223, "hypercoil.loss.zero"]], "hypercoil.neuro.synth": [[224, "module-hypercoil.neuro.synth"]], "match_cov_and_spectrum() (in module hypercoil.neuro.synth)": [[225, "hypercoil.neuro.synth.match_cov_and_spectrum"]], "match_covariance() (in module hypercoil.neuro.synth)": [[226, "hypercoil.neuro.synth.match_covariance"]], "match_reference() (in module hypercoil.neuro.synth)": [[227, "hypercoil.neuro.synth.match_reference"]], "match_spectra() (in module hypercoil.neuro.synth)": [[228, "hypercoil.neuro.synth.match_spectra"]], "synthesise_from_cov_and_spectrum() (in module hypercoil.neuro.synth)": [[229, "hypercoil.neuro.synth.synthesise_from_cov_and_spectrum"]], "synthesise_matched() (in module hypercoil.neuro.synth)": [[230, "hypercoil.neuro.synth.synthesise_matched"]], "hypercoil.nn.activation": [[231, "module-hypercoil.nn.activation"]], "correlationnorm (class in hypercoil.nn.activation)": [[232, "hypercoil.nn.activation.CorrelationNorm"]], "isochor (class in hypercoil.nn.activation)": [[233, "hypercoil.nn.activation.Isochor"]], "hypercoil.nn.atlas": [[234, "module-hypercoil.nn.atlas"]], "atlaslinear (class in hypercoil.nn.atlas)": [[235, "hypercoil.nn.atlas.AtlasLinear"]], "hypercoil.nn.confound": [[236, "module-hypercoil.nn.confound"]], "eliminationselector (class in hypercoil.nn.confound)": [[237, "hypercoil.nn.confound.EliminationSelector"]], "linearcombinationselector (class in hypercoil.nn.confound)": [[238, "hypercoil.nn.confound.LinearCombinationSelector"]], "linearrfnn (class in hypercoil.nn.confound)": [[239, "hypercoil.nn.confound.LinearRFNN"]], "hypercoil.nn.cov": [[240, "module-hypercoil.nn.cov"]], "basecovariance (class in hypercoil.nn.cov)": [[241, "hypercoil.nn.cov.BaseCovariance"]], "binarycovariance (class in hypercoil.nn.cov)": [[242, "hypercoil.nn.cov.BinaryCovariance"]], "binarycovariancetw (class in hypercoil.nn.cov)": [[243, "hypercoil.nn.cov.BinaryCovarianceTW"]], "binarycovarianceuw (class in hypercoil.nn.cov)": [[244, "hypercoil.nn.cov.BinaryCovarianceUW"]], "unarycovariance (class in hypercoil.nn.cov)": [[245, "hypercoil.nn.cov.UnaryCovariance"]], "unarycovariancetw (class in hypercoil.nn.cov)": [[246, "hypercoil.nn.cov.UnaryCovarianceTW"]], "unarycovarianceuw (class in hypercoil.nn.cov)": [[247, "hypercoil.nn.cov.UnaryCovarianceUW"]], "frequencydomainfilter (class in hypercoil.nn.freqfilter)": [[248, "hypercoil.nn.freqfilter.FrequencyDomainFilter"]], "iirfiltfilt (class in hypercoil.nn.iirfilter)": [[249, "hypercoil.nn.iirfilter.IIRFiltFilt"]], "iirfilter (class in hypercoil.nn.iirfilter)": [[249, "hypercoil.nn.iirfilter.IIRFilter"]], "hypercoil.nn.iirfilter": [[249, "module-hypercoil.nn.iirfilter"]], "hypercoil.nn.interpolate": [[250, "module-hypercoil.nn.interpolate"]], "hybridinterpolate (class in hypercoil.nn.interpolate)": [[251, "hypercoil.nn.interpolate.HybridInterpolate"]], "linearinterpolate (class in hypercoil.nn.interpolate)": [[252, "hypercoil.nn.interpolate.LinearInterpolate"]], "spectralinterpolate (class in hypercoil.nn.interpolate)": [[253, "hypercoil.nn.interpolate.SpectralInterpolate"]], "hypercoil.nn.recombinator": [[254, "module-hypercoil.nn.recombinator"]], "recombinator() (in module hypercoil.nn.recombinator)": [[255, "hypercoil.nn.recombinator.Recombinator"]], "hypercoil.nn.resid.residualise": [[256, "module-hypercoil.nn.resid.Residualise"]], "hypercoil.nn.semidefinite": [[257, "module-hypercoil.nn.semidefinite"]], "batchtangentproject() (in module hypercoil.nn.semidefinite)": [[258, "hypercoil.nn.semidefinite.BatchTangentProject"]], "tangentproject() (in module hypercoil.nn.semidefinite)": [[259, "hypercoil.nn.semidefinite.TangentProject"]], "hypercoil.nn.sylo": [[262, "module-hypercoil.nn.sylo"]], "sylo (class in hypercoil.nn.sylo)": [[263, "hypercoil.nn.sylo.Sylo"]], "hypercoil.nn.tsconv": [[265, "module-hypercoil.nn.tsconv"]], "basisconv2d() (in module hypercoil.nn.tsconv)": [[266, "hypercoil.nn.tsconv.BasisConv2D"]], "polyconv2d() (in module hypercoil.nn.tsconv)": [[267, "hypercoil.nn.tsconv.PolyConv2D"]], "timeseriesconv2d() (in module hypercoil.nn.tsconv)": [[268, "hypercoil.nn.tsconv.TimeSeriesConv2D"]], "hypercoil.nn.vertcom": [[269, "module-hypercoil.nn.vertcom"]], "verticalcompression() (in module hypercoil.nn.vertcom)": [[270, "hypercoil.nn.vertcom.VerticalCompression"]], "windowamplifier (class in hypercoil.nn.window)": [[271, "hypercoil.nn.window.WindowAmplifier"]], "hypercoil.engine": [[273, "module-hypercoil.engine"]], "hypercoil.functional": [[275, "module-hypercoil.functional"]], "hypercoil.init": [[277, "module-hypercoil.init"]], "hypercoil.loss": [[279, "module-hypercoil.loss"]], "hypercoil.neuro": [[281, "module-hypercoil.neuro"]], "hypercoil.nn": [[282, "module-hypercoil.nn"]]}})