Search.setIndex({"docnames": ["api/hypercoil.engine.axisutil.orient_and_conform", "api/hypercoil.functional.activation", "api/hypercoil.functional.activation.amplitude_atanh", "api/hypercoil.functional.activation.amplitude_tanh", "api/hypercoil.functional.activation.corrnorm", "api/hypercoil.functional.activation.isochor", "api/hypercoil.functional.cmass", "api/hypercoil.functional.cmass.cmass", "api/hypercoil.functional.cmass.cmass_coor", "api/hypercoil.functional.cmass.cmass_reference", "api/hypercoil.functional.cmass.diffuse", "api/hypercoil.functional.connectopy", "api/hypercoil.functional.connectopy.diffusion_mapping", "api/hypercoil.functional.connectopy.laplacian_eigenmaps", "api/hypercoil.functional.cov", "api/hypercoil.functional.cov.conditionalcorr", "api/hypercoil.functional.cov.conditionalcov", "api/hypercoil.functional.cov.corr", "api/hypercoil.functional.cov.cov", "api/hypercoil.functional.cov.pairedcorr", "api/hypercoil.functional.cov.pairedcov", "api/hypercoil.functional.cov.partialcorr", "api/hypercoil.functional.cov.partialcov", "api/hypercoil.functional.cov.precision", "api/hypercoil.functional.fourier", "api/hypercoil.functional.fourier.analytic_signal", "api/hypercoil.functional.fourier.env_inst", "api/hypercoil.functional.fourier.envelope", "api/hypercoil.functional.fourier.hilbert_transform", "api/hypercoil.functional.fourier.instantaneous_frequency", "api/hypercoil.functional.fourier.instantaneous_phase", "api/hypercoil.functional.fourier.product_filter", "api/hypercoil.functional.fourier.product_filtfilt", "api/hypercoil.functional.fourier.unwrap", "api/hypercoil.functional.graph", "api/hypercoil.functional.graph.coaffiliation", "api/hypercoil.functional.graph.girvan_newman_null", "api/hypercoil.functional.graph.graph_laplacian", "api/hypercoil.functional.graph.modularity_matrix", "api/hypercoil.functional.graph.relaxed_modularity", "api/hypercoil.functional.interpolate", "api/hypercoil.functional.interpolate.hybrid_interpolate", "api/hypercoil.functional.interpolate.linear_interpolate", "api/hypercoil.functional.interpolate.spectral_interpolate", "api/hypercoil.functional.interpolate.weighted_interpolate", "api/hypercoil.functional.kernel", "api/hypercoil.functional.kernel.corr_kernel", "api/hypercoil.functional.kernel.cosine_kernel", "api/hypercoil.functional.kernel.cov_kernel", "api/hypercoil.functional.kernel.gaussian_kernel", "api/hypercoil.functional.kernel.linear_distance", "api/hypercoil.functional.kernel.linear_kernel", "api/hypercoil.functional.kernel.param_norm", "api/hypercoil.functional.kernel.polynomial_kernel", "api/hypercoil.functional.kernel.rbf_kernel", "api/hypercoil.functional.kernel.sigmoid_kernel", "api/hypercoil.functional.matrix", "api/hypercoil.functional.matrix.cholesky_invert", "api/hypercoil.functional.matrix.delete_diagonal", "api/hypercoil.functional.matrix.diag_embed", "api/hypercoil.functional.matrix.expand_outer", "api/hypercoil.functional.matrix.fill_diagonal", "api/hypercoil.functional.matrix.recondition_eigenspaces", "api/hypercoil.functional.matrix.spd", "api/hypercoil.functional.matrix.squareform", "api/hypercoil.functional.matrix.sym2vec", "api/hypercoil.functional.matrix.symmetric", "api/hypercoil.functional.matrix.toeplitz", "api/hypercoil.functional.matrix.toeplitz_2d", "api/hypercoil.functional.matrix.vec2sym", "api/hypercoil.functional.resid.residualise", "api/hypercoil.functional.semidefinite", "api/hypercoil.functional.semidefinite.cone_project_spd", "api/hypercoil.functional.semidefinite.mean_euc_spd", "api/hypercoil.functional.semidefinite.mean_geom_spd", "api/hypercoil.functional.semidefinite.mean_harm_spd", "api/hypercoil.functional.semidefinite.mean_logeuc_spd", "api/hypercoil.functional.semidefinite.tangent_project_spd", "api/hypercoil.functional.sparse", "api/hypercoil.functional.sparse.as_topk", "api/hypercoil.functional.sparse.block_serialise", "api/hypercoil.functional.sparse.dspdmm", "api/hypercoil.functional.sparse.full_as_topk", "api/hypercoil.functional.sparse.random_sparse", "api/hypercoil.functional.sparse.select_indices", "api/hypercoil.functional.sparse.sp_block_serialise", "api/hypercoil.functional.sparse.sparse_astype", "api/hypercoil.functional.sparse.spdiagmm", "api/hypercoil.functional.sparse.splr_hadamard", "api/hypercoil.functional.sparse.spsp_innerpaired", "api/hypercoil.functional.sparse.spsp_pairdiff", "api/hypercoil.functional.sparse.spspmm", "api/hypercoil.functional.sparse.spspmm_full", "api/hypercoil.functional.sparse.topk", "api/hypercoil.functional.sparse.topk_diagreplace", "api/hypercoil.functional.sparse.topk_diagzero", "api/hypercoil.functional.sparse.topk_to_bcoo", "api/hypercoil.functional.sparse.topkx", "api/hypercoil.functional.sparse.trace_spspmm", "api/hypercoil.functional.sphere", "api/hypercoil.functional.sphere.euclidean_conv", "api/hypercoil.functional.sphere.spatial_conv", "api/hypercoil.functional.sphere.sphere_to_latlong", "api/hypercoil.functional.sphere.sphere_to_normals", "api/hypercoil.functional.sphere.spherical_conv", "api/hypercoil.functional.sphere.spherical_geodesic", "api/hypercoil.functional.sylo", "api/hypercoil.functional.symmap", "api/hypercoil.functional.symmap.symexp", "api/hypercoil.functional.symmap.symlog", "api/hypercoil.functional.symmap.symmap", "api/hypercoil.functional.symmap.symsqrt", "api/hypercoil.functional.tsconv", "api/hypercoil.functional.tsconv.basischan", "api/hypercoil.functional.tsconv.basisconv2d", "api/hypercoil.functional.tsconv.conv", "api/hypercoil.functional.tsconv.polychan", "api/hypercoil.functional.tsconv.polyconv2d", "api/hypercoil.functional.tsconv.tsconv2d", "api/hypercoil.functional.utils", "api/hypercoil.functional.utils.amplitude_apply", "api/hypercoil.functional.utils.apply_mask", "api/hypercoil.functional.utils.complex_decompose", "api/hypercoil.functional.utils.complex_recompose", "api/hypercoil.functional.utils.conform_mask", "api/hypercoil.functional.utils.mask_tensor", "api/hypercoil.functional.vertcom.vertical_compression", "api/hypercoil.functional.window", "api/hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax", "api/hypercoil.functional.window.sample_nonoverlapping_windows_new_ax", "api/hypercoil.functional.window.sample_overlapping_windows_existing_ax", "api/hypercoil.functional.window.sample_overlapping_windows_new_ax", "api/hypercoil.functional.window.sample_windows", "api/hypercoil.init.atlas", "api/hypercoil.init.atlas.AtlasInit", "api/hypercoil.init.atlas.BaseAtlas", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas", "api/hypercoil.init.atlas.DirichletInitBaseAtlas", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas", "api/hypercoil.init.atlas.MultiVolumetricAtlas", "api/hypercoil.init.atlas.MultifileVolumetricAtlas", "api/hypercoil.init.atlasmixins", "api/hypercoil.init.base", "api/hypercoil.init.base.ConstantInitialiser", "api/hypercoil.init.base.DistributionInitialiser", "api/hypercoil.init.base.DomainInitialiser", "api/hypercoil.init.base.constant_init_", "api/hypercoil.init.base.from_distr_init_", "api/hypercoil.init.base.identity_init_", "api/hypercoil.init.deltaplus", "api/hypercoil.init.dirichlet", "api/hypercoil.init.domain", "api/hypercoil.init.domain.AmplitudeAtanh", "api/hypercoil.init.domain.AmplitudeMultiLogit", "api/hypercoil.init.domain.Atanh", "api/hypercoil.init.domain.Logit", "api/hypercoil.init.domain.MultiLogit", "api/hypercoil.init.domain.UnitNormSphere", "api/hypercoil.init.domainbase", "api/hypercoil.init.domainbase.Affine", "api/hypercoil.init.domainbase.Clip", "api/hypercoil.init.domainbase.Identity", "api/hypercoil.init.domainbase.Linear", "api/hypercoil.init.domainbase.Normalise", "api/hypercoil.init.domainbase._Domain", "api/hypercoil.init.domainbase._PhaseAmplitudeDomain", "api/hypercoil.init.freqfilter", "api/hypercoil.init.freqfilter.FreqFilterSpec", "api/hypercoil.init.freqfilter.clamp_init_", "api/hypercoil.init.freqfilter.freqfilter_init_", "api/hypercoil.init.iirfilter", "api/hypercoil.init.laplace", "api/hypercoil.init.masklogic", "api/hypercoil.init.mpbl", "api/hypercoil.init.semidefinite", "api/hypercoil.init.semidefinite.SemidefiniteMean", "api/hypercoil.init.semidefinite.TangencyInit", "api/hypercoil.init.sylo", "api/hypercoil.init.toeplitz", "api/hypercoil.loss.base.LossApply", "api/hypercoil.loss.base.ReducingLoss", "api/hypercoil.loss.batchcorr.BatchCorrelation", "api/hypercoil.loss.batchcorr.QCFC", "api/hypercoil.loss.batchcorr.auto_tol", "api/hypercoil.loss.cmass.Compactness", "api/hypercoil.loss.cmass.HemisphericTether", "api/hypercoil.loss.connectopy", "api/hypercoil.loss.determinant", "api/hypercoil.loss.dispersion.VectorDispersion", "api/hypercoil.loss.entropy", "api/hypercoil.loss.equilibrium", "api/hypercoil.loss.hinge.HingeLoss", "api/hypercoil.loss.jsdiv", "api/hypercoil.loss.modularity.ModularityLoss", "api/hypercoil.loss.mvkurtosis.MultivariateKurtosis", "api/hypercoil.loss.norm.ConstraintViolation", "api/hypercoil.loss.norm.NormedLoss", "api/hypercoil.loss.norm.UnilateralNormedLoss", "api/hypercoil.loss.scalarise.wmean", "api/hypercoil.loss.scheme.LossScheme", "api/hypercoil.loss.secondmoment", "api/hypercoil.loss.smoothness.SmoothnessPenalty", "api/hypercoil.loss.symbimodal", "api/hypercoil.neuro.synth", "api/hypercoil.neuro.synth.match_cov_and_spectrum", "api/hypercoil.neuro.synth.match_covariance", "api/hypercoil.neuro.synth.match_reference", "api/hypercoil.neuro.synth.match_spectra", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum", "api/hypercoil.neuro.synth.synthesise_matched", "api/hypercoil.nn.activation", "api/hypercoil.nn.activation.CorrelationNorm", "api/hypercoil.nn.activation.Isochor", "api/hypercoil.nn.atlas", "api/hypercoil.nn.atlas.AtlasLinear", "api/hypercoil.nn.confound", "api/hypercoil.nn.confound.EliminationSelector", "api/hypercoil.nn.confound.LinearCombinationSelector", "api/hypercoil.nn.confound.LinearRFNN", "api/hypercoil.nn.cov", "api/hypercoil.nn.cov.BaseCovariance", "api/hypercoil.nn.cov.BinaryCovariance", "api/hypercoil.nn.cov.BinaryCovarianceTW", "api/hypercoil.nn.cov.BinaryCovarianceUW", "api/hypercoil.nn.cov.UnaryCovariance", "api/hypercoil.nn.cov.UnaryCovarianceTW", "api/hypercoil.nn.cov.UnaryCovarianceUW", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter", "api/hypercoil.nn.iirfilter", "api/hypercoil.nn.interpolate", "api/hypercoil.nn.interpolate.HybridInterpolate", "api/hypercoil.nn.interpolate.LinearInterpolate", "api/hypercoil.nn.interpolate.SpectralInterpolate", "api/hypercoil.nn.recombinator", "api/hypercoil.nn.recombinator.Recombinator", "api/hypercoil.nn.resid.Residualise", "api/hypercoil.nn.semidefinite", "api/hypercoil.nn.semidefinite.BatchTangentProject", "api/hypercoil.nn.semidefinite.TangentProject", "api/hypercoil.nn.spdnoise.SPDNoise", "api/hypercoil.nn.svm.SVM", "api/hypercoil.nn.sylo", "api/hypercoil.nn.sylo.Sylo", "api/hypercoil.nn.sylo.SyloResNet", "api/hypercoil.nn.tsconv", "api/hypercoil.nn.tsconv.BasisConv2D", "api/hypercoil.nn.tsconv.PolyConv2D", "api/hypercoil.nn.tsconv.TimeSeriesConv2D", "api/hypercoil.nn.vertcom", "api/hypercoil.nn.vertcom.VerticalCompression", "api/hypercoil.nn.window.WindowAmplifier", "diffprog", "engine", "eval", "functional", "index", "init", "installation", "loss", "modules", "neuro", "nn", "overview", "portal", "viz"], "filenames": ["api/hypercoil.engine.axisutil.orient_and_conform.rst", "api/hypercoil.functional.activation.rst", "api/hypercoil.functional.activation.amplitude_atanh.rst", "api/hypercoil.functional.activation.amplitude_tanh.rst", "api/hypercoil.functional.activation.corrnorm.rst", "api/hypercoil.functional.activation.isochor.rst", "api/hypercoil.functional.cmass.rst", "api/hypercoil.functional.cmass.cmass.rst", "api/hypercoil.functional.cmass.cmass_coor.rst", "api/hypercoil.functional.cmass.cmass_reference.rst", "api/hypercoil.functional.cmass.diffuse.rst", "api/hypercoil.functional.connectopy.rst", "api/hypercoil.functional.connectopy.diffusion_mapping.rst", "api/hypercoil.functional.connectopy.laplacian_eigenmaps.rst", "api/hypercoil.functional.cov.rst", "api/hypercoil.functional.cov.conditionalcorr.rst", "api/hypercoil.functional.cov.conditionalcov.rst", "api/hypercoil.functional.cov.corr.rst", "api/hypercoil.functional.cov.cov.rst", "api/hypercoil.functional.cov.pairedcorr.rst", "api/hypercoil.functional.cov.pairedcov.rst", "api/hypercoil.functional.cov.partialcorr.rst", "api/hypercoil.functional.cov.partialcov.rst", "api/hypercoil.functional.cov.precision.rst", "api/hypercoil.functional.fourier.rst", "api/hypercoil.functional.fourier.analytic_signal.rst", "api/hypercoil.functional.fourier.env_inst.rst", "api/hypercoil.functional.fourier.envelope.rst", "api/hypercoil.functional.fourier.hilbert_transform.rst", "api/hypercoil.functional.fourier.instantaneous_frequency.rst", "api/hypercoil.functional.fourier.instantaneous_phase.rst", "api/hypercoil.functional.fourier.product_filter.rst", "api/hypercoil.functional.fourier.product_filtfilt.rst", "api/hypercoil.functional.fourier.unwrap.rst", "api/hypercoil.functional.graph.rst", "api/hypercoil.functional.graph.coaffiliation.rst", "api/hypercoil.functional.graph.girvan_newman_null.rst", "api/hypercoil.functional.graph.graph_laplacian.rst", "api/hypercoil.functional.graph.modularity_matrix.rst", "api/hypercoil.functional.graph.relaxed_modularity.rst", "api/hypercoil.functional.interpolate.rst", "api/hypercoil.functional.interpolate.hybrid_interpolate.rst", "api/hypercoil.functional.interpolate.linear_interpolate.rst", "api/hypercoil.functional.interpolate.spectral_interpolate.rst", "api/hypercoil.functional.interpolate.weighted_interpolate.rst", "api/hypercoil.functional.kernel.rst", "api/hypercoil.functional.kernel.corr_kernel.rst", "api/hypercoil.functional.kernel.cosine_kernel.rst", "api/hypercoil.functional.kernel.cov_kernel.rst", "api/hypercoil.functional.kernel.gaussian_kernel.rst", "api/hypercoil.functional.kernel.linear_distance.rst", "api/hypercoil.functional.kernel.linear_kernel.rst", "api/hypercoil.functional.kernel.param_norm.rst", "api/hypercoil.functional.kernel.polynomial_kernel.rst", "api/hypercoil.functional.kernel.rbf_kernel.rst", "api/hypercoil.functional.kernel.sigmoid_kernel.rst", "api/hypercoil.functional.matrix.rst", "api/hypercoil.functional.matrix.cholesky_invert.rst", "api/hypercoil.functional.matrix.delete_diagonal.rst", "api/hypercoil.functional.matrix.diag_embed.rst", "api/hypercoil.functional.matrix.expand_outer.rst", "api/hypercoil.functional.matrix.fill_diagonal.rst", "api/hypercoil.functional.matrix.recondition_eigenspaces.rst", "api/hypercoil.functional.matrix.spd.rst", "api/hypercoil.functional.matrix.squareform.rst", "api/hypercoil.functional.matrix.sym2vec.rst", "api/hypercoil.functional.matrix.symmetric.rst", "api/hypercoil.functional.matrix.toeplitz.rst", "api/hypercoil.functional.matrix.toeplitz_2d.rst", "api/hypercoil.functional.matrix.vec2sym.rst", "api/hypercoil.functional.resid.residualise.rst", "api/hypercoil.functional.semidefinite.rst", "api/hypercoil.functional.semidefinite.cone_project_spd.rst", "api/hypercoil.functional.semidefinite.mean_euc_spd.rst", "api/hypercoil.functional.semidefinite.mean_geom_spd.rst", "api/hypercoil.functional.semidefinite.mean_harm_spd.rst", "api/hypercoil.functional.semidefinite.mean_logeuc_spd.rst", "api/hypercoil.functional.semidefinite.tangent_project_spd.rst", "api/hypercoil.functional.sparse.rst", "api/hypercoil.functional.sparse.as_topk.rst", "api/hypercoil.functional.sparse.block_serialise.rst", "api/hypercoil.functional.sparse.dspdmm.rst", "api/hypercoil.functional.sparse.full_as_topk.rst", "api/hypercoil.functional.sparse.random_sparse.rst", "api/hypercoil.functional.sparse.select_indices.rst", "api/hypercoil.functional.sparse.sp_block_serialise.rst", "api/hypercoil.functional.sparse.sparse_astype.rst", "api/hypercoil.functional.sparse.spdiagmm.rst", "api/hypercoil.functional.sparse.splr_hadamard.rst", "api/hypercoil.functional.sparse.spsp_innerpaired.rst", "api/hypercoil.functional.sparse.spsp_pairdiff.rst", "api/hypercoil.functional.sparse.spspmm.rst", "api/hypercoil.functional.sparse.spspmm_full.rst", "api/hypercoil.functional.sparse.topk.rst", "api/hypercoil.functional.sparse.topk_diagreplace.rst", "api/hypercoil.functional.sparse.topk_diagzero.rst", "api/hypercoil.functional.sparse.topk_to_bcoo.rst", "api/hypercoil.functional.sparse.topkx.rst", "api/hypercoil.functional.sparse.trace_spspmm.rst", "api/hypercoil.functional.sphere.rst", "api/hypercoil.functional.sphere.euclidean_conv.rst", "api/hypercoil.functional.sphere.spatial_conv.rst", "api/hypercoil.functional.sphere.sphere_to_latlong.rst", "api/hypercoil.functional.sphere.sphere_to_normals.rst", "api/hypercoil.functional.sphere.spherical_conv.rst", "api/hypercoil.functional.sphere.spherical_geodesic.rst", "api/hypercoil.functional.sylo.rst", "api/hypercoil.functional.symmap.rst", "api/hypercoil.functional.symmap.symexp.rst", "api/hypercoil.functional.symmap.symlog.rst", "api/hypercoil.functional.symmap.symmap.rst", "api/hypercoil.functional.symmap.symsqrt.rst", "api/hypercoil.functional.tsconv.rst", "api/hypercoil.functional.tsconv.basischan.rst", "api/hypercoil.functional.tsconv.basisconv2d.rst", "api/hypercoil.functional.tsconv.conv.rst", "api/hypercoil.functional.tsconv.polychan.rst", "api/hypercoil.functional.tsconv.polyconv2d.rst", "api/hypercoil.functional.tsconv.tsconv2d.rst", "api/hypercoil.functional.utils.rst", "api/hypercoil.functional.utils.amplitude_apply.rst", "api/hypercoil.functional.utils.apply_mask.rst", "api/hypercoil.functional.utils.complex_decompose.rst", "api/hypercoil.functional.utils.complex_recompose.rst", "api/hypercoil.functional.utils.conform_mask.rst", "api/hypercoil.functional.utils.mask_tensor.rst", "api/hypercoil.functional.vertcom.vertical_compression.rst", "api/hypercoil.functional.window.rst", "api/hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax.rst", "api/hypercoil.functional.window.sample_nonoverlapping_windows_new_ax.rst", "api/hypercoil.functional.window.sample_overlapping_windows_existing_ax.rst", "api/hypercoil.functional.window.sample_overlapping_windows_new_ax.rst", "api/hypercoil.functional.window.sample_windows.rst", "api/hypercoil.init.atlas.rst", "api/hypercoil.init.atlas.AtlasInit.rst", "api/hypercoil.init.atlas.BaseAtlas.rst", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.rst", "api/hypercoil.init.atlas.DirichletInitBaseAtlas.rst", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas.rst", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas.rst", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultiVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultifileVolumetricAtlas.rst", "api/hypercoil.init.atlasmixins.rst", "api/hypercoil.init.base.rst", "api/hypercoil.init.base.ConstantInitialiser.rst", "api/hypercoil.init.base.DistributionInitialiser.rst", "api/hypercoil.init.base.DomainInitialiser.rst", "api/hypercoil.init.base.constant_init_.rst", "api/hypercoil.init.base.from_distr_init_.rst", "api/hypercoil.init.base.identity_init_.rst", "api/hypercoil.init.deltaplus.rst", "api/hypercoil.init.dirichlet.rst", "api/hypercoil.init.domain.rst", "api/hypercoil.init.domain.AmplitudeAtanh.rst", "api/hypercoil.init.domain.AmplitudeMultiLogit.rst", "api/hypercoil.init.domain.Atanh.rst", "api/hypercoil.init.domain.Logit.rst", "api/hypercoil.init.domain.MultiLogit.rst", "api/hypercoil.init.domain.UnitNormSphere.rst", "api/hypercoil.init.domainbase.rst", "api/hypercoil.init.domainbase.Affine.rst", "api/hypercoil.init.domainbase.Clip.rst", "api/hypercoil.init.domainbase.Identity.rst", "api/hypercoil.init.domainbase.Linear.rst", "api/hypercoil.init.domainbase.Normalise.rst", "api/hypercoil.init.domainbase._Domain.rst", "api/hypercoil.init.domainbase._PhaseAmplitudeDomain.rst", "api/hypercoil.init.freqfilter.rst", "api/hypercoil.init.freqfilter.FreqFilterSpec.rst", "api/hypercoil.init.freqfilter.clamp_init_.rst", "api/hypercoil.init.freqfilter.freqfilter_init_.rst", "api/hypercoil.init.iirfilter.rst", "api/hypercoil.init.laplace.rst", "api/hypercoil.init.masklogic.rst", "api/hypercoil.init.mpbl.rst", "api/hypercoil.init.semidefinite.rst", "api/hypercoil.init.semidefinite.SemidefiniteMean.rst", "api/hypercoil.init.semidefinite.TangencyInit.rst", "api/hypercoil.init.sylo.rst", "api/hypercoil.init.toeplitz.rst", "api/hypercoil.loss.base.LossApply.rst", "api/hypercoil.loss.base.ReducingLoss.rst", "api/hypercoil.loss.batchcorr.BatchCorrelation.rst", "api/hypercoil.loss.batchcorr.QCFC.rst", "api/hypercoil.loss.batchcorr.auto_tol.rst", "api/hypercoil.loss.cmass.Compactness.rst", "api/hypercoil.loss.cmass.HemisphericTether.rst", "api/hypercoil.loss.connectopy.rst", "api/hypercoil.loss.determinant.rst", "api/hypercoil.loss.dispersion.VectorDispersion.rst", "api/hypercoil.loss.entropy.rst", "api/hypercoil.loss.equilibrium.rst", "api/hypercoil.loss.hinge.HingeLoss.rst", "api/hypercoil.loss.jsdiv.rst", "api/hypercoil.loss.modularity.ModularityLoss.rst", "api/hypercoil.loss.mvkurtosis.MultivariateKurtosis.rst", "api/hypercoil.loss.norm.ConstraintViolation.rst", "api/hypercoil.loss.norm.NormedLoss.rst", "api/hypercoil.loss.norm.UnilateralNormedLoss.rst", "api/hypercoil.loss.scalarise.wmean.rst", "api/hypercoil.loss.scheme.LossScheme.rst", "api/hypercoil.loss.secondmoment.rst", "api/hypercoil.loss.smoothness.SmoothnessPenalty.rst", "api/hypercoil.loss.symbimodal.rst", "api/hypercoil.neuro.synth.rst", "api/hypercoil.neuro.synth.match_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.match_covariance.rst", "api/hypercoil.neuro.synth.match_reference.rst", "api/hypercoil.neuro.synth.match_spectra.rst", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.synthesise_matched.rst", "api/hypercoil.nn.activation.rst", "api/hypercoil.nn.activation.CorrelationNorm.rst", "api/hypercoil.nn.activation.Isochor.rst", "api/hypercoil.nn.atlas.rst", "api/hypercoil.nn.atlas.AtlasLinear.rst", "api/hypercoil.nn.confound.rst", "api/hypercoil.nn.confound.EliminationSelector.rst", "api/hypercoil.nn.confound.LinearCombinationSelector.rst", "api/hypercoil.nn.confound.LinearRFNN.rst", "api/hypercoil.nn.cov.rst", "api/hypercoil.nn.cov.BaseCovariance.rst", "api/hypercoil.nn.cov.BinaryCovariance.rst", "api/hypercoil.nn.cov.BinaryCovarianceTW.rst", "api/hypercoil.nn.cov.BinaryCovarianceUW.rst", "api/hypercoil.nn.cov.UnaryCovariance.rst", "api/hypercoil.nn.cov.UnaryCovarianceTW.rst", "api/hypercoil.nn.cov.UnaryCovarianceUW.rst", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter.rst", "api/hypercoil.nn.iirfilter.rst", "api/hypercoil.nn.interpolate.rst", "api/hypercoil.nn.interpolate.HybridInterpolate.rst", "api/hypercoil.nn.interpolate.LinearInterpolate.rst", "api/hypercoil.nn.interpolate.SpectralInterpolate.rst", "api/hypercoil.nn.recombinator.rst", "api/hypercoil.nn.recombinator.Recombinator.rst", "api/hypercoil.nn.resid.Residualise.rst", "api/hypercoil.nn.semidefinite.rst", "api/hypercoil.nn.semidefinite.BatchTangentProject.rst", "api/hypercoil.nn.semidefinite.TangentProject.rst", "api/hypercoil.nn.spdnoise.SPDNoise.rst", "api/hypercoil.nn.svm.SVM.rst", "api/hypercoil.nn.sylo.rst", "api/hypercoil.nn.sylo.Sylo.rst", "api/hypercoil.nn.sylo.SyloResNet.rst", "api/hypercoil.nn.tsconv.rst", "api/hypercoil.nn.tsconv.BasisConv2D.rst", "api/hypercoil.nn.tsconv.PolyConv2D.rst", "api/hypercoil.nn.tsconv.TimeSeriesConv2D.rst", "api/hypercoil.nn.vertcom.rst", "api/hypercoil.nn.vertcom.VerticalCompression.rst", "api/hypercoil.nn.window.WindowAmplifier.rst", "diffprog.rst", "engine.rst", "eval.rst", "functional.rst", "index.rst", "init.rst", "installation.rst", "loss.rst", "modules.rst", "neuro.rst", "nn.rst", "overview.rst", "portal.rst", "viz.rst"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">orient_and_conform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_tanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corrnorm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">isochor</span></code>: PSD normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass, array coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass_coor</span></code>: Centre of mass, any coordinates", "Displacement from a reference centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffuse</span></code>: Diffuseness around centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">connectopy</span></code>: Connectopic manifolds", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffusion_mapping</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplacian_eigenmaps</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariances and correlations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcorr</span></code>: Conditional correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcov</span></code>: Conditional covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr</span></code>: Pearson correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcorr</span></code>: Paired correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcov</span></code>: Paired covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcorr</span></code>: Partial correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcov</span></code>: Partial covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">precision</span></code>: Inverse covariance (precision)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fourier</span></code>: Frequency-domain filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">analytic_signal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">env_inst</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">envelope</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hilbert_transform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantaneous_frequency</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">instantaneous_phase</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filtfilt</span></code>: Zero-phase filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">unwrap</span></code>: Unwrap phase", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph</span></code>: Graphs and networks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coaffiliation</span></code>: Community coaffiliation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">girvan_newman_null</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph_laplacian</span></code>: Graph Laplacian", "<code class=\"docutils literal notranslate\"><span class=\"pre\">modularity_matrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">relaxed_modularity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation and imputation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hybrid_interpolate</span></code>: Linear + spectral interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_interpolate</span></code>: Linear interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spectral_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">weighted_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">kernel</span></code>: Parameterised kernels", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cosine_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">gaussian_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_distance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">linear_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">param_norm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polynomial_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">rbf_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sigmoid_kernel</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">matrix</span></code>: Matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">invert_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">delete_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diag_embed</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_outer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fill_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recondition_eigenspaces</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">squareform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sym2vec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmetric</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz_2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vec2sym</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>: Positive semidefinite cone", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cone_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_euc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_geom_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_harm_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_logeuc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tangent_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sparse</span></code>: Sparse matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">as_topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">block_serialise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dspdmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">full_as_topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">random_sparse</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">select_indices</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sp_block_serialise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sparse_astype</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spdiagmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">splr_hadamard</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spsp_innerpaired</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spsp_pairdiff</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spspmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spspmm_full</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diagreplace</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk_diagzero</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topk_to_bcoo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">topkx</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">trace_spspmm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code>: Spherical coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">euclidean_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spatial_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_latlong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_normals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_geodesic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>: Sylo function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>: Symmetric matrix maps", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symexp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symlog</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symsqrt</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basischan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basisconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polychan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polyconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">utils</span></code>: Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_apply</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apply_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_decompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_recompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conform_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mask_tensor</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertical_compression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">window</span></code>: Random windowing", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_nonoverlapping_windows_existing_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_nonoverlapping_windows_new_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_overlapping_windows_existing_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_overlapping_windows_new_ax</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sample_windows</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas initialisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasInit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CortexSubcortexCIfTIAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitBaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitSurfaceAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DiscreteVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultifileVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlasmixins</span></code>: Atlas mixins", "<code class=\"docutils literal notranslate\"><span class=\"pre\">base</span></code>: Base initialisations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DistributionInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DomainInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constant_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">from_distr_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">identity_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deltaplus</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dirichlet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domain</span></code>: Domain mappers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeAtanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeMultiLogit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Logit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiLogit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnitNormSphere</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domainbase</span></code>: Domain mapper base classes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Affine</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Clip</span></code>: OOD handler", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Identity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Linear</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Normalise</span></code>: OOD handler", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_Domain</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_PhaseAmplitudeDomain</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency band init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">FreqFilterSpec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">clamp_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplace</span></code>", "Mask logic", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mpbl</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SemidefiniteMean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangencyInit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossApply</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducingLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchCorrelation</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">QCFC</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto_tol</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Compactness</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HemisphericTether</span></code>", "Connectopy loss functional", "<code class=\"docutils literal notranslate\"><span class=\"pre\">determinant</span></code>: Log determinant-based losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VectorDispersion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Entropy</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxEntropy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Equilibrium</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxEquilibrium</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HingeLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">JSDivergence</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxJSDivergence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ModularityLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultivariateKurtosis</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ConstraintViolation</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NormedLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnilateralNormedLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wmean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossScheme</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">secondmoment</span></code>: Second moment-based losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmoothnessPenalty</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SymmetricBimodal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synth</span></code>: Data synthesis", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_covariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_reference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_spectra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_from_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_matched</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions as modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CorrelationNorm</span></code>: Correlation normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Isochor</span></code>: Isochoric normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasLinear</span></code>: Linear atlas layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">confound</span></code>: Confound Models", "<code class=\"docutils literal notranslate\"><span class=\"pre\">EliminationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearCombinationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearRFNN</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseCovariance</span></code>: Covariance base class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency-domain filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HybridInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SpectralInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchTangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SPDNoise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SVM</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SyloResNet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BasisConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">PolyConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TimeSeriesConv2D</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertcom</span></code>: Vertex compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VerticalCompression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">WindowAmplifier</span></code>", "Framework", "<code class=\"docutils literal notranslate\"><span class=\"pre\">engine</span></code>: Differentiable engine", "<code class=\"docutils literal notranslate\"><span class=\"pre\">eval</span></code>: Benchmarks and evaluation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">functional</span></code>: Functions and functionals", "A differentiable program for mapping brain function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">init</span></code>: Initialisation schemes", "Installation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">loss</span></code>: Loss and regularisation", "API reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">neuro</span></code>: Neuroscience data utilities", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nn</span></code>: Neural network modules", "Technical overview", "Poster landing page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">viz</span></code>: Visualisation"], "terms": {"addit": [1, 4, 5, 27, 29, 30, 31, 32, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 67, 72, 74, 76, 77, 97, 109, 110, 111, 114, 117, 143], "neural": [1, 256, 257, 261, 264], "network": [1, 39, 256, 257, 261, 264], "layer": [1, 106, 261, 263, 264], "amplitude_tanh": [1, 256], "amplitude_atanh": [1, 256], "corrnorm": [1, 256], "isochor": [1, 212, 256, 263], "psd": [1, 256], "normalis": [1, 4, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 160, 212, 256, 258, 263], "hypercoil": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 143, 145, 146, 256, 257, 259, 264], "function": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 143, 260, 261, 263, 265], "activ": [2, 3, 4, 5, 256, 261, 263, 264], "input": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 81, 84, 88, 95, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 122, 123, 126, 128, 129, 130, 131, 143, 264], "union": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131], "devicearraybas": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131], "ndarrai": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 96, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131], "sourc": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 143, 145, 146], "invers": [2, 14, 15, 17, 18, 19, 20, 21, 22, 47, 49, 54, 72, 75, 76, 77, 256], "hyperbol": [2, 3], "tangent": [2, 3, 71, 72, 74, 77, 264], "arctang": 2, "appli": [2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 41, 110, 114, 117, 118, 120, 124], "amplitud": [2, 3, 32, 120, 122, 123, 264], "onli": [2, 3, 19, 20, 68, 82, 84, 91, 97, 98, 102, 103, 105, 121], "The": [2, 3, 5, 7, 10, 12, 15, 16, 17, 19, 20, 21, 22, 23, 25, 31, 32, 33, 35, 36, 37, 38, 39, 41, 44, 47, 49, 51, 52, 53, 54, 55, 60, 63, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 78, 84, 87, 89, 97, 98, 101, 104, 106, 114, 115, 117, 123, 128, 129, 130, 131, 143, 257, 264], "absolut": [2, 3, 63, 264], "valu": [2, 3, 7, 12, 15, 17, 18, 19, 20, 21, 22, 23, 31, 33, 35, 38, 39, 41, 42, 43, 44, 62, 63, 67, 68, 84, 97, 98, 101, 102, 103, 110, 122, 123, 143, 145, 264], "i": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 97, 98, 101, 102, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 121, 122, 123, 124, 126, 132, 143, 257, 259, 264, 265], "transform": [2, 3, 24, 25, 26, 27, 28, 29, 30, 41, 43, 72, 74, 76, 77, 85, 97, 106, 108, 109, 110, 111, 113, 114, 117, 264], "accord": [2, 3, 7, 15, 17, 19, 31, 32, 41, 60, 84, 97, 98, 106], "mathrm": [2, 3, 4, 62, 114, 117, 118], "arctanh": 2, "x": [2, 3, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 66, 70, 72, 74, 75, 76, 77, 81, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 264], "while": [2, 3, 15, 17, 18, 19, 20, 21, 22, 23, 35, 38, 39, 41, 42, 43, 44, 89, 114, 117], "phase": [2, 3, 24, 25, 26, 27, 29, 30, 31, 122, 123, 256], "complex": [2, 3, 25, 120, 122, 123, 257], "argument": [2, 3, 4, 6, 32, 43, 44, 67, 72, 77, 80, 89, 97, 143, 145], "preserv": [2, 3, 106], "thi": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 49, 51, 52, 53, 54, 55, 60, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 82, 84, 86, 89, 91, 92, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 117, 118, 121, 124, 126, 132, 143, 257, 264, 265], "map": [2, 3, 4, 11, 12, 35, 39, 78, 101, 106, 110, 113, 114, 116, 143, 256, 261, 264], "open": [2, 3, 264], "unit": [2, 3], "disc": [2, 3], "plane": [2, 3, 25], "entir": [2, 91, 143], "origin": [2, 3, 5, 31, 32, 41, 42, 43, 44, 72, 74, 76, 77, 80, 102, 109, 110, 111], "itself": [2, 3, 46, 47, 48, 49, 50, 51, 53, 54, 55, 106], "circumfer": [2, 3], "infin": 2, "dimens": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 60, 61, 62, 65, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 84, 87, 89, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 122, 123, 126, 143, 264], "As": [2, 3, 4, 5, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 60, 67, 70, 72, 73, 74, 75, 76, 77, 105, 106, 108, 109, 110, 111, 114, 117, 118], "elementwis": [2, 3, 39, 124], "conserv": [2, 3, 110], "output": [2, 3, 4, 5, 7, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 43, 46, 47, 48, 49, 51, 53, 54, 55, 60, 63, 66, 67, 70, 72, 73, 74, 75, 76, 77, 84, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 122, 123, 126, 264], "same": [2, 3, 35, 36, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 63, 67, 70, 74, 78, 106, 113, 114, 116, 117, 118, 122, 123, 126, 257], "shape": [2, 3, 12, 37, 67, 68, 78, 83, 106, 122, 123], "paramet": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 80, 84, 91, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 122, 123, 126, 128, 129, 130, 131, 132, 143, 144, 145, 146, 264], "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 86, 91, 93, 96, 97, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 264], "whose": [2, 3, 7, 8, 15, 41, 43, 67, 87, 102, 114, 117, 143], "return": [2, 3, 4, 5, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 81, 84, 87, 91, 92, 93, 97, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 117, 122, 123, 126, 128, 129, 130, 131, 132, 264], "out": [2, 3, 15, 35, 36, 37, 39, 60, 67, 95, 101, 104, 106, 116, 126, 264, 265], "tanh": [3, 55], "distant": 3, "region": [3, 8, 10, 143], "ar": [3, 5, 7, 8, 10, 12, 13, 25, 35, 36, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 67, 68, 70, 72, 74, 76, 77, 78, 80, 84, 97, 98, 101, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 126, 143, 256, 257, 264, 265], "factor": [4, 15, 17, 18, 19, 20, 21, 22, 23, 35, 39, 72, 74, 76, 77, 109, 110, 111], "none": [4, 5, 7, 8, 9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 38, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 67, 68, 72, 74, 76, 77, 80, 83, 89, 91, 97, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 264], "tupl": [4, 12, 13, 26, 37, 51, 66, 67, 68, 102, 103, 114, 115, 117, 118, 122], "gradpath": 4, "liter": [4, 38, 39, 44, 60, 63, 70, 72, 74, 76, 77, 84, 97, 98, 106, 109, 110, 111, 117, 118], "both": [4, 71, 118, 123, 257, 264], "correl": [4, 16, 18, 20, 22, 23, 46, 70, 212, 256, 261, 263, 264], "divid": [4, 5, 41], "each": [4, 5, 6, 7, 8, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 60, 63, 65, 67, 70, 72, 74, 76, 77, 78, 80, 84, 98, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 116, 117, 122, 143, 264], "entri": [4, 15, 17, 18, 19, 20, 21, 22, 23, 33, 35, 39, 67, 78, 84, 93, 97, 98, 122, 143], "a_": 4, "ij": [4, 15, 17, 19, 35, 39], "matrix": [4, 5, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 81, 82, 84, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 101, 106, 108, 109, 110, 111, 126, 256, 261, 264], "A": [4, 10, 12, 36, 37, 38, 39, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 62, 72, 74, 76, 77, 87, 91, 92, 109, 110, 111, 113, 116, 119, 132], "product": [4, 39, 60, 88, 91, 101, 105, 106], "sign": [4, 38, 39, 63, 126], "squar": [4, 15, 17, 18, 19, 20, 21, 22, 23, 44, 50, 52, 58, 61, 64, 65, 66, 70, 72, 77, 89, 107, 111], "root": [4, 72, 77, 107, 111], "correspond": [4, 6, 8, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 36, 37, 38, 44, 60, 67, 101, 114, 116, 117, 264], "diagon": [4, 15, 17, 18, 19, 20, 21, 22, 23, 37, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 59, 60, 61, 63, 65, 67, 69, 72, 74, 76, 77, 81, 87, 95, 106, 109, 110, 111, 126], "bar": [4, 75, 76], "_": [4, 10, 15, 17, 19, 35, 39, 52], "frac": [4, 5, 10, 17, 19, 31, 32, 36, 37, 38, 47, 49, 53, 54, 55, 60, 62, 73, 75, 76, 106], "sgn": 4, "ii": [4, 15, 17, 19], "jj": [4, 15, 17, 19], "sqrt": [4, 5, 15, 17, 19, 52, 111], "epsilon": 4, "default": [4, 5, 7, 8, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 65, 66, 67, 69, 70, 72, 74, 75, 76, 77, 84, 91, 97, 98, 101, 103, 104, 105, 106, 109, 110, 111, 113, 114, 116, 117, 128, 129, 130, 131, 132], "behaviour": [4, 39, 106], "which": [4, 7, 10, 12, 25, 26, 27, 28, 29, 30, 33, 35, 36, 38, 39, 41, 43, 63, 66, 72, 73, 74, 75, 76, 77, 78, 84, 97, 98, 101, 104, 109, 110, 111, 114, 117, 128, 129, 130, 131, 143, 257, 264], "covari": [4, 15, 17, 19, 21, 43, 47, 48, 49, 54, 70, 256, 261, 263, 264], "pearson": [4, 14, 15, 16, 18, 19, 20, 21, 256, 264], "can": [4, 5, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 43, 47, 49, 54, 60, 67, 70, 72, 74, 76, 77, 78, 84, 87, 97, 98, 101, 104, 106, 109, 110, 111, 114, 117, 118, 119, 126, 143, 257, 264], "overriden": 4, "provid": [4, 5, 7, 12, 13, 31, 32, 37, 39, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 82, 91, 101, 105, 106, 143, 257, 264], "detail": [4, 100, 104, 114, 117, 145, 146, 253, 257], "below": 4, "also": [4, 47, 49, 54, 60, 68, 84, 91, 98, 106, 126, 143, 264, 265], "similar": [4, 44, 45, 106, 264], "version": [4, 9], "oper": [4, 6, 12, 13, 32, 33, 43, 62, 70, 71, 72, 74, 76, 77, 82, 84, 89, 91, 92, 97, 98, 99, 106, 109, 110, 111, 143, 256, 257, 261, 264], "graph": [4, 12, 13, 35, 36, 38, 39, 106, 256, 261, 264], "laplacian": [4, 12, 13, 34, 256, 264], "p": [4, 5, 36, 38, 46, 47, 48, 49, 51, 53, 54, 55, 89, 264], "denot": [4, 5, 7, 8, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 60, 63, 67, 70, 72, 73, 74, 75, 76, 77, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 123], "row": [4, 5, 8, 37, 47, 49, 51, 52, 53, 54, 55, 60, 67, 68, 72, 73, 74, 75, 76, 77, 78, 88, 106, 108, 109, 110, 111, 126], "column": [4, 5, 8, 10, 47, 49, 51, 52, 53, 54, 55, 60, 67, 68, 72, 73, 74, 75, 76, 77, 88, 106, 108, 109, 110, 111, 126], "matric": [4, 5, 12, 13, 23, 35, 36, 38, 39, 58, 61, 63, 64, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 90, 91, 98, 106, 107, 108, 109, 110, 111, 126, 264], "ani": [4, 5, 6, 7, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 41, 46, 47, 48, 49, 51, 53, 54, 55, 60, 67, 68, 70, 72, 73, 74, 75, 76, 77, 80, 86, 97, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 256], "number": [4, 5, 7, 8, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 41, 43, 46, 47, 48, 49, 51, 53, 54, 55, 60, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 91, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 123, 128, 129, 130, 131, 143], "abov": [4, 5, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 60, 67, 70, 72, 73, 74, 75, 76, 77, 106, 108, 109, 110, 111, 114, 117, 118, 264], "iter": [4, 7, 44, 74, 264], "If": [4, 5, 7, 8, 10, 13, 15, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 32, 35, 36, 37, 38, 39, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 63, 64, 67, 70, 72, 75, 76, 80, 84, 89, 91, 97, 98, 101, 104, 105, 106, 114, 117, 126, 132, 143, 265], "explicitli": [4, 6, 46, 47, 48, 49, 50, 51, 53, 54, 55, 114, 117, 256], "specifi": [4, 5, 7, 8, 10, 15, 17, 18, 19, 20, 21, 22, 23, 33, 44, 47, 53, 54, 55, 60, 63, 66, 67, 74, 80, 88, 89, 91, 97, 106, 109, 110, 111, 114, 116, 117, 123, 143, 256, 264], "follow": [4, 22, 33, 41, 62, 65, 69, 78, 101, 265], "divis": [4, 15, 17, 18, 19, 20, 21, 22, 23, 80], "directli": [4, 91], "option": [4, 5, 7, 8, 9, 10, 18, 19, 20, 25, 26, 27, 28, 29, 30, 33, 35, 38, 39, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 67, 68, 72, 74, 76, 77, 80, 83, 84, 89, 91, 98, 100, 101, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 128, 129, 130, 131, 257], "mostli": [4, 33, 67], "compat": [4, 33, 47, 49, 51, 52, 53, 54, 55, 82, 84, 93, 97, 98], "non": [4, 23, 39, 41, 43, 52, 70, 78, 109], "pair": [4, 14, 21, 22, 33, 36, 89, 101, 105, 143, 256], "outer": [4, 60, 88, 106], "str": [4, 70], "set": [4, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 36, 38, 39, 41, 43, 44, 47, 50, 53, 54, 55, 65, 69, 72, 74, 76, 77, 84, 86, 91, 98, 105, 106, 109, 110, 111, 143, 257, 264], "us": [4, 5, 7, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 31, 32, 33, 37, 38, 39, 41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 63, 67, 68, 70, 72, 74, 76, 77, 78, 80, 84, 89, 91, 97, 98, 100, 101, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 121, 143, 257, 259, 264], "gradient": [4, 74], "block": [4, 36, 38, 39, 58, 61, 62, 63, 64, 65, 66, 67, 69, 70, 80, 85, 91, 106], "from": [4, 6, 7, 12, 16, 41, 43, 47, 49, 51, 52, 53, 54, 55, 58, 60, 61, 63, 65, 67, 68, 69, 70, 71, 72, 74, 76, 77, 84, 97, 102, 103, 105, 106, 109, 110, 111, 115, 123, 128, 129, 130, 131, 132, 143, 146, 256, 257, 259, 264, 265], "flow": 4, "backward": [4, 33, 44, 71], "through": [4, 5, 62, 72, 74, 76, 77, 106, 109, 110, 111], "comput": [4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 33, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 53, 54, 55, 73, 74, 75, 76, 89, 91, 101, 104, 105, 106, 107, 108, 109, 111, 256], "volum": [5, 143], "float": [5, 7, 8, 9, 10, 12, 15, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 33, 38, 39, 41, 43, 46, 47, 48, 49, 53, 54, 55, 61, 62, 63, 67, 68, 70, 72, 74, 76, 77, 84, 98, 100, 101, 103, 104, 105, 109, 110, 111, 125], "1": [5, 7, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 47, 49, 53, 54, 55, 60, 65, 66, 69, 72, 73, 74, 75, 76, 77, 78, 80, 85, 91, 93, 100, 103, 104, 105, 106, 109, 110, 111, 114, 115, 117, 118, 126, 128, 129, 130, 131, 264], "max_condit": 5, "softmax_temp": 5, "symmetr": [5, 15, 17, 18, 19, 20, 21, 22, 23, 56, 60, 63, 64, 65, 69, 72, 77, 89, 106, 108, 109, 110, 111, 256, 261, 264], "posit": [5, 15, 17, 18, 19, 20, 21, 22, 23, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 62, 63, 72, 73, 74, 76, 77, 89, 106, 107, 108, 109, 110, 111, 256, 261, 264], "definit": [5, 46, 47, 48, 49, 50, 51, 53, 54, 55, 63, 72, 74, 76, 77, 89, 106, 108, 109, 110, 111], "first": [5, 16, 32, 33, 43, 44, 46, 47, 48, 49, 51, 53, 54, 55, 63, 67, 69, 97, 106, 114, 117, 264, 265], "find": 5, "eigendecomposit": [5, 63, 110], "eigenvalu": [5, 12, 13, 62, 63, 72, 74, 76, 77, 108, 109, 110, 111], "n": [5, 7, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 69, 70, 72, 73, 74, 75, 76, 77, 89, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 126], "v_": 5, "target": [5, 37], "determin": [5, 12, 15, 17, 18, 19, 20, 21, 22, 23, 41, 43, 98, 114, 117, 260, 261], "befor": [5, 31, 32, 33, 37, 43, 74, 106, 126], "rescal": 5, "softmax": 5, "enforc": [5, 60, 106, 114, 117], "maxim": 5, "condit": [5, 14, 17, 19, 20, 21, 22, 70, 72, 74, 76, 77, 109, 110, 111, 143, 256, 257, 264], "being": [5, 65, 72, 77], "repres": [5, 72, 77, 82, 264], "ellipsoid": 5, "instanc": [5, 15, 17, 18, 19, 20, 21, 22, 23, 38, 39, 60, 67, 72, 74, 76, 77, 106, 109, 110, 111, 126, 143, 264], "constrain": [5, 264], "eccentr": 5, "those": [5, 15, 43, 44, 67], "final": [5, 31, 32, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 61, 65, 87, 114, 117, 118, 264], "reconstitut": [5, 63, 123], "eigenvector": 5, "contain": [5, 7, 8, 15, 17, 18, 19, 20, 21, 22, 23, 33, 43, 47, 49, 51, 52, 53, 54, 55, 67, 70, 84, 91, 98, 101, 102, 103, 104, 105, 113, 116, 143], "procedur": [5, 33], "all": [5, 7, 12, 15, 16, 21, 22, 33, 35, 36, 39, 41, 43, 47, 49, 54, 62, 63, 71, 72, 74, 76, 77, 78, 84, 87, 97, 98, 106, 109, 110, 111, 114, 117, 143, 256], "have": [5, 62, 70, 78, 80, 126, 265], "infti": 5, "maximum": [5, 15, 17, 18, 19, 20, 21, 22, 23, 33, 38, 39, 41, 43, 44, 53, 60, 63, 74, 101, 104, 106, 114, 116, 117, 118], "permiss": 5, "among": [5, 18, 63, 72, 74, 76, 77, 109, 110, 111, 257, 264], "To": [5, 41, 43, 109, 111, 114, 117], "replac": [5, 7, 33, 60, 72, 74, 76, 77, 84, 98, 106, 109, 110, 111], "convex": [5, 42, 72, 74, 76, 77, 109, 110, 111], "combin": [5, 41, 42, 72, 74, 76, 77, 109, 110, 111, 257, 264], "vector": [5, 7, 36, 47, 49, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 68, 69, 70, 87, 88, 89, 102, 103, 105, 106], "ones": 5, "largest": 5, "more": [5, 15, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 41, 68, 78, 104, 108, 264], "than": [5, 10, 23, 33, 41, 43, 47, 49, 54, 63, 74, 78, 82, 108, 110, 111, 143, 264], "time": [5, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 39, 41, 42, 43, 44, 89, 106, 114, 117, 118, 126, 256, 257, 261, 264, 265], "smallest": [5, 63], "note": [5, 23, 32, 33, 63, 67, 72, 74, 76, 77, 91, 92, 102, 103, 106, 109, 110, 111, 143, 259, 264], "alwai": [5, 257, 264], "potenti": [5, 31, 32, 84, 98, 106, 111, 143], "isotrop": [5, 47, 49, 101, 104], "scale": [5, 12, 47, 53, 54, 55, 63, 100, 104], "ident": [5, 35, 39, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 72, 74, 76, 77, 105, 109, 110, 111, 160, 258], "pass": [5, 31, 32, 38, 39, 60, 71, 80, 106, 114, 117, 143, 264], "temperatur": 5, "other": [5, 15, 16, 21, 22, 33, 87, 101, 106, 112, 257, 264], "process": [5, 264], "differenti": [6, 7, 8, 12, 14, 62, 71, 72, 74, 76, 77, 107, 109, 110, 111, 256, 259, 261], "weight": [6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 101, 106, 114, 115, 117, 118, 124, 264], "": [6, 7, 8, 10, 35, 39, 106, 113, 128, 129, 130, 131, 143, 264, 265], "avail": [6, 68, 143, 257], "intrins": 6, "mesh": [6, 143], "grid": [6, 9], "coordin": [6, 9, 10, 12, 13, 101, 102, 103, 104, 105, 143, 256, 261], "cmass_reference_displacement_grid": [6, 9], "take": [6, 97, 101, 106, 143, 264], "last": [6, 7, 8, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 46, 47, 48, 49, 50, 51, 53, 54, 55, 65, 66, 70, 114, 117], "axi": [6, 8, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 46, 47, 48, 49, 50, 51, 53, 54, 55, 58, 67, 70, 73, 74, 75, 76, 80, 93, 114, 117, 121, 124, 125, 128, 129, 130, 131, 132, 264], "differ": [6, 31, 32, 33, 35, 38, 39, 43, 47, 49, 51, 52, 53, 54, 55, 67, 74, 90, 264], "locat": [6, 8, 10, 143], "accept": 6, "second": [6, 8, 16, 46, 47, 48, 49, 50, 51, 53, 54, 55, 68, 105, 106, 114, 117, 143, 260, 261], "indic": [6, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 41, 42, 43, 44, 66, 70, 72, 74, 75, 76, 77, 78, 84, 91, 93, 97, 98, 102, 103, 109, 110, 111, 113, 114, 116, 117, 143], "cmass_coor": [6, 9, 256], "diffus": [6, 12, 256], "cmass_reference_displac": [6, 9], "arrai": [6, 33, 89, 101, 104, 123, 256, 264], "around": [6, 46, 48, 91, 256], "displac": [6, 256], "refer": [6, 72, 77, 106, 143, 256, 257, 264], "ax": [7, 9, 61, 65, 66, 67, 73, 74, 75, 76, 143], "sequenc": [7, 9, 44, 73, 74, 75, 76, 80, 83, 85, 97, 114, 115, 117, 118, 124, 125], "int": [7, 9, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 33, 41, 44, 53, 59, 61, 65, 66, 67, 68, 69, 73, 74, 75, 76, 79, 80, 83, 85, 91, 93, 97, 100, 101, 104, 114, 115, 116, 117, 118, 121, 124, 125, 126, 128, 129, 130, 131], "na_rm": [7, 9], "bool": [7, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 38, 39, 52, 66, 70, 72, 74, 75, 76, 77, 79, 80, 84, 87, 93, 97, 98, 106, 109, 110, 111, 113, 114, 116, 117, 126, 132], "fals": [7, 9, 15, 17, 18, 19, 20, 21, 22, 23, 35, 38, 39, 41, 42, 43, 44, 52, 66, 70, 72, 74, 75, 76, 77, 80, 84, 87, 97, 98, 106, 109, 110, 111, 113, 114, 116, 117, 124, 126, 132], "regularis": [7, 15, 17, 18, 19, 20, 21, 22, 23, 70, 257, 261], "so": [7, 43, 63, 97, 118], "its": [7, 10, 31, 32, 33, 60, 62, 66, 106, 123, 143, 259, 264], "close": [7, 12], "k_1": 7, "k_2": 7, "k_n": 7, "batch": [7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 36, 38, 39, 43, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 87, 98, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 124], "interven": [7, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 36, 38, 39, 70, 72, 73, 74, 75, 76, 77, 101, 104, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118], "k_i": [7, 36], "along": [7, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 65, 67, 69, 72, 74, 76, 77, 80, 109, 110, 111, 121, 128, 129, 130, 131, 132], "togeth": [7, 41, 44, 101, 104, 114, 117], "defin": [7, 10, 15, 16, 17, 19, 23, 36, 38, 39, 44, 143, 264], "slice": [7, 15, 17, 18, 19, 20, 21, 22, 23, 35, 39, 63, 65, 66], "within": [7, 264], "singl": [7, 67, 84, 98, 113, 114, 116, 117, 118, 143], "across": [7, 41, 43, 60, 66, 78, 84, 98, 113, 114, 116, 117, 143], "3": [7, 12, 41, 43, 53, 102, 103, 105, 264], "2": [7, 10, 12, 15, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 32, 33, 37, 47, 49, 60, 62, 65, 66, 67, 69, 72, 77, 102, 103, 104, 105, 106, 114, 116, 117, 264], "separ": [7, 15, 41, 43, 84, 91, 97, 98, 101, 104, 143], "dimension": [7, 15, 17, 18, 19, 20, 21, 22, 23, 121, 257], "span": [7, 70], "three": 7, "ha": [7, 19, 20, 32, 37, 47, 49, 51, 52, 53, 54, 55, 62, 67, 74, 78, 143, 257, 259], "zero": [7, 24, 31, 43, 62, 67, 70, 72, 74, 76, 77, 78, 95, 103, 109, 110, 111, 256], "undefin": [7, 72], "popul": [7, 67, 69], "nan": [7, 72, 74, 76, 77, 109, 110, 111], "how": [7, 115, 257, 264], "handl": [7, 85], "left": [7, 10, 31, 32, 38, 39, 60, 62, 63, 75, 76, 81, 91, 98, 106, 143], "intact": 7, "order": [7, 8, 31, 32, 53, 65, 69, 80], "specif": [7, 9, 114, 117, 264], "cmass": [8, 9, 10, 256, 261], "coor": [8, 9, 10, 100, 101, 102, 103, 104], "radiu": [8, 9, 10, 103, 104, 105], "w": [8, 10, 12, 13, 37, 60, 106], "l": [8, 10, 12, 13, 35, 37, 39, 60, 106], "preced": [8, 10, 12, 13, 35, 37, 39, 60], "e": [8, 10, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 37, 47, 49, 54, 70, 84, 114, 117, 118, 143, 264], "g": [8, 10, 84], "an": [8, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 28, 33, 37, 38, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 60, 63, 68, 72, 74, 76, 77, 84, 96, 97, 98, 101, 104, 106, 109, 110, 111, 118, 121, 143, 257, 264, 265], "atla": [8, 10, 258, 261, 263, 264], "voxel": [8, 10, 143], "d": [8, 10, 37, 72, 73, 74, 75, 76, 77, 81, 101, 104, 108, 109, 110, 111, 265], "embed": [8, 10, 101, 104], "space": [8, 10, 74, 101, 104, 143, 264], "project": [8, 43, 70, 71, 72, 74, 77, 257, 264], "onto": [8, 43, 70], "sphere": [8, 10, 100, 101, 102, 103, 104, 105, 256, 261, 264], "ref": 9, "point": [9, 10, 33, 43, 44, 72, 74, 77, 101, 102, 103, 104, 105, 264], "explicit": [9, 60, 106], "see": [9, 26, 29, 30, 68, 100, 104, 114, 117, 145, 146, 253], "norm": [10, 52, 74, 89, 101], "floor": 10, "0": [10, 12, 15, 17, 18, 19, 20, 21, 22, 23, 41, 43, 46, 48, 53, 55, 59, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 80, 84, 85, 97, 98, 109, 110, 111, 115, 125, 128, 129, 130, 131, 143, 264], "compact": [10, 260, 261], "score": [10, 264], "mathbf": [10, 36, 39, 62, 81], "interc": [10, 16, 35, 36, 39, 47, 49, 51, 52, 53, 54, 55, 60, 91, 92, 106, 108, 109, 111], "circ": [10, 39], "c": [10, 17, 18, 21, 22, 23, 35, 39, 60, 67, 68, 101, 104, 106, 113, 114, 116, 117, 118, 126], "ac": 10, "right": [10, 31, 32, 38, 39, 60, 62, 63, 75, 76, 81, 91, 98, 106, 143], "col": [10, 88], "type": [10, 33, 38, 39, 84, 86, 97, 98, 101, 106, 264], "distanc": [10, 45, 50, 101, 104, 105, 264], "closer": [10, 68], "assign": [10, 35, 38, 39, 143, 264], "measur": [10, 14, 21, 22, 25, 34, 106, 114, 117, 264], "about": 10, "base": [11, 43, 68, 143, 145, 146, 221, 257, 258, 260, 261, 263, 264], "brainspac": [11, 12], "laplacian_eigenmap": [11, 12, 256], "diffusion_map": [11, 13, 256], "connectopi": [12, 13, 256, 260, 261], "k": [12, 13, 33, 35, 37, 39, 47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 113, 114, 116, 117, 118, 256], "10": [12, 13, 74, 264], "alpha": [12, 257, 265], "5": [12, 264], "diffusion_tim": 12, "manifold": [12, 13, 71, 74, 101, 256, 261, 264], "estim": [12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 41, 43, 74, 264], "adapt": 12, "veri": [12, 44, 72, 74, 76, 77, 109, 110, 111], "some": [12, 14, 33, 70, 72, 77, 104, 114, 117, 143, 264], "minor": 12, "spars": [12, 13, 37, 46, 47, 48, 49, 51, 52, 53, 54, 55, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 256, 261], "current": [12, 13, 33, 44, 71, 86, 101, 114, 117, 143, 257, 259, 264], "unsupport": [12, 13, 143], "becaus": [12, 13, 41, 43, 105, 257, 265], "implement": [12, 13, 33, 44, 64, 71, 91, 92, 100, 104, 108, 111, 115, 143, 264], "extrem": [12, 13], "solver": [12, 13], "doe": [12, 13, 64, 106], "yet": [12, 13, 264], "exist": [12, 13, 119, 132, 143, 264], "jax": [12, 13, 26, 29, 30, 33, 68, 70, 86, 91, 108, 110, 111, 115, 121, 257, 264], "For": [12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 33, 36, 37, 38, 47, 49, 51, 52, 53, 54, 55, 72, 74, 76, 77, 81, 107, 109, 110, 111, 114, 117, 121, 143, 259, 264], "generalis": [12, 13, 257], "connectop": [12, 13, 78, 256, 261], "instead": [12, 13, 15, 21, 22, 23, 33, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 70, 75, 76, 89, 97, 117, 143, 257], "onc": [12, 13, 114, 117, 118], "we": [12, 13, 15, 68, 70, 105, 257, 264, 265], "vjp": [12, 13], "rule": [12, 13, 31, 32], "elementari": [12, 13, 256], "anywai": [12, 13], "anisotrop": 12, "kind": 12, "produc": [12, 60, 97, 118], "algorithm": [12, 74, 264], "eigenmap": [12, 13], "random": [12, 72, 74, 76, 77, 83, 109, 110, 111, 256, 261, 264], "walk": 12, "style": 12, "fokker": 12, "planck": 12, "laplac": [12, 258, 261], "beltrami": 12, "vertic": [12, 13, 35, 36, 37, 38, 39, 126], "edg": [12, 13, 35, 36, 37, 38, 39, 257], "should": [12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 37, 38, 39, 41, 43, 46, 47, 48, 49, 51, 53, 54, 55, 62, 65, 66, 67, 69, 70, 72, 74, 76, 77, 87, 97, 106, 109, 110, 111, 113, 114, 116, 117, 126, 257], "edge_index": [12, 13, 37], "q": [12, 13, 39], "adjac": [12, 13, 33, 36, 37, 38, 39, 257], "affin": [12, 13, 160, 258], "multi": [12, 15, 17, 18, 19, 20, 21, 22, 23, 121, 143], "consid": [12, 38, 39, 41, 43, 72, 74, 76, 77, 109, 110, 111], "valid": [12, 143, 257, 264], "etc": 12, "true": [13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 35, 37, 39, 41, 42, 43, 44, 52, 70, 72, 74, 75, 76, 77, 79, 84, 93, 97, 98, 106, 109, 110, 111, 126, 132], "otherwis": [13, 37, 41, 44, 60, 67, 97, 106, 132], "list": [13, 37, 101, 113], "degre": [13, 15, 17, 18, 19, 20, 21, 22, 23, 36, 37, 38, 39, 53, 114, 116, 117, 118], "deriv": [14, 25, 257], "connect": [14, 35, 36, 38, 39, 257, 264], "statist": 14, "relationship": [14, 15, 17, 18, 19, 20, 21, 22, 23, 70], "between": [14, 16, 19, 20, 21, 22, 33, 35, 36, 38, 39, 46, 47, 48, 49, 51, 53, 54, 55, 60, 64, 74, 88, 90, 101, 105, 106, 264], "localis": 14, "seri": [14, 15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 114, 117, 118, 256, 261, 264], "signal": [14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 257], "It": [14, 16, 19, 20, 21, 22, 39, 43, 44, 70, 72, 74, 77, 91, 101, 118, 121, 143, 257], "typic": [14, 101, 107, 143, 257], "operationalis": [14, 101], "most": [14, 257], "often": [14, 41, 43, 106, 143, 257], "corr": [14, 18, 21, 256], "partialcov": [14, 16, 21, 23, 256], "partial": [14, 17, 18, 23, 113, 256, 264], "partialcorr": [14, 15, 17, 18, 22, 23, 256], "pairedcov": [14, 18, 48, 256], "pairedcorr": [14, 20, 46, 256], "conditionalcov": [14, 15, 20, 22, 256], "conditionalcorr": [14, 16, 17, 21, 256, 264], "precis": [14, 18, 22, 256], "cov": [15, 16, 17, 19, 20, 21, 22, 23, 256, 261, 263, 264], "y": [15, 16, 19, 20, 70, 102, 103, 105], "require_nonsingular": [15, 16, 21, 22, 23, 75, 76], "param": [15, 16, 17, 19, 21, 22, 23, 31, 32, 38, 39, 114, 117, 118], "variabl": [15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 113, 114, 116, 117, 118], "obtain": [15, 17, 18, 19, 20, 21, 22, 23, 33, 84, 97, 98, 101], "via": [15, 17, 19, 21, 22, 27, 29, 30, 31, 32, 63, 70, 72, 74, 77, 106, 114, 117], "given": [15, 17, 19, 35, 37, 38, 39, 43, 68, 72, 77, 113], "hat": [15, 17, 19], "sigma": [15, 16, 17, 18, 19, 20, 22, 47, 49, 54], "mathbb": [15, 17, 19, 35, 36, 39, 89], "r": [15, 17, 19, 21, 35, 36, 39, 53, 55, 60, 67, 68, 89, 103, 104, 105, 106, 114, 117, 118], "im": 15, "math": 15, "r_": [15, 17, 19], "rac": 15, "c_x": [15, 19, 20, 70], "ob": [15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 113, 114, 116, 117, 118], "size": [15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 38, 39, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 67, 70, 72, 73, 74, 75, 76, 77, 106, 108, 109, 110, 111, 113, 114, 116, 117, 118, 128, 129, 130, 131], "data": [15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 67, 70, 78, 80, 85, 86, 89, 100, 101, 104, 106, 112, 113, 114, 116, 117, 118, 143, 257, 261, 264], "channel": [15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 67, 70, 84, 97, 98, 101, 104, 106, 113, 114, 116, 117, 118, 264], "observ": [15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 70, 101, 104, 113, 114, 116, 117, 118], "per": [15, 17, 18, 19, 20, 21, 22, 23, 31, 32, 70, 101, 104, 113, 114, 116, 117, 118], "c_y": [15, 19, 20, 70], "sampl": [15, 17, 18, 19, 20, 21, 22, 23, 41, 43, 72, 74, 76, 77, 97, 109, 110, 111, 128, 129, 130, 131, 132, 143], "multivari": [15, 17, 18, 19, 20, 21, 22, 23, 31, 32], "influenc": 15, "wish": [15, 72, 74, 76, 77, 109, 110, 111], "control": [15, 16, 41, 43], "remov": [15, 70, 106, 126], "penultim": [15, 17, 18, 19, 20, 21, 22, 23, 70, 114, 117], "gener": [15, 17, 18, 19, 20, 21, 22, 23, 46, 47, 48, 49, 50, 51, 53, 54, 55, 60, 72, 74, 76, 77, 83, 88, 97, 106, 108, 109, 110, 111, 264], "limit": [15, 60], "nuisanc": [15, 16], "confound": [15, 16, 264], "must": [15, 17, 18, 19, 20, 21, 22, 23, 43, 67, 75, 76, 80, 84, 98, 106, 113, 123], "nonsingular": [15, 21, 22, 23, 75, 76], "moor": [15, 21, 22, 23, 75, 76], "penros": [15, 21, 22, 23, 75, 76], "pseudoinvers": [15, 21, 22, 23, 75, 76], "rowvar": [15, 17, 18, 19, 20, 21, 22, 23, 70], "transpos": [15, 17, 18, 19, 20, 21, 22, 23, 60, 66, 70, 106], "bia": [15, 17, 18, 19, 20, 21, 22, 23, 106, 114, 115, 117, 118], "bias": [15, 17, 18, 19, 20, 21, 22, 23, 106], "unweight": [15, 17, 18, 19, 20, 21, 22, 23], "case": [15, 17, 18, 19, 20, 21, 22, 23, 33, 38, 39, 67, 70, 72, 74, 76, 77, 78, 84, 98, 109, 110, 111, 257], "perform": [15, 17, 18, 19, 20, 21, 22, 23, 32, 84, 91, 97, 98, 101, 114, 117, 118, 143], "By": [15, 17, 18, 19, 20, 21, 22, 23, 38, 39, 44, 65, 66, 69, 264], "unbias": [15, 17, 18, 19, 20, 21, 22, 23], "ddof": [15, 17, 18, 19, 20, 21, 22, 23], "freedom": [15, 17, 18, 19, 20, 21, 22, 23], "overrid": [15, 17, 18, 19, 20, 21, 22, 23], "automat": [15, 17, 18, 19, 20, 21, 22, 23, 47, 53, 54, 55, 97, 117, 118, 143, 257, 259, 264], "import": [15, 17, 18, 19, 20, 21, 22, 23, 264], "coupl": [15, 17, 18, 19, 20, 21, 22, 23, 35, 39, 60, 106], "semidefinit": [15, 17, 18, 19, 20, 21, 22, 23, 60, 62, 63, 72, 73, 74, 75, 76, 77, 106, 107, 110, 256, 258, 261, 263, 264], "In": [15, 17, 18, 19, 20, 21, 22, 23, 33, 44, 67, 72, 74, 76, 77, 101, 106, 109, 110, 111, 257, 265], "again": [15, 17, 18, 19, 20, 21, 22, 23, 32, 63], "rel": [15, 17, 18, 19, 20, 21, 22, 23], "off": [15, 17, 18, 19, 20, 21, 22, 23, 67], "band": [15, 17, 18, 19, 20, 21, 22, 23, 67, 258, 261, 264], "inter": [15, 17, 18, 19, 20, 21, 22, 23, 35, 39, 264], "tempor": [15, 17, 18, 19, 20, 21, 22, 23, 264], "l2": [15, 17, 18, 19, 20, 21, 22, 23, 46, 48, 50, 52, 70, 100, 101, 264], "nonneg": [15, 17, 18, 19, 20, 21, 22, 23, 38, 39, 74, 110], "term": [15, 16, 17, 18, 19, 20, 21, 22, 23, 36, 47, 49, 54, 60, 70, 106, 113, 114, 116, 117], "add": [15, 17, 18, 19, 20, 21, 22, 23], "likelihood": [15, 17, 18, 19, 20, 21, 22, 23], "intermedi": [15, 17, 18, 19, 20, 21, 22, 23, 97], "empir": [15, 16, 17, 18, 19, 20, 22, 23, 264], "unnormalis": 15, "one": [16, 62, 84, 89, 97, 98, 121, 264], "anoth": [16, 92], "sigma_": 16, "xx": 16, "yy": 16, "xy": 16, "schur": 16, "complement": [16, 33], "equival": [16, 35, 39, 60, 106, 114, 117, 118, 259], "after": [16, 33, 63, 126, 143], "residualis": [16, 256, 261, 263, 264], "them": [16, 41, 42, 43, 44], "respect": [16, 33, 70], "plu": [16, 69], "intercept": [16, 113, 114, 116, 117], "interpret": [16, 21, 22, 47, 49, 54, 143], "interest": [16, 36, 38, 39, 265], "effect": [16, 19, 20, 32, 33, 37, 67], "binary_dim_spec": 16, "two": [19, 20, 41, 46, 47, 48, 49, 50, 51, 53, 54, 55, 65, 90, 98, 101, 105, 114, 117, 264], "m": [19, 46, 47, 48, 49, 51, 53, 54, 55, 86, 89, 259], "includ": [19, 20, 44, 65, 69, 97, 101, 104, 113, 114, 116, 117, 143, 257, 264], "conform": [19, 20, 64, 67, 113, 124], "direct": [21, 22, 37, 39, 44, 47, 49, 51, 52, 53, 54, 55, 259], "effici": [21, 27, 29, 30, 82, 104], "success": 21, "accompani": 21, "negat": [21, 22], "singular": [23, 62, 63, 109, 111], "less": [23, 41, 43, 74, 82, 110], "ensur": [23, 62, 63, 72, 74, 76, 77, 84, 98, 105, 109, 110, 111, 257, 259], "done": 23, "altern": [23, 264], "omega": [23, 35, 39, 53, 72, 77], "product_filt": [24, 32, 256], "product_filtfilt": [24, 31, 256], "unwrap": [24, 26, 29, 30, 256], "analytic_sign": [24, 26, 27, 28, 29, 30, 256], "hilbert_transform": [24, 25, 26, 27, 29, 30, 256], "envelop": [24, 25, 26, 28, 29, 30, 256], "instantaneous_phas": [24, 25, 26, 27, 28, 29, 256], "instantaneous_frequ": [24, 25, 26, 27, 28, 30, 256], "env_inst": [24, 25, 27, 28, 29, 30, 256], "fourier": [25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 43, 256, 261, 264], "analyt": [25, 26, 27, 29, 30, 257], "helic": 25, "represent": [25, 46, 47, 48, 49, 50, 51, 53, 54, 55, 143], "Its": [25, 143], "real": [25, 31, 32, 123], "imaginari": 25, "part": 25, "relat": [25, 257], "hilbert": [25, 28], "properti": [25, 37, 78], "quickli": 25, "instantan": [25, 26, 27, 29, 30], "frequenc": [25, 26, 27, 28, 29, 30, 31, 32, 41, 43, 256, 258, 261, 263, 264], "compon": [25, 26, 27, 28, 29, 30, 32, 120, 122, 257, 264], "f": [26, 29, 80, 85, 97, 264], "period": [26, 29, 30, 33, 41, 43], "6": [26, 29, 30, 33, 264], "283185307179586": [26, 29, 30, 33], "decompos": [26, 63, 122], "pi": [26, 29, 30, 33], "rang": [26, 29, 30, 33, 264], "over": [26, 29, 30, 33, 43, 44, 73, 74, 75, 76, 80, 84, 97, 98, 108, 113, 114, 117, 118, 143, 264], "wrap": [26, 29, 30, 33], "numpi": [26, 29, 30, 33, 38, 39, 64, 101, 106, 257, 264], "analytic_signal_sampling_frequ": [26, 29], "you": [27, 29, 30, 72, 74, 76, 77, 80, 101, 104, 109, 110, 111, 117, 265], "requir": [27, 29, 30, 72, 74, 76, 77, 97, 104, 109, 110, 111, 113, 143], "convolv": [31, 101, 104, 114, 117, 118, 143], "multipl": [31, 32, 81, 84, 87, 91, 92, 98, 143], "domain": [31, 32, 256, 257, 258, 261, 263, 264], "filter": [31, 43, 106, 256, 258, 261, 263, 264], "guarante": [31, 60, 63, 72, 106, 264], "even": 31, "when": [31, 39, 41, 43, 70, 74, 97, 126, 143], "strictli": [31, 32, 35, 39, 82], "lfloor": [31, 32], "rfloor": [31, 32], "analogu": [31, 32], "gain": [31, 32], "bin": [31, 32, 41, 43], "spectrum": [31, 32, 43, 264], "low": [31, 32, 60, 88, 106], "high": [31, 32, 43, 257], "broadcast": [31, 32, 87, 123], "jnp": [31, 32, 264], "fft": [31, 32], "rfft": [31, 32], "irfft": [31, 32], "digit": 32, "revers": [32, 44], "copi": 32, "quadrat": 32, "delai": 32, "could": [32, 37, 101, 105, 114, 117, 264], "make": 32, "sens": 32, "simpli": 32, "depend": [32, 37, 97], "context": 32, "discont": 33, "larg": [33, 37, 38, 39, 67, 257, 264], "delta": 33, "retain": 33, "new": [33, 74, 113, 116, 132, 257, 264], "code": [33, 143, 257, 264], "contigu": 33, "greater": [33, 143], "discontinu": 33, "half": 33, "radian": [33, 122, 123], "achiev": 33, "ad": [33, 63, 70, 72, 74, 76, 77, 106, 109, 110, 111, 257], "appropri": [33, 70, 87, 113], "cast": 33, "exceed": 33, "continu": [33, 143], "smaller": [33, 38, 39, 63], "girvan_newman_nul": [34, 38, 39, 256], "modularity_matrix": [34, 256], "coaffili": [34, 39, 256], "commun": [34, 38, 39, 256, 264], "relaxed_modular": [34, 38, 256], "graph_laplacian": [34, 256], "c_o": [35, 39, 114, 117, 118], "exclude_diag": [35, 39], "normalise_coaffili": [35, 39], "under": [35, 39, 143, 264], "structur": [35, 38, 39, 43, 67, 68], "affili": [35, 39], "node": [35, 36, 39, 106, 143], "o": [35, 36, 38, 39], "sink": [35, 36, 38, 39], "coeffici": [35, 47, 53, 54, 55, 60, 106], "h": [35, 39, 60, 106], "c_i": [35, 39], "total": [35, 36, 38, 39], "propos": [35, 39], "partit": [35, 38, 39], "emit": [35, 36, 38, 39], "receiv": [35, 36, 38, 39, 265], "encod": [35, 39, 106, 143], "uncertainti": [35, 39], "vertex": [35, 39, 261, 263], "jk": [35, 39], "probabl": [35, 39, 68, 86, 110, 143, 264, 265], "j": [35, 39], "binari": [35, 39], "reflect": [35, 39], "determinist": [35, 39], "assum": [35, 39, 47, 49, 51, 52, 53, 54, 55, 126], "equal": [35, 39, 65, 67, 78, 87, 114, 117, 126, 143], "l_": [35, 39], "assort": [35, 39], "preferenti": [35, 39], "remain": [35, 39, 264], "disaffili": [35, 39], "self": [35, 39, 264], "link": [35, 39, 265], "max": [35, 38, 39], "girvan": [36, 38, 39], "newman": [36, 38, 39], "null": [36, 38, 39, 143], "model": [36, 38, 39, 143, 259, 264], "expect": [36, 43, 257], "cut": 36, "result": [36, 38, 39, 43, 63, 70, 72, 81, 91, 97, 105, 106], "stub": 36, "randomli": 36, "rewir": 36, "k_o": 36, "2m": [36, 38], "yield": 36, "p_": 36, "gn": 36, "quantiti": [36, 38, 39], "compris": [36, 38, 143, 264], "topk": [37, 78, 256], "bcoo": [37, 50, 51, 52, 79, 81, 82, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 256], "mani": [37, 38, 39, 78, 143, 257], "applic": [37, 78, 257, 264], "tend": 37, "domin": 37, "desir": [37, 38, 39, 143, 259], "further": [37, 257, 265], "analysi": [37, 264], "widetild": [37, 72, 74, 76, 77, 109, 110, 111], "undirect": 37, "duplic": 37, "index": [37, 78, 84, 91, 98], "swap": 37, "either": [37, 43, 44, 64, 74, 126, 143], "convent": [37, 47, 49, 51, 52, 53, 54, 55], "adopt": 37, "top": [37, 47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 256], "jaxlib": [38, 39, 101, 106], "xla_extens": [38, 39, 101, 106], "gamma": [38, 39, 47, 49, 53, 54, 55], "callabl": [38, 39, 44, 80, 85, 97, 101, 106, 110, 113, 114, 117, 118, 120, 132], "normalise_modular": [38, 39], "modular": [38, 39, 264], "suitabl": [38, 39, 72, 74, 76, 77, 109, 110, 111], "b": [38, 39, 91, 92], "resolut": [38, 39], "larger": [38, 39, 41, 43, 101], "small": [38, 39, 72, 74, 76, 77, 109, 110, 111, 264], "mai": [38, 39, 70], "necessari": [38, 39, 72, 143], "where": [38, 39, 47, 49, 51, 53, 54, 55, 65, 69, 70, 72, 74, 76, 77, 78, 106, 109, 110, 111, 257, 264], "arg": [38, 39, 145, 146], "relax": 39, "support": [39, 68, 99, 112, 257, 259, 264], "linkag": 39, "revert": 39, "standard": [39, 47, 49, 82, 100, 126, 264], "sum": [39, 63, 143, 264], "hadamard": [39, 88], "method": [40, 41, 43, 63, 68, 72, 74, 76, 77, 104, 109, 110, 111, 143, 257, 264], "extrapol": 40, "unseen": [40, 41, 42, 44], "censor": [40, 264], "frame": [40, 41, 42, 43, 44, 114, 117, 264], "hybrid_interpol": [40, 256], "linear": [40, 51, 70, 143, 160, 215, 256, 258, 263], "spectral": [40, 43, 256], "linear_interpol": [40, 256], "weighted_interpol": [40, 256], "spectral_interpol": [40, 256], "mask": [41, 42, 43, 44, 121, 124, 125, 143, 258, 261], "max_consecutive_linear": 41, "oversampling_frequ": [41, 43], "8": [41, 43, 264], "maximum_frequ": [41, 43], "sampling_period": [41, 43], "frequency_thresh": [41, 43], "hybrid": 41, "approach": [41, 43, 60, 106, 108, 111, 257], "awai": 41, "seen": [41, 44, 114, 117], "imput": [41, 42, 43, 44, 256, 261], "proce": [41, 44, 101], "group": [41, 104, 119], "boolean": [41, 42, 43, 44, 84, 98, 143], "whether": [41, 42, 43, 44, 66, 70, 114, 117, 132], "good": [41, 42, 43, 44], "thei": [41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 63, 119, 264], "bad": [41, 42, 43, 44], "miss": [41, 42, 43, 44, 86], "flag": [41, 42, 43, 44], "consecut": [41, 43], "cannot": 41, "sine": [41, 43], "cosin": [41, 43, 47], "spectra": [41, 43], "oversampl": [41, 43], "fit": [41, 43, 70, 89], "fraction": [41, 43], "nyquist": [41, 43], "orthogon": [41, 43, 70], "basi": [41, 43, 106, 113, 114, 116, 117], "spuriou": [41, 43], "varianc": [41, 43, 70, 114, 117], "captur": [41, 43, 264], "dataset": [41, 42, 43, 44, 101, 113, 114, 116, 117, 118, 257], "proxim": 42, "nearest": [42, 44, 264], "neighbour": [42, 44], "interpol": [43, 44, 256, 261, 263, 264], "corrupt": 43, "proxi": 43, "reconstruct": [43, 63], "user": [43, 143], "advis": [43, 70, 143], "accordingli": 43, "might": [43, 72, 74, 76, 77, 101, 104, 106, 109, 110, 111, 257], "share": [43, 60, 78], "inspir": 43, "previou": [43, 74], "work": [43, 74, 101, 102, 103, 104, 105, 106, 121, 265], "anish": 43, "mitra": 43, "jonathan": 43, "power": [43, 116, 117, 257], "turn": 43, "lomb": 43, "scargl": 43, "periodogram": 43, "temporarili": 43, "omiss": 43, "due": [43, 72, 74, 76, 77, 109, 110, 111], "artefact": [43, 264], "content": [43, 143], "reduc": [43, 52, 80, 91, 97], "disrupt": 43, "autocorrel": 43, "introduc": [43, 257], "artefactu": 43, "outlier": 43, "arguabl": 43, "linearli": 43, "convolut": [43, 44, 100, 106, 114, 115, 117, 118, 256, 261, 264], "relev": 43, "plai": 43, "role": 43, "easili": 43, "tmask": 43, "your": [43, 89, 117, 259], "unsqueez": 43, "start_stag": 44, "max_stag": 44, "auto": 44, "stage": [44, 257], "map_to_kernel": 44, "averag": [44, 60, 66, 106], "progress": 44, "longer": 44, "window": [44, 114, 117, 118, 128, 129, 130, 131, 132, 256, 261], "kernel": [44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 100, 101, 104, 106, 114, 117, 256, 261, 264], "mark": [44, 143], "next": [44, 63, 264], "until": [44, 67], "everi": [44, 89, 101, 105], "practic": 44, "ineffici": 44, "mean": [44, 72, 73, 74, 75, 76, 77, 84, 98, 264, 265], "govern": 44, "initi": [44, 60, 106, 117, 118, 264], "boxcar": 44, "forward": [44, 71, 106, 264], "integ": [44, 84, 98, 143], "creat": [44, 67, 106, 113, 116, 117, 132, 143, 264], "metric": [45, 100, 101, 106, 264], "linear_kernel": [45, 256], "param_norm": [45, 256], "linear_dist": [45, 256], "polynomial_kernel": [45, 256], "sigmoid_kernel": [45, 256], "gaussian_kernel": [45, 54, 256], "rbf_kernel": [45, 47, 49, 256], "cosine_kernel": [45, 256], "cov_kernel": [45, 256], "corr_kernel": [45, 256], "x0": [46, 47, 48, 49, 50, 51, 53, 54, 55], "x1": [46, 47, 48, 49, 50, 51, 53, 54, 55], "theta": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 72, 77], "parameteris": [46, 47, 48, 49, 51, 52, 53, 54, 55, 256, 257, 261], "thin": [46, 48], "wrapper": [46, 48, 80, 85, 91], "featur": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "dens": [46, 47, 48, 49, 51, 53, 54, 55, 106], "unparameteris": [46, 47, 48, 49, 50, 51, 53, 54, 55], "gram": [46, 47, 48, 49, 51, 53, 54, 55], "x_0": [47, 49, 51, 53, 54, 55], "x_1": [47, 49, 51, 53, 54, 55], "gaussian": [47, 49, 100, 104], "k_": [47, 49, 51, 53, 54, 55], "deviat": [47, 49, 126], "pairwis": [47, 49, 54, 90, 101, 105, 264], "rather": [47, 49, 54, 143, 264], "here": [47, 49, 51, 52, 53, 54, 55, 67, 68, 71, 104, 264], "frequent": [47, 49, 51, 52, 53, 54, 55], "literatur": [47, 49, 51, 52, 53, 54, 55], "howev": [47, 49, 51, 52, 53, 54, 55, 72, 265], "benefit": [47, 49, 51, 52, 53, 54, 55], "format": [47, 49, 51, 52, 53, 54, 55, 79, 81, 82, 83, 85, 87, 91, 92, 93, 96, 97, 98, 102, 103, 105, 256], "euclidean": [50, 73, 74, 75, 76, 101, 105, 143], "mahalanobi": 50, "intermediate_indic": 51, "x_i": [52, 62], "form": [52, 64, 65, 69, 72, 77, 87, 89, 123], "polynomi": [53, 114, 116, 117, 118], "offset": [53, 55, 59, 61, 65, 69], "rbf": 54, "sigmoid": 55, "special": 56, "invert_spd": [56, 256], "spd": [56, 110, 256], "expand_out": [56, 256], "recondition_eigenspac": [56, 256], "delete_diagon": [56, 256], "diag_emb": [56, 256], "fill_diagon": [56, 256], "toeplitz_2d": [56, 256], "toeplitz": [56, 68, 256, 258, 261], "sym2vec": [56, 256], "vec2sym": [56, 256], "squareform": [56, 256], "delet": 58, "infer": [58, 61, 143], "v": 59, "emb": 59, "symmetri": [60, 66, 106, 126], "cross": [60, 105, 106], "skew": [60, 66, 106], "multipli": [60, 126, 128, 129, 130, 131, 132], "rank": [60, 88, 106], "inner": [60, 87], "height": [60, 106], "expand": [60, 106, 113, 116, 257, 265], "width": [60, 106], "expans": [60, 106], "modul": [60, 106, 144, 256, 257, 261, 264], "toggl": [60, 106], "neg": [60, 63, 106, 111], "constraint": [60, 106], "impos": [60, 63, 66, 106], "templat": [60, 106], "subtract": [60, 106], "fill": [61, 67, 68], "select": [61, 84, 93, 97, 98, 257], "psi": [62, 72, 74, 76, 77, 109, 110, 111, 264], "xi": [62, 72, 74, 76, 77, 109, 110, 111], "kei": [62, 72, 74, 76, 77, 83, 109, 110, 111, 128, 129, 130, 131, 143, 264], "recondit": [62, 72, 74, 76, 77, 109, 110, 111, 264], "eigenspac": [62, 72, 74, 76, 77, 109, 110, 111], "help": 62, "stabilis": 62, "decomposit": [62, 63, 72, 74, 76, 77, 109, 110, 111], "modifi": [62, 63], "sim": 62, "uniform": 62, "foral": 62, "nonzero": [62, 78, 84, 97, 98], "nondegener": [62, 89], "ep": [63, 74], "1e": [63, 74, 264], "06": [63, 74], "eig": 63, "svd": [63, 72, 74, 76, 77, 109, 110, 111], "made": [63, 264], "symmetris": [63, 66, 69, 106], "diagonalis": [63, 108, 109, 111], "identifi": 63, "threshold": [63, 74, 84, 97, 98], "theori": 63, "up": [63, 116], "thu": [63, 74, 89, 97], "error": [63, 72, 74, 76, 77, 106, 109, 110, 111], "minimum": 63, "possibl": [63, 80, 104, 114, 117], "unus": 63, "recomposit": 63, "treat": 63, "though": 63, "were": [63, 257], "therebi": [63, 264], "least": [63, 70], "margin": 63, "occasion": 63, "insuffici": 63, "avoid": 63, "numer": [63, 71, 72, 74, 76, 77, 109, 110, 111], "convert": [64, 65, 69, 79, 87, 96, 97, 102, 103, 264], "unlik": 64, "matlab": 64, "verifi": [64, 70], "vectoris": 64, "sym": [65, 69], "ravel": [65, 69], "upper": [65, 69], "triangl": [65, 69], "main": [65, 69, 259], "begin": [65, 69, 257], "vec": [65, 69, 72, 77], "delin": 66, "antisymmetri": 66, "fill_valu": [67, 68, 125], "element": [67, 69, 72, 74, 76, 77, 78, 84, 97, 98, 109, 110, 111, 126, 264], "match": [67, 87, 264], "scipi": [67, 68, 108, 110], "check": 67, "event": 67, "ignor": [67, 126], "opposit": 67, "propag": 67, "unless": [67, 72, 256], "dim": [67, 264], "concaten": 67, "stack": [67, 106, 126, 128, 129, 130, 131, 257], "unspecifi": 67, "extend": 67, "construct": [68, 264], "2d": 68, "post": [68, 265], "mattjj": 68, "evalu": [68, 101, 113, 114, 117, 257, 261], "blakehechtman": 68, "http": [68, 104, 115, 259], "github": [68, 259, 265], "com": [68, 115, 259], "googl": [68, 115], "issu": 68, "1646": 68, "issuecom": 68, "1139044324": 68, "appar": 68, "underperform": 68, "tpu": 68, "But": 68, "big": 68, "deal": 68, "our": [68, 253, 257, 264, 265], "flexibl": 68, "admit": 68, "without": [68, 143, 264], "circul": 68, "api": [68, 86, 115, 257, 264], "complet": [68, 101, 104], "document": [68, 114, 117, 257, 265], "lead": [68, 78], "length": 69, "choos": [69, 257], "place": 69, "resid": [70, 264], "return_mod": 70, "residu": 70, "ordinari": 70, "torch": [70, 114, 115, 117, 259], "found": [70, 265], "wa": 70, "incorrect": [70, 264], "reason": 70, "clear": 70, "linalg": [70, 108, 110, 111], "lstsq": 70, "although": [70, 105, 110, 143], "correct": 70, "pinv": 70, "caution": 70, "orthogonalis": 70, "subspac": [70, 71, 72, 77, 264], "explanatori": 70, "explain": 70, "solut": 70, "penalti": 70, "cost": 70, "proper": 71, "riemann": 71, "nearli": 71, "exhibit": 71, "instabl": 71, "tangent_project_spd": [71, 72, 256], "cone_project_spd": [71, 77, 256], "mean_euc_spd": [71, 256], "mean_harm_spd": [71, 256], "mean_logeuc_spd": [71, 256], "mean_geom_spd": [71, 256], "convexcombin": [72, 74, 76, 77, 109, 110, 111], "fill_nan": [72, 74, 76, 77, 109, 110, 111], "truncate_eigenvalu": [72, 74, 76, 77, 109, 110, 111], "cone": [72, 73, 74, 76, 77, 256, 261, 264], "tangenc": [72, 74, 77, 264], "exp": [72, 76, 108], "exponenti": [72, 76, 106, 107, 108], "well": [72, 78, 257], "occur": [72, 74, 76, 77, 109, 110, 111], "promot": [72, 74, 76, 77, 109, 110, 111, 264], "pseudo": [72, 74, 76, 77, 109, 110, 111], "nois": [72, 74, 76, 77, 109, 110, 111], "independ": [72, 74, 76, 77, 109, 110, 111], "uniformli": [72, 74, 76, 77, 109, 110, 111], "degener": [72, 74, 76, 77, 109, 110, 111], "repeat": [72, 74, 76, 77, 109, 110, 111], "nondegeneraci": [72, 74, 76, 77, 109, 110, 111], "truncat": [72, 74, 76, 77, 100, 101, 104, 109, 110, 111], "do": [72, 74, 76, 77, 86, 89, 109, 110, 111, 124, 257], "wise": [73, 74, 76], "familiar": 73, "arithmet": [73, 74], "sum_": [73, 75, 76], "x_": [73, 75, 76], "log": [73, 74, 75, 76, 77, 109, 260, 261], "max_it": 74, "geometr": [74, 264], "descent": 74, "geodes": [74, 105, 264], "brief": 74, "initialis": [74, 143, 145, 146, 257, 261, 264], "back": 74, "now": [74, 101, 102, 103, 104, 119], "becom": 74, "termin": 74, "converg": 74, "frobeniu": 74, "been": 74, "attain": 74, "run": [74, 80, 101, 104, 264], "harmon": 75, "logarithm": [76, 77, 107, 109], "util": [78, 120, 121, 122, 123, 124, 125, 256, 257, 261, 264], "variou": [78, 264], "One": [78, 106], "common": [78, 264], "n_row": 78, "singleton": 78, "channel_dim": 78, "substitut": [78, 143], "batch_siz": 78, "spdiagmm": [78, 256], "dspdmm": [78, 256], "spspmm_full": [78, 256], "as_topk": [78, 256], "full_as_topk": [78, 256], "sparse_astyp": [78, 256], "trace_spspmm": [78, 256], "spspmm": [78, 89, 256], "spsp_pairdiff": [78, 256], "select_indic": [78, 97, 256], "topkx": [78, 256], "sp_block_serialis": [78, 256], "splr_hadamard": [78, 256], "spsp_innerpair": [78, 256], "topk_to_bcoo": [78, 256], "topk_diagzero": [78, 256], "diagreplac": [78, 256], "block_serialis": [78, 256], "descend": [79, 93], "n_block": [80, 85, 91], "retnum": [80, 85, 97], "in_ax": [80, 85], "out_ax": [80, 85], "carrier_fn": 80, "carry_init": 80, "return_carri": 80, "postprocess_fn": 80, "serialis": [80, 85, 91], "memori": [80, 91, 97, 101, 104], "footprint": 80, "call": [80, 87, 97, 143], "keyword": [80, 143], "write": [80, 257], "diag": 81, "full": [82, 92, 97], "prngkei": [83, 128, 129, 130, 131, 264], "threshold_typ": [84, 97, 98], "ab": [84, 97, 98], "top_k": [84, 98], "top_k_reduct": [84, 98], "fix_indices_over_channel_dim": [84, 97, 98], "prepar": 84, "sparsif": 84, "surviv": [84, 98], "jit": [84, 97, 98, 121], "compil": [84, 97, 98, 264], "fix": [84, 97, 98, 264], "allow": [84, 97, 98, 132], "vari": [84, 97, 98], "sp_argnum": 85, "sp_retnum": 85, "sp_retshap": 85, "conveni": [85, 91, 118], "dtype": 86, "unnecessari": 86, "wai": [86, 104, 106, 124, 257, 264], "lh": [87, 89, 90, 91, 92, 98], "rh": [87, 89, 90, 91, 92, 98], "lhs_diag": 87, "vmap": 87, "bilinear": 89, "signatur": [89, 113], "inform": [89, 264], "rightarrow": [89, 126], "schema": 89, "bcoo_dot_gener": 91, "usag": [91, 97, 146, 257], "addition": [91, 143, 265], "pre": [91, 257, 264], "topktensor": [91, 98], "hand": [91, 98], "side": [91, 98], "split": [91, 264], "unstructur": 96, "auto_index": 97, "step": [97, 106, 264], "trace": 98, "system": [99, 143, 264], "spherical_geodes": [99, 101, 256], "sphere_to_norm": [99, 256], "sphere_to_latlong": [99, 256], "spatial_conv": [99, 100, 104, 256], "spherical_conv": [99, 256], "euclidean_conv": [99, 256], "max_bin": [100, 101, 104], "10000": [100, 101, 104], "spatial": [100, 101, 104, 143], "kernel_gaussian": 101, "associ": [101, 104, 143], "load": [101, 143, 264], "shorter": 101, "n_i": 101, "spheric": [101, 102, 103, 105, 143, 256, 261, 264], "great": [101, 105], "circl": [101, 105], "try": [101, 104], "decreas": [101, 104], "data_conv": [101, 104], "normal": [102, 103, 105], "latitud": [102, 103, 105], "longitud": [102, 103, 105], "z": [102, 103], "centr": [102, 103, 256, 261], "pretti": 104, "much": 104, "dumbest": 104, "like": [104, 106, 115, 143, 257, 264, 265], "lie": 104, "thing": 104, "openreview": 104, "net": 104, "pdf": 104, "id": 104, "hkbd5xzrb": 104, "haversin": 105, "pleas": [105, 253], "express": [105, 143], "n_x": 105, "n_y": 105, "surfac": [105, 143, 264], "just": 105, "get": 105, "don": 105, "t": [105, 264], "dist": 105, "brainnetcnn": 106, "equip": 106, "induct": 106, "favour": 106, "learn": [106, 114, 117, 257], "unord": 106, "design": [106, 143, 257, 264], "analogi": 106, "There": [106, 124], "still": [106, 143, 257], "lot": 106, "quirk": 106, "usabl": 106, "crosshair_similar": 106, "remove_diagon": [106, 126], "local": [106, 257], "bank": 106, "summari": 106, "c_": 106, "precursor": 106, "nonsquar": 106, "bipartit": 106, "count": 106, "doubl": 106, "attribut": [106, 143], "subject": 106, "parametris": 106, "symexp": [107, 256], "symlog": [107, 256], "symsqrt": [107, 256], "symmap": [108, 109, 111, 256, 261], "q_x": [108, 109, 111], "lambda_x": [108, 109, 111], "recompos": [108, 109, 111], "principl": [108, 111, 257, 264], "faster": [108, 110, 111], "robust": [108, 111], "expm": 108, "stabl": [108, 110], "recommend": [108, 259], "infeas": [109, 111], "guard": [109, 110, 111], "against": [109, 110, 111], "funm": 110, "hermitian": 110, "reli": 110, "round": [110, 111], "sqrtm": 111, "conv": [112, 256], "tsconv2d": [112, 117, 256], "basischan": [112, 256], "basisconv2d": [112, 246, 256], "polychan": [112, 256], "polyconv2d": [112, 246, 256], "tsconv": [113, 114, 115, 116, 117, 118, 256, 261], "basis_funct": [113, 114], "include_const": [113, 114, 116, 117], "ith": [113, 114, 116, 117], "constitut": [113, 256], "constant": [113, 114, 116, 117, 145], "pad": [114, 115, 117, 118], "conv_fn": [114, 117, 118], "view": [114, 117, 118, 265], "sequenti": [114, 117], "past": [114, 117], "futur": [114, 117], "permit": [114, 117], "divers": [114, 117], "consist": [114, 117], "penalis": [114, 117], "spread": [114, 117], "conv2d": [114, 117], "stride": 115, "dilat": 115, "basic": [115, 257, 264], "pilfer": 115, "stackoverflow": 115, "question": [115, 257, 265], "69571976": 115, "grad": [115, 264], "rais": [116, 117], "zeroth": 116, "alreadi": 117, "configur": [118, 257, 264], "hideou": 119, "disorganis": 119, "hopefulli": 119, "somedai": 119, "disappear": 119, "altogeth": 119, "move": 119, "elsewher": 119, "sad": 119, "blemish": 119, "conform_mask": [119, 121, 256], "apply_mask": [119, 124, 256], "mask_tensor": [119, 121, 256], "complex_decompos": [119, 123, 256], "complex_recompos": [119, 122, 256], "amplitude_appli": [119, 256], "func": 120, "decor": 120, "msk": 121, "strongli": 121, "discourag": 121, "incompat": 121, "ampl": [122, 123], "store": 123, "almost": 124, "certainli": [124, 257], "better": [124, 143], "sylo": [126, 256, 258, 261, 263], "row_compressor": 126, "col_compressor": 126, "renormalis": 126, "fold_channel": 126, "compress": [126, 261, 263], "h_": 126, "w_": 126, "compressor": 126, "sample_window": [127, 256], "sample_nonoverlapping_windows_existing_ax": [127, 256], "sample_nonoverlapping_windows_new_ax": [127, 256], "sample_overlapping_windows_new_ax": [127, 256], "sample_overlapping_windows_existing_ax": [127, 256], "window_s": [128, 129, 130, 131], "num_window": [128, 129, 130, 131], "windowing_axi": [128, 129, 130, 131], "multiplying_axi": [128, 129, 130, 131, 132], "allow_overlap": 132, "create_new_axi": 132, "overlap": [132, 143], "insert": 132, "baseatla": [133, 258], "dirichletinitbaseatla": [133, 258], "discretevolumetricatla": [133, 258], "multivolumetricatla": [133, 258], "multifilevolumetricatla": [133, 258], "cortexsubcortexciftiatla": [133, 258], "dirichletinitvolumetricatla": [133, 258], "dirichletinitsurfaceatla": [133, 258], "atlasinit": [133, 258], "class": [143, 221, 258, 261, 263, 264], "init": [143, 145, 146, 257, 261], "_phantomreferencemixin": [143, 258], "unimport": 143, "distribut": [143, 146, 264], "imag": [143, 264], "_ciftireferencemixin": [143, 258], "cifti": 143, "model_axi": 143, "facilit": 143, "access": 143, "loader": 143, "_objectreferencemixin": 143, "_singlereferencemixin": 143, "to_imag": 143, "_logicmaskmixin": [143, 258], "overal": 143, "inclus": 143, "statu": 143, "path": 143, "file": [143, 264], "nest": 143, "logic": [143, 258, 261], "tree": 143, "maskintersect": [143, 258], "maskthreshold": [143, 258], "filesystem": 143, "leaf": 143, "_cortexsubcortexciftimaskmixin": [143, 258], "cortic": 143, "subcort": 143, "compart": 143, "medial": 143, "wall": 143, "exclus": 143, "_fromnullmaskmixin": [143, 258], "exclud": 143, "background": 143, "discret": [143, 264], "label": 143, "_singlecompartmentmixin": [143, 258], "isol": 143, "subcompart": 143, "atlas": [143, 264], "_multicompartmentmixin": [143, 258], "With": 143, "extra": 143, "constructor": 143, "name": 143, "_cortexsubcortexcifticompartmentmixin": [143, 258], "hemispher": 143, "_discretelabelmixin": [143, 258], "decod": 143, "present": [143, 265], "_continuouslabelmixin": [143, 258], "scheme": [143, 257, 261], "discretelabelmixin": 143, "_dirichletlabelmixin": [143, 258], "dirichlet": [143, 258, 261, 264], "prior": 143, "dictionari": 143, "compartment_label": 143, "object": 143, "parcel": [143, 264], "These": [143, 264], "instanti": [143, 264], "_volumetricmeshmixin": [143, 258], "establish": 143, "evenli": 143, "volumetr": [143, 264], "_vertexciftimeshmixin": [143, 258], "topologi": 143, "_evenlysampledconvmixin": [143, 258], "smooth": 143, "substanti": [143, 257], "_spatialconvmixin": [143, 258], "from_distr_init_": [144, 258], "constant_init_": [144, 258], "identity_init_": [144, 258], "domaininitialis": [144, 258], "distributioninitialis": [144, 258], "constantinitialis": [144, 258], "kwarg": [145, 146], "throughout": 145, "constant_init": 145, "mappedinitialis": [145, 146], "from_distr_init": 146, "atanh": [153, 258], "logit": [153, 258], "multilogit": [153, 258], "unitnormspher": [153, 258], "amplitudeatanh": [153, 258], "amplitudemultilogit": [153, 258], "clip": [160, 258], "ood": [160, 258], "handler": [160, 258], "_domain": [160, 258], "_phaseamplitudedomain": [160, 258], "freqfilterspec": [168, 258, 264], "freqfilter_init_": [168, 258], "clamp_init_": [168, 258], "tangencyinit": [176, 258], "tangency_init_": [176, 258], "semidefinitemean": [176, 258], "spdeuclideanmean": [176, 258], "spdharmonicmean": [176, 258], "spdlogeuclideanmean": [176, 258], "spdgeometricmean": [176, 258, 264], "match_spectra": [205, 262], "match_covari": [205, 262], "match_refer": [205, 262], "match_cov_and_spectrum": [205, 262], "synthesise_match": [205, 262, 264], "synthesise_from_cov_and_spectrum": [205, 262], "correlationnorm": [212, 263], "atlaslinear": [215, 263], "linearrfnn": 217, "linearcombinationselector": 217, "eliminationselector": 217, "basecovari": [221, 263], "unarycovari": [221, 263], "unarycovariancetw": [221, 263], "unarycovarianceuw": [221, 263], "binarycovari": [221, 263, 264], "binarycovariancetw": [221, 263], "binarycovarianceuw": [221, 263], "spectralinterpol": [231, 263], "linearinterpol": [231, 263], "hybridinterpol": [231, 263], "tangentproject": [238, 263, 264], "batchtangentproject": [238, 263], "syloresnet": [243, 263], "timeseriesconv2d": 246, "verticalcompress": [250, 263], "preprint": [253, 265], "interfac": 256, "nn": [256, 257, 261], "atom": 256, "program": [256, 264], "compos": [256, 257], "mass": [256, 261], "miscellan": [256, 261], "softwar": 257, "librari": [257, 264], "tool": [257, 264], "fulli": 257, "build": 257, "framework": [257, 259, 264], "gpu": [257, 259, 264], "acceler": [257, 259, 264], "At": 257, "develop": [257, 264], "neuroimag": [257, 264], "field": 257, "advent": 257, "public": 257, "repositori": [257, 265], "brought": 257, "prolifer": 257, "instrument": 257, "analys": 257, "challeng": 257, "reproduc": 257, "scientif": 257, "workflow": [257, 264], "know": 257, "ve": [257, 265], "suit": 257, "answer": 257, "ask": 257, "problem": 257, "combinatori": 257, "go": [257, 265], "beyond": [257, 264], "best": 257, "particularli": [257, 264], "built": 257, "upon": 257, "deep": 257, "deploi": 257, "focu": 257, "fmri": 257, "eventu": 257, "warn": 257, "state": [257, 264], "fragil": 257, "incomplet": 257, "cover": 257, "bug": 257, "lurk": 257, "break": 257, "chang": 257, "refin": 257, "contribut": 257, "idea": 257, "improv": 257, "welcom": [257, 265], "incipi": 257, "hub": 257, "fairli": 257, "minim": 257, "princip": 257, "focus": 257, "loss": [257, 261], "guidelin": 257, "simpl": 257, "exampl": [257, 259], "port": 257, "test": 257, "soon": 257, "unstabl": 257, "submodul": 257, "engin": [257, 261], "benchmark": [257, 261], "visualis": [257, 261], "instal": 257, "technic": 257, "overview": 257, "formula": 257, "grammar": 257, "viz": [257, 261], "eval": [257, 261], "neuro": [257, 261, 264], "neurosci": [257, 261], "search": 257, "page": 257, "atlasmixin": [258, 261], "mixin": [258, 261], "referencemixin": 258, "maskmixin": 258, "compartmentmixin": 258, "labelmixin": 258, "meshmixin": 258, "convmixin": 258, "deltaplu": [258, 261], "deltaplus_init": 258, "deltaplusinit": 258, "dirichlet_init": 258, "dirichletinit": 258, "domainbas": [258, 261], "mapper": [258, 261], "freqfilt": [258, 261, 263], "iirfilt": [258, 261, 263], "iir": [258, 261, 263], "iirfilterspec": 258, "laplace_init": 258, "laplaceinit": 258, "maskuthreshold": 258, "maskdil": 258, "maskeros": 258, "maskopen": 258, "maskclos": 258, "maskfillhol": 258, "maskneg": 258, "maskunion": 258, "floatleaf": 258, "maskleaf": 258, "mpbl": [258, 261], "toeplitz_init": 258, "toeplitzinit": 258, "python": [259, 264], "pip": 259, "rciric": 259, "archiv": 259, "tar": 259, "gz": 259, "cuda": 259, "cudnn": 259, "pytorch": 259, "underli": 259, "lossappli": [260, 261], "reducingloss": [260, 261], "auto_tol": [260, 261], "batchcorrel": [260, 261], "qcfc": [260, 261], "hemisphericteth": [260, 261], "logdetcorr": 260, "detcorr": 260, "logdet": 260, "vectordispers": [260, 261], "entropi": [260, 261], "softmaxentropi": [260, 261], "equilibrium": [260, 261], "softmaxequilibrium": [260, 261], "hingeloss": [260, 261], "jsdiverg": [260, 261], "softmaxjsdiverg": [260, 261], "modularityloss": [260, 261], "multivariatekurtosi": [260, 261], "normedloss": [260, 261], "unilateralnormedloss": [260, 261], "constraintviol": [260, 261], "lossschem": [260, 261], "secondmo": [260, 261], "moment": [260, 261], "secondmomentcentr": 260, "smoothnesspenalti": [260, 261], "symmetricbimod": [260, 261], "symmetricbimodalnorm": 260, "synth": [261, 262, 264], "synthesi": [261, 262], "recombin": [261, 263], "spdnois": [261, 263], "svm": [261, 263], "vertcom": [261, 263], "windowamplifi": [261, 263], "extens": 264, "conjunct": 264, "ecosystem": 264, "readi": 264, "outsid": 264, "research": 264, "theoret": 264, "detect": 264, "contamin": 264, "regress": 264, "approxim": 264, "cortex": 264, "complic": 264, "equinox": 264, "mechan": 264, "incorpor": 264, "knowledg": 264, "start": 264, "brain": 264, "probabilist": 264, "mode": 264, "complementarili": 264, "mapparam": 264, "particular": 264, "simplex": 264, "train": 264, "excel": 264, "optax": 264, "optimis": 264, "composition": 264, "scalaris": 264, "scalar": 264, "purpos": 264, "intern": 264, "fslmath": 264, "manipul": 264, "syntax": 264, "address": 264, "alia": 264, "pyvista": 264, "3d": 264, "plot": 264, "read": 264, "report": 264, "show": 264, "magnitud": 264, "serv": 264, "illustr": 264, "astut": 264, "reader": 264, "remark": 264, "sever": 264, "oversimplifi": 264, "decis": 264, "intent": 264, "vignett": 264, "intend": 264, "instruct": 264, "regard": 264, "json": 264, "functool": 264, "pkg_resourc": 264, "resource_filenam": 264, "pkgrf": 264, "eqx": 264, "panda": 264, "pd": 264, "confoundformulagrammar": 264, "dirichletinitialis": 264, "mappedlogit": 264, "bimodal_symmetr": 264, "vnorm_scalaris": 264, "frequencydomainfilt": 264, "synthet": 264, "max_epoch": 264, "log_interv": 264, "n_subject": 264, "n_voxel": 264, "400": 264, "n_time_point": 264, "200": 264, "n_channel": 264, "4": 264, "Or": 264, "trainabl": 264, "pipelin": 264, "multivers": 264, "data_kei": 264, "filter_kei": 264, "cov_kei": 264, "proj_kei": 264, "human": 264, "ref_path": 264, "regt": 264, "schaefer400_desc": 264, "synth_t": 264, "tsv": 264, "ref_data": 264, "read_csv": 264, "sep": 264, "header": 264, "let": 264, "36": 264, "desc": 264, "confounds_timeseri": 264, "metadata": 264, "model_36p": 264, "dd1": 264, "rp": 264, "wm": 264, "csf": 264, "gsr": 264, "model_censor": 264, "scatter": 264, "OR": 264, "1_": 264, "fd": 264, "dv": 264, "model_formula": 264, "pars": 264, "fillna": 264, "re": [264, 265], "ideal": 264, "bandpass": 264, "01": 264, "hz": 264, "high_pass": 264, "low_pass": 264, "filter_spec": 264, "wn": 264, "ftype": 264, "proj_spec": 264, "from_spec": 264, "time_dim": 264, "attenu": 264, "out_channel": 264, "concentr": 264, "probabilitysimplexparamet": 264, "categor": 264, "init_data": 264, "proj": 264, "mean_spec": 264, "def": 264, "__call__": 264, "bimod": 264, "weak": 264, "strong": 264, "vnorm": 264, "later": 264, "ll": 264, "minimis": 264, "7": 264, "adam": 264, "rate": 264, "5e": 264, "opt": 264, "opt_stat": 264, "is_inexact_arrai": 264, "updat": [264, 265], "filter_value_and_grad": 264, "apply_upd": 264, "9": 264, "loop": 264, "filter_jit": 264, "fold_in": 264, "print": 264, "3f": 264, "ohbm": 265, "unfortun": 265, "am": 265, "abl": 265, "invit": 265, "feel": 265, "free": 265, "reach": 265, "would": 265, "discuss": 265, "my": 265, "contact": 265, "email": 265, "arxiv": 265, "star": 265, "toward": 265, "releas": 265}, "objects": {"hypercoil": [[254, 0, 0, "-", "engine"], [256, 0, 0, "-", "functional"]], "hypercoil.functional": [[1, 0, 0, "-", "activation"], [6, 0, 0, "-", "cmass"], [11, 0, 0, "-", "connectopy"], [14, 0, 0, "-", "cov"], [24, 0, 0, "-", "fourier"], [34, 0, 0, "-", "graph"], [40, 0, 0, "-", "interpolate"], [45, 0, 0, "-", "kernel"], [56, 0, 0, "-", "matrix"], [71, 0, 0, "-", "semidefinite"], [78, 0, 0, "-", "sparse"], [99, 0, 0, "-", "sphere"], [106, 0, 0, "-", "sylo"], [107, 0, 0, "-", "symmap"], [112, 0, 0, "-", "tsconv"], [119, 0, 0, "-", "utils"], [127, 0, 0, "-", "window"]], "hypercoil.functional.activation": [[2, 1, 1, "", "amplitude_atanh"], [3, 1, 1, "", "amplitude_tanh"], [4, 1, 1, "", "corrnorm"], [5, 1, 1, "", "isochor"]], "hypercoil.functional.cmass": [[7, 1, 1, "", "cmass"], [8, 1, 1, "", "cmass_coor"], [9, 1, 1, "", "cmass_reference_displacement"], [9, 1, 1, "", "cmass_reference_displacement_grid"], [10, 1, 1, "", "diffuse"]], "hypercoil.functional.connectopy": [[12, 1, 1, "", "diffusion_mapping"], [13, 1, 1, "", "laplacian_eigenmaps"]], "hypercoil.functional.cov": [[15, 1, 1, "", "conditionalcorr"], [16, 1, 1, "", "conditionalcov"], [17, 1, 1, "", "corr"], [18, 1, 1, "", "cov"], [19, 1, 1, "", "pairedcorr"], [20, 1, 1, "", "pairedcov"], [21, 1, 1, "", "partialcorr"], [22, 1, 1, "", "partialcov"], [23, 1, 1, "", "precision"]], "hypercoil.functional.fourier": [[25, 1, 1, "", "analytic_signal"], [26, 1, 1, "", "env_inst"], [27, 1, 1, "", "envelope"], [28, 1, 1, "", "hilbert_transform"], [29, 1, 1, "", "instantaneous_frequency"], [30, 1, 1, "", "instantaneous_phase"], [31, 1, 1, "", "product_filter"], [32, 1, 1, "", "product_filtfilt"], [33, 1, 1, "", "unwrap"]], "hypercoil.functional.graph": [[35, 1, 1, "", "coaffiliation"], [36, 1, 1, "", "girvan_newman_null"], [37, 1, 1, "", "graph_laplacian"], [38, 1, 1, "", "modularity_matrix"], [39, 1, 1, "", "relaxed_modularity"]], "hypercoil.functional.interpolate": [[41, 1, 1, "", "hybrid_interpolate"], [42, 1, 1, "", "linear_interpolate"], [43, 1, 1, "", "spectral_interpolate"], [44, 1, 1, "", "weighted_interpolate"]], "hypercoil.functional.kernel": [[46, 1, 1, "", "corr_kernel"], [47, 1, 1, "", "cosine_kernel"], [48, 1, 1, "", "cov_kernel"], [49, 1, 1, "", "gaussian_kernel"], [50, 1, 1, "", "linear_distance"], [51, 1, 1, "", "linear_kernel"], [52, 1, 1, "", "param_norm"], [53, 1, 1, "", "polynomial_kernel"], [54, 1, 1, "", "rbf_kernel"], [55, 1, 1, "", "sigmoid_kernel"]], "hypercoil.functional.matrix": [[58, 1, 1, "", "delete_diagonal"], [59, 1, 1, "", "diag_embed"], [60, 1, 1, "", "expand_outer"], [61, 1, 1, "", "fill_diagonal"], [62, 1, 1, "", "recondition_eigenspaces"], [63, 1, 1, "", "spd"], [64, 1, 1, "", "squareform"], [65, 1, 1, "", "sym2vec"], [66, 1, 1, "", "symmetric"], [67, 1, 1, "", "toeplitz"], [68, 1, 1, "", "toeplitz_2d"], [69, 1, 1, "", "vec2sym"]], "hypercoil.functional.resid": [[70, 1, 1, "", "residualise"]], "hypercoil.functional.semidefinite": [[72, 1, 1, "", "cone_project_spd"], [73, 1, 1, "", "mean_euc_spd"], [74, 1, 1, "", "mean_geom_spd"], [75, 1, 1, "", "mean_harm_spd"], [76, 1, 1, "", "mean_logeuc_spd"], [77, 1, 1, "", "tangent_project_spd"]], "hypercoil.functional.sparse": [[79, 1, 1, "", "as_topk"], [80, 1, 1, "", "block_serialise"], [81, 1, 1, "", "dspdmm"], [82, 1, 1, "", "full_as_topk"], [83, 1, 1, "", "random_sparse"], [84, 1, 1, "", "select_indices"], [85, 1, 1, "", "sp_block_serialise"], [86, 1, 1, "", "sparse_astype"], [87, 1, 1, "", "spdiagmm"], [88, 1, 1, "", "splr_hadamard"], [89, 1, 1, "", "spsp_innerpaired"], [90, 1, 1, "", "spsp_pairdiff"], [91, 1, 1, "", "spspmm"], [92, 1, 1, "", "spspmm_full"], [93, 1, 1, "", "topk"], [95, 1, 1, "", "topk_diagzero"], [96, 1, 1, "", "topk_to_bcoo"], [97, 1, 1, "", "topkx"], [98, 1, 1, "", "trace_spspmm"]], "hypercoil.functional.sphere": [[100, 1, 1, "", "euclidean_conv"], [101, 1, 1, "", "spatial_conv"], [102, 1, 1, "", "sphere_to_latlong"], [103, 1, 1, "", "sphere_to_normals"], [104, 1, 1, "", "spherical_conv"], [105, 1, 1, "", "spherical_geodesic"]], "hypercoil.functional.sylo": [[106, 1, 1, "", "sylo"], [126, 1, 1, "", "vertical_compression"]], "hypercoil.functional.symmap": [[108, 1, 1, "", "symexp"], [109, 1, 1, "", "symlog"], [110, 1, 1, "", "symmap"], [111, 1, 1, "", "symsqrt"]], "hypercoil.functional.tsconv": [[113, 1, 1, "", "basischan"], [114, 1, 1, "", "basisconv2d"], [115, 1, 1, "", "conv"], [116, 1, 1, "", "polychan"], [117, 1, 1, "", "polyconv2d"], [118, 1, 1, "", "tsconv2d"]], "hypercoil.functional.utils": [[120, 1, 1, "", "amplitude_apply"], [121, 1, 1, "", "apply_mask"], [122, 1, 1, "", "complex_decompose"], [123, 1, 1, "", "complex_recompose"], [124, 1, 1, "", "conform_mask"], [125, 1, 1, "", "mask_tensor"]], "hypercoil.functional.window": [[128, 1, 1, "", "sample_nonoverlapping_windows_existing_ax"], [129, 1, 1, "", "sample_nonoverlapping_windows_new_ax"], [130, 1, 1, "", "sample_overlapping_windows_existing_ax"], [131, 1, 1, "", "sample_overlapping_windows_new_ax"], [132, 1, 1, "", "sample_windows"]], "hypercoil.init": [[143, 0, 0, "-", "atlasmixins"], [144, 0, 0, "-", "base"]], "hypercoil.init.atlasmixins": [[143, 2, 1, "", "_CIfTIReferenceMixin"], [143, 2, 1, "", "_ContinuousLabelMixin"], [143, 2, 1, "", "_CortexSubcortexCIfTICompartmentMixin"], [143, 2, 1, "", "_CortexSubcortexCIfTIMaskMixin"], [143, 2, 1, "", "_DirichletLabelMixin"], [143, 2, 1, "", "_DiscreteLabelMixin"], [143, 2, 1, "", "_EvenlySampledConvMixin"], [143, 2, 1, "", "_FromNullMaskMixin"], [143, 2, 1, "", "_LogicMaskMixin"], [143, 2, 1, "", "_MultiCompartmentMixin"], [143, 2, 1, "", "_PhantomReferenceMixin"], [143, 2, 1, "", "_SingleCompartmentMixin"], [143, 2, 1, "", "_SpatialConvMixin"], [143, 2, 1, "", "_VertexCIfTIMeshMixin"], [143, 2, 1, "", "_VolumetricMeshMixin"]], "hypercoil.init.base": [[145, 1, 1, "", "ConstantInitialiser"], [146, 1, 1, "", "DistributionInitialiser"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"]}, "titleterms": {"orient_and_conform": 0, "activ": [1, 212], "function": [1, 106, 188, 212, 256, 257, 264], "amplitude_atanh": 2, "amplitude_tanh": 3, "corrnorm": 4, "isochor": [5, 214], "psd": 5, "normalis": [5, 165, 213, 214], "cmass": [6, 7], "centr": [6, 7, 8, 9, 10], "mass": [6, 7, 8, 9, 10], "arrai": 7, "coordin": [7, 8, 99], "cmass_coor": 8, "ani": 8, "displac": 9, "from": 9, "refer": [9, 261], "diffus": 10, "around": 10, "connectopi": [11, 188], "connectop": 11, "manifold": 11, "diffusion_map": 12, "laplacian_eigenmap": 13, "cov": [14, 18, 221], "covari": [14, 16, 18, 20, 22, 23, 221, 222], "correl": [14, 15, 17, 19, 21, 213], "conditionalcorr": 15, "condit": [15, 16], "conditionalcov": 16, "corr": 17, "pearson": 17, "pairedcorr": 19, "pair": [19, 20], "pairedcov": 20, "partialcorr": 21, "partial": [21, 22], "partialcov": 22, "precis": 23, "invers": 23, "fourier": 24, "frequenc": [24, 168, 229], "domain": [24, 153, 160, 229], "filter": [24, 32, 172, 229, 230], "analytic_sign": 25, "env_inst": 26, "envelop": 27, "hilbert_transform": 28, "instantaneous_frequ": 29, "instantaneous_phas": 30, "product_filt": 31, "product_filtfilt": 32, "zero": 32, "phase": [32, 33], "unwrap": 33, "graph": [34, 37], "network": [34, 263], "coaffili": 35, "commun": 35, "girvan_newman_nul": 36, "graph_laplacian": 37, "laplacian": 37, "modularity_matrix": 38, "relaxed_modular": 39, "interpol": [40, 41, 42, 231], "imput": 40, "hybrid_interpol": 41, "linear": [41, 42, 164, 216], "spectral": 41, "linear_interpol": 42, "spectral_interpol": 43, "weighted_interpol": 44, "kernel": 45, "parameteris": [45, 264], "corr_kernel": 46, "cosine_kernel": 47, "cov_kernel": 48, "gaussian_kernel": 49, "linear_dist": 50, "linear_kernel": 51, "param_norm": 52, "polynomial_kernel": 53, "rbf_kernel": 54, "sigmoid_kernel": 55, "matrix": [56, 78, 107], "oper": [56, 78], "invert_spd": 57, "delete_diagon": 58, "diag_emb": 59, "expand_out": 60, "fill_diagon": 61, "recondition_eigenspac": 62, "spd": 63, "squareform": 64, "sym2vec": 65, "symmetr": [66, 107], "toeplitz": [67, 180], "toeplitz_2d": 68, "vec2sym": 69, "residualis": [70, 237], "semidefinit": [71, 176, 238], "posit": 71, "cone": 71, "cone_project_spd": 72, "mean_euc_spd": 73, "mean_geom_spd": 74, "mean_harm_spd": 75, "mean_logeuc_spd": 76, "tangent_project_spd": 77, "spars": 78, "top": 78, "k": 78, "bcoo": 78, "format": 78, "as_topk": 79, "block_serialis": 80, "dspdmm": 81, "full_as_topk": 82, "random_spars": 83, "select_indic": 84, "sp_block_serialis": 85, "sparse_astyp": 86, "spdiagmm": 87, "splr_hadamard": 88, "spsp_innerpair": 89, "spsp_pairdiff": 90, "spspmm": 91, "spspmm_full": 92, "topk": 93, "diagreplac": 94, "topk_diagzero": 95, "topk_to_bcoo": 96, "topkx": 97, "trace_spspmm": 98, "sphere": 99, "spheric": 99, "euclidean_conv": 100, "spatial_conv": 101, "sphere_to_latlong": 102, "sphere_to_norm": 103, "spherical_conv": 104, "spherical_geodes": 105, "sylo": [106, 179, 243, 244], "symmap": [107, 110], "map": [107, 257], "symexp": 108, "symlog": 109, "symsqrt": 111, "tsconv": [112, 246], "time": [112, 246], "seri": [112, 246], "convolut": [112, 246], "basischan": 113, "basisconv2d": [114, 247], "conv": 115, "polychan": 116, "polyconv2d": [117, 248], "tsconv2d": 118, "util": [119, 262], "miscellan": 119, "amplitude_appli": 120, "apply_mask": 121, "complex_decompos": 122, "complex_recompos": 123, "conform_mask": 124, "mask_tensor": 125, "vertical_compress": 126, "window": 127, "random": 127, "sample_nonoverlapping_windows_existing_ax": 128, "sample_nonoverlapping_windows_new_ax": 129, "sample_overlapping_windows_existing_ax": 130, "sample_overlapping_windows_new_ax": 131, "sample_window": 132, "atla": [133, 143, 215, 216], "initialis": [133, 144, 258], "content": [133, 257, 258], "atlasinit": 134, "baseatla": 135, "cortexsubcortexciftiatla": 136, "dirichletinitbaseatla": 137, "dirichletinitsurfaceatla": 138, "dirichletinitvolumetricatla": 139, "discretevolumetricatla": 140, "multivolumetricatla": 141, "multifilevolumetricatla": 142, "atlasmixin": 143, "mixin": 143, "referencemixin": 143, "maskmixin": 143, "compartmentmixin": 143, "labelmixin": 143, "meshmixin": 143, "convmixin": 143, "base": [144, 160, 189, 202, 222], "constantinitialis": 145, "distributioninitialis": 146, "domaininitialis": 147, "constant_init_": 148, "from_distr_init_": 149, "identity_init_": 150, "deltaplu": 151, "deltaplus_init": 151, "deltaplusinit": 151, "dirichlet": 152, "dirichlet_init": 152, "dirichletinit": 152, "mapper": [153, 160], "amplitudeatanh": 154, "amplitudemultilogit": 155, "atanh": 156, "logit": 157, "multilogit": 158, "unitnormspher": 159, "domainbas": 160, "class": [160, 222], "affin": 161, "clip": 162, "ood": [162, 165], "handler": [162, 165], "ident": 163, "_domain": 166, "_phaseamplitudedomain": 167, "freqfilt": [168, 229], "band": 168, "init": [168, 172, 258, 264], "freqfilterspec": 169, "clamp_init_": 170, "freqfilter_init_": 171, "iirfilt": [172, 230], "iir": [172, 230], "iirfilterspec": 172, "laplac": 173, "laplace_init": 173, "laplaceinit": 173, "mask": 174, "logic": 174, "maskthreshold": 174, "maskuthreshold": 174, "maskdil": 174, "maskeros": 174, "maskopen": 174, "maskclos": 174, "maskfillhol": 174, "maskneg": 174, "maskunion": 174, "maskintersect": 174, "floatleaf": 174, "maskleaf": 174, "mpbl": 175, "semidefinitemean": 177, "spdeuclideanmean": 177, "spdharmonicmean": 177, "spdlogeuclideanmean": 177, "spdgeometricmean": 177, "tangencyinit": 178, "tangency_init_": 178, "toeplitz_init": 180, "toeplitzinit": 180, "lossappli": 181, "reducingloss": 182, "batchcorrel": 183, "qcfc": 184, "auto_tol": 185, "compact": 186, "hemisphericteth": 187, "loss": [188, 189, 202, 260, 264], "determin": 189, "log": 189, "logdetcorr": 189, "detcorr": 189, "logdet": 189, "vectordispers": 190, "entropi": 191, "softmaxentropi": 191, "equilibrium": 192, "softmaxequilibrium": 192, "hingeloss": 193, "jsdiverg": 194, "softmaxjsdiverg": 194, "modularityloss": 195, "multivariatekurtosi": 196, "constraintviol": 197, "normedloss": 198, "unilateralnormedloss": 199, "wmean": 200, "lossschem": 201, "secondmo": 202, "second": 202, "moment": 202, "secondmomentcentr": 202, "smoothnesspenalti": 203, "symmetricbimod": 204, "symmetricbimodalnorm": 204, "synth": 205, "data": [205, 262], "synthesi": 205, "match_cov_and_spectrum": 206, "match_covari": 207, "match_refer": 208, "match_spectra": 209, "synthesise_from_cov_and_spectrum": 210, "synthesise_match": 211, "modul": [212, 221, 263], "correlationnorm": 213, "layer": [215, 216, 229, 230, 231], "atlaslinear": 216, "confound": 217, "model": 217, "eliminationselector": 218, "linearcombinationselector": 219, "linearrfnn": 220, "basecovari": 222, "binarycovari": 223, "binarycovariancetw": 224, "binarycovarianceuw": 225, "unarycovari": 226, "unarycovariancetw": 227, "unarycovarianceuw": 228, "hybridinterpol": 232, "linearinterpol": 233, "spectralinterpol": 234, "recombin": [235, 236], "batchtangentproject": 239, "tangentproject": 240, "spdnois": 241, "svm": 242, "syloresnet": 245, "timeseriesconv2d": 249, "vertcom": 250, "vertex": 250, "compress": 250, "verticalcompress": 251, "windowamplifi": 252, "framework": 253, "engin": 254, "differenti": [254, 257, 264], "eval": 255, "benchmark": 255, "evalu": 255, "A": [257, 264], "program": 257, "brain": 257, "about": 257, "remark": 257, "indic": 257, "tabl": 257, "scheme": 258, "instal": 259, "regularis": 260, "api": 261, "neuro": 262, "neurosci": 262, "nn": [263, 264], "neural": 263, "technic": 264, "overview": 264, "compos": 264, "learn": 264, "signal": 264, "formula": 264, "grammar": 264, "viz": [264, 266], "visualis": [264, 266], "simpl": 264, "exampl": 264, "poster": 265, "land": 265, "page": 265}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"orient_and_conform": [[0, "orient-and-conform"]], "activation: Activation functions": [[1, "activation-activation-functions"]], "amplitude_atanh": [[2, "amplitude-atanh"]], "amplitude_tanh": [[3, "amplitude-tanh"]], "corrnorm": [[4, "corrnorm"]], "isochor: PSD normalisation": [[5, "isochor-psd-normalisation"]], "cmass: Centre of mass": [[6, "cmass-centre-of-mass"]], "cmass: Centre of mass, array coordinates": [[7, "cmass-centre-of-mass-array-coordinates"]], "cmass_coor: Centre of mass, any coordinates": [[8, "cmass-coor-centre-of-mass-any-coordinates"]], "Displacement from a reference centre of mass": [[9, "displacement-from-a-reference-centre-of-mass"]], "diffuse: Diffuseness around centre of mass": [[10, "diffuse-diffuseness-around-centre-of-mass"]], "connectopy: Connectopic manifolds": [[11, "connectopy-connectopic-manifolds"]], "diffusion_mapping": [[12, "diffusion-mapping"]], "laplacian_eigenmaps": [[13, "laplacian-eigenmaps"]], "cov: Covariances and correlations": [[14, "cov-covariances-and-correlations"]], "conditionalcorr: Conditional correlation": [[15, "conditionalcorr-conditional-correlation"]], "conditionalcov: Conditional covariance": [[16, "conditionalcov-conditional-covariance"]], "corr: Pearson correlation": [[17, "corr-pearson-correlation"]], "cov: Covariance": [[18, "cov-covariance"]], "pairedcorr: Paired correlation": [[19, "pairedcorr-paired-correlation"]], "pairedcov: Paired covariance": [[20, "pairedcov-paired-covariance"]], "partialcorr: Partial correlation": [[21, "partialcorr-partial-correlation"]], "partialcov: Partial covariance": [[22, "partialcov-partial-covariance"]], "precision: Inverse covariance (precision)": [[23, "precision-inverse-covariance-precision"]], "fourier: Frequency-domain filter": [[24, "fourier-frequency-domain-filter"]], "analytic_signal": [[25, "analytic-signal"]], "env_inst": [[26, "env-inst"]], "envelope": [[27, "envelope"]], "hilbert_transform": [[28, "hilbert-transform"]], "instantaneous_frequency": [[29, "instantaneous-frequency"]], "instantaneous_phase": [[30, "instantaneous-phase"]], "product_filter": [[31, "product-filter"]], "product_filtfilt: Zero-phase filter": [[32, "product-filtfilt-zero-phase-filter"]], "unwrap: Unwrap phase": [[33, "unwrap-unwrap-phase"]], "graph: Graphs and networks": [[34, "graph-graphs-and-networks"]], "coaffiliation: Community coaffiliation": [[35, "coaffiliation-community-coaffiliation"]], "girvan_newman_null": [[36, "girvan-newman-null"]], "graph_laplacian: Graph Laplacian": [[37, "graph-laplacian-graph-laplacian"]], "modularity_matrix": [[38, "modularity-matrix"]], "relaxed_modularity": [[39, "relaxed-modularity"]], "interpolate: Interpolation and imputation": [[40, "interpolate-interpolation-and-imputation"]], "hybrid_interpolate: Linear + spectral interpolation": [[41, "hybrid-interpolate-linear-spectral-interpolation"]], "linear_interpolate: Linear interpolation": [[42, "linear-interpolate-linear-interpolation"]], "spectral_interpolate": [[43, "spectral-interpolate"]], "weighted_interpolate": [[44, "weighted-interpolate"]], "kernel: Parameterised kernels": [[45, "kernel-parameterised-kernels"]], "corr_kernel": [[46, "corr-kernel"]], "cosine_kernel": [[47, "cosine-kernel"]], "cov_kernel": [[48, "cov-kernel"]], "gaussian_kernel": [[49, "gaussian-kernel"]], "linear_distance": [[50, "linear-distance"]], "linear_kernel": [[51, "linear-kernel"]], "param_norm": [[52, "param-norm"]], "polynomial_kernel": [[53, "polynomial-kernel"]], "rbf_kernel": [[54, "rbf-kernel"]], "sigmoid_kernel": [[55, "sigmoid-kernel"]], "matrix: Matrix operations": [[56, "matrix-matrix-operations"]], "invert_spd": [[57, "invert-spd"]], "delete_diagonal": [[58, "delete-diagonal"]], "diag_embed": [[59, "diag-embed"]], "expand_outer": [[60, "expand-outer"]], "fill_diagonal": [[61, "fill-diagonal"]], "recondition_eigenspaces": [[62, "recondition-eigenspaces"]], "spd": [[63, "spd"]], "squareform": [[64, "squareform"]], "sym2vec": [[65, "sym2vec"]], "symmetric": [[66, "symmetric"]], "toeplitz": [[67, "toeplitz"], [180, "toeplitz"]], "toeplitz_2d": [[68, "toeplitz-2d"]], "vec2sym": [[69, "vec2sym"]], "residualise": [[70, "residualise"]], "semidefinite: Positive semidefinite cone": [[71, "semidefinite-positive-semidefinite-cone"]], "cone_project_spd": [[72, "cone-project-spd"]], "mean_euc_spd": [[73, "mean-euc-spd"]], "mean_geom_spd": [[74, "mean-geom-spd"]], "mean_harm_spd": [[75, "mean-harm-spd"]], "mean_logeuc_spd": [[76, "mean-logeuc-spd"]], "tangent_project_spd": [[77, "tangent-project-spd"]], "sparse: Sparse matrix operations": [[78, "sparse-sparse-matrix-operations"]], "Top-k BCOO format": [[78, "top-k-bcoo-format"]], "as_topk": [[79, "as-topk"]], "block_serialise": [[80, "block-serialise"]], "dspdmm": [[81, "dspdmm"]], "full_as_topk": [[82, "full-as-topk"]], "random_sparse": [[83, "random-sparse"]], "select_indices": [[84, "select-indices"]], "sp_block_serialise": [[85, "sp-block-serialise"]], "sparse_astype": [[86, "sparse-astype"]], "spdiagmm": [[87, "spdiagmm"]], "splr_hadamard": [[88, "splr-hadamard"]], "spsp_innerpaired": [[89, "spsp-innerpaired"]], "spsp_pairdiff": [[90, "spsp-pairdiff"]], "spspmm": [[91, "spspmm"]], "spspmm_full": [[92, "spspmm-full"]], "topk": [[93, "topk"]], "diagreplace": [[94, "diagreplace"]], "topk_diagzero": [[95, "topk-diagzero"]], "topk_to_bcoo": [[96, "topk-to-bcoo"]], "topkx": [[97, "topkx"]], "trace_spspmm": [[98, "trace-spspmm"]], "sphere: Spherical coordinates": [[99, "sphere-spherical-coordinates"]], "euclidean_conv": [[100, "euclidean-conv"]], "spatial_conv": [[101, "spatial-conv"]], "sphere_to_latlong": [[102, "sphere-to-latlong"]], "sphere_to_normals": [[103, "sphere-to-normals"]], "spherical_conv": [[104, "spherical-conv"]], "spherical_geodesic": [[105, "spherical-geodesic"]], "sylo: Sylo function": [[106, "sylo-sylo-function"]], "symmap: Symmetric matrix maps": [[107, "symmap-symmetric-matrix-maps"]], "symexp": [[108, "symexp"]], "symlog": [[109, "symlog"]], "symmap": [[110, "symmap"]], "symsqrt": [[111, "symsqrt"]], "tsconv: Time series convolution": [[112, "tsconv-time-series-convolution"], [246, "tsconv-time-series-convolution"]], "basischan": [[113, "basischan"]], "basisconv2d": [[114, "basisconv2d"]], "conv": [[115, "conv"]], "polychan": [[116, "polychan"]], "polyconv2d": [[117, "polyconv2d"]], "tsconv2d": [[118, "tsconv2d"]], "utils: Miscellaneous": [[119, "utils-miscellaneous"]], "amplitude_apply": [[120, "amplitude-apply"]], "apply_mask": [[121, "apply-mask"]], "complex_decompose": [[122, "complex-decompose"]], "complex_recompose": [[123, "complex-recompose"]], "conform_mask": [[124, "conform-mask"]], "mask_tensor": [[125, "mask-tensor"]], "vertical_compression": [[126, "vertical-compression"]], "window: Random windowing": [[127, "window-random-windowing"]], "sample_nonoverlapping_windows_existing_ax": [[128, "sample-nonoverlapping-windows-existing-ax"]], "sample_nonoverlapping_windows_new_ax": [[129, "sample-nonoverlapping-windows-new-ax"]], "sample_overlapping_windows_existing_ax": [[130, "sample-overlapping-windows-existing-ax"]], "sample_overlapping_windows_new_ax": [[131, "sample-overlapping-windows-new-ax"]], "sample_windows": [[132, "sample-windows"]], "atlas: Atlas initialisation": [[133, "atlas-atlas-initialisation"]], "Contents:": [[133, null], [257, null], [258, null]], "AtlasInit": [[134, "atlasinit"]], "BaseAtlas": [[135, "baseatlas"]], "CortexSubcortexCIfTIAtlas": [[136, "cortexsubcortexciftiatlas"]], "DirichletInitBaseAtlas": [[137, "dirichletinitbaseatlas"]], "DirichletInitSurfaceAtlas": [[138, "dirichletinitsurfaceatlas"]], "DirichletInitVolumetricAtlas": [[139, "dirichletinitvolumetricatlas"]], "DiscreteVolumetricAtlas": [[140, "discretevolumetricatlas"]], "MultiVolumetricAtlas": [[141, "multivolumetricatlas"]], "MultifileVolumetricAtlas": [[142, "multifilevolumetricatlas"]], "atlasmixins: Atlas mixins": [[143, "atlasmixins-atlas-mixins"]], "~ReferenceMixin": [[143, "referencemixin"]], "~MaskMixin": [[143, "maskmixin"]], "~CompartmentMixin": [[143, "compartmentmixin"]], "~LabelMixin": [[143, "labelmixin"]], "~MeshMixin": [[143, "meshmixin"]], "~ConvMixin": [[143, "convmixin"]], "base: Base initialisations": [[144, "base-base-initialisations"]], "ConstantInitialiser": [[145, "constantinitialiser"]], "DistributionInitialiser": [[146, "distributioninitialiser"]], "DomainInitialiser": [[147, "domaininitialiser"]], "constant_init_": [[148, "constant-init"]], "from_distr_init_": [[149, "from-distr-init"]], "identity_init_": [[150, "identity-init"]], "deltaplus": [[151, "deltaplus"]], "deltaplus_init": [[151, "deltaplus-init"]], "DeltaPlusInit": [[151, "deltaplusinit"]], "dirichlet": [[152, "dirichlet"]], "dirichlet_init": [[152, "dirichlet-init"]], "DirichletInit": [[152, "dirichletinit"]], "domain: Domain mappers": [[153, "domain-domain-mappers"]], "AmplitudeAtanh": [[154, "amplitudeatanh"]], "AmplitudeMultiLogit": [[155, "amplitudemultilogit"]], "Atanh": [[156, "atanh"]], "Logit": [[157, "logit"]], "MultiLogit": [[158, "multilogit"]], "UnitNormSphere": [[159, "unitnormsphere"]], "domainbase: Domain mapper base classes": [[160, "domainbase-domain-mapper-base-classes"]], "Affine": [[161, "affine"]], "Clip: OOD handler": [[162, "clip-ood-handler"]], "Identity": [[163, "identity"]], "Linear": [[164, "linear"]], "Normalise: OOD handler": [[165, "normalise-ood-handler"]], "_Domain": [[166, "domain"]], "_PhaseAmplitudeDomain": [[167, "phaseamplitudedomain"]], "freqfilter: Frequency band init": [[168, "freqfilter-frequency-band-init"]], "FreqFilterSpec": [[169, "freqfilterspec"]], "clamp_init_": [[170, "clamp-init"]], "freqfilter_init_": [[171, "freqfilter-init"]], "iirfilter: IIR filter init": [[172, "iirfilter-iir-filter-init"]], "IIRFilterSpec": [[172, "iirfilterspec"]], "laplace": [[173, "laplace"]], "laplace_init": [[173, "laplace-init"]], "LaplaceInit": [[173, "laplaceinit"]], "Mask logic": [[174, "mask-logic"]], "MaskThreshold": [[174, "maskthreshold"]], "MaskUThreshold": [[174, "maskuthreshold"]], "MaskDilation": [[174, "maskdilation"]], "MaskErosion": [[174, "maskerosion"]], "MaskOpening": [[174, "maskopening"]], "MaskClosing": [[174, "maskclosing"]], "MaskFillHoles": [[174, "maskfillholes"]], "MaskNegation": [[174, "masknegation"]], "MaskUnion": [[174, "maskunion"]], "MaskIntersection": [[174, "maskintersection"]], "FloatLeaf": [[174, "floatleaf"]], "MaskLeaf": [[174, "maskleaf"]], "mpbl": [[175, "mpbl"]], "semidefinite": [[176, "semidefinite"], [238, "semidefinite"]], "SemidefiniteMean": [[177, "semidefinitemean"]], "SPDEuclideanMean": [[177, "spdeuclideanmean"]], "SPDHarmonicMean": [[177, "spdharmonicmean"]], "SPDLogEuclideanMean": [[177, "spdlogeuclideanmean"]], "SPDGeometricMean": [[177, "spdgeometricmean"]], "TangencyInit": [[178, "tangencyinit"], [178, "id1"]], "tangency_init_": [[178, "tangency-init"]], "sylo": [[179, "sylo"], [243, "sylo"]], "toeplitz_init": [[180, "toeplitz-init"]], "ToeplitzInit": [[180, "toeplitzinit"]], "LossApply": [[181, "lossapply"]], "ReducingLoss": [[182, "reducingloss"]], "BatchCorrelation": [[183, "batchcorrelation"]], "QCFC": [[184, "qcfc"]], "auto_tol": [[185, "auto-tol"]], "Compactness": [[186, "compactness"]], "HemisphericTether": [[187, "hemispherictether"]], "Connectopy loss functional": [[188, "connectopy-loss-functional"]], "determinant: Log determinant-based losses": [[189, "determinant-log-determinant-based-losses"]], "LogDetCorr": [[189, "logdetcorr"]], "DetCorr": [[189, "detcorr"]], "LogDet": [[189, "logdet"]], "Determinant": [[189, "determinant"]], "VectorDispersion": [[190, "vectordispersion"]], "Entropy and SoftmaxEntropy": [[191, "entropy-and-softmaxentropy"]], "Entropy": [[191, "entropy"]], "SoftmaxEntropy": [[191, "softmaxentropy"]], "Equilibrium and SoftmaxEquilibrium": [[192, "equilibrium-and-softmaxequilibrium"]], "Equilibrium": [[192, "equilibrium"]], "SoftmaxEquilibrium": [[192, "softmaxequilibrium"]], "HingeLoss": [[193, "hingeloss"]], "JSDivergence and SoftmaxJSDivergence": [[194, "jsdivergence-and-softmaxjsdivergence"]], "JSDivergence": [[194, "jsdivergence"]], "SoftmaxJSDivergence": [[194, "softmaxjsdivergence"]], "ModularityLoss": [[195, "modularityloss"]], "MultivariateKurtosis": [[196, "multivariatekurtosis"]], "ConstraintViolation": [[197, "constraintviolation"]], "NormedLoss": [[198, "normedloss"]], "UnilateralNormedLoss": [[199, "unilateralnormedloss"]], "wmean": [[200, "wmean"]], "LossScheme": [[201, "lossscheme"]], "secondmoment: Second moment-based losses": [[202, "secondmoment-second-moment-based-losses"]], "SecondMoment": [[202, "secondmoment"]], "SecondMomentCentred": [[202, "secondmomentcentred"]], "SmoothnessPenalty": [[203, "smoothnesspenalty"]], "SymmetricBimodal": [[204, "symmetricbimodal"], [204, "id1"]], "SymmetricBimodalNorm": [[204, "symmetricbimodalnorm"]], "synth: Data synthesis": [[205, "synth-data-synthesis"]], "match_cov_and_spectrum": [[206, "match-cov-and-spectrum"]], "match_covariance": [[207, "match-covariance"]], "match_reference": [[208, "match-reference"]], "match_spectra": [[209, "match-spectra"]], "synthesise_from_cov_and_spectrum": [[210, "synthesise-from-cov-and-spectrum"]], "synthesise_matched": [[211, "synthesise-matched"]], "activation: Activation functions as modules": [[212, "activation-activation-functions-as-modules"]], "CorrelationNorm: Correlation normalisation": [[213, "correlationnorm-correlation-normalisation"]], "Isochor: Isochoric normalisation": [[214, "isochor-isochoric-normalisation"]], "atlas: Atlas layers": [[215, "atlas-atlas-layers"]], "AtlasLinear: Linear atlas layer": [[216, "atlaslinear-linear-atlas-layer"]], "confound: Confound Models": [[217, "confound-confound-models"]], "EliminationSelector": [[218, "eliminationselector"]], "LinearCombinationSelector": [[219, "linearcombinationselector"]], "LinearRFNN": [[220, "linearrfnn"]], "cov: Covariance modules": [[221, "cov-covariance-modules"]], "BaseCovariance: Covariance base class": [[222, "basecovariance-covariance-base-class"]], "BinaryCovariance": [[223, "binarycovariance"]], "BinaryCovarianceTW": [[224, "binarycovariancetw"]], "BinaryCovarianceUW": [[225, "binarycovarianceuw"]], "UnaryCovariance": [[226, "unarycovariance"]], "UnaryCovarianceTW": [[227, "unarycovariancetw"]], "UnaryCovarianceUW": [[228, "unarycovarianceuw"]], "freqfilter: Frequency-domain filter layer": [[229, "freqfilter-frequency-domain-filter-layer"]], "iirfilter: IIR filter layer": [[230, "iirfilter-iir-filter-layer"]], "interpolate: Interpolation layers": [[231, "interpolate-interpolation-layers"]], "HybridInterpolate": [[232, "hybridinterpolate"]], "LinearInterpolate": [[233, "linearinterpolate"]], "SpectralInterpolate": [[234, "spectralinterpolate"]], "recombinator": [[235, "recombinator"]], "Recombinator": [[236, "recombinator"]], "Residualise": [[237, "residualise"]], "BatchTangentProject": [[239, "batchtangentproject"]], "TangentProject": [[240, "tangentproject"]], "SPDNoise": [[241, "spdnoise"]], "SVM": [[242, "svm"]], "Sylo": [[244, "sylo"]], "SyloResNet": [[245, "syloresnet"]], "BasisConv2D": [[247, "basisconv2d"]], "PolyConv2D": [[248, "polyconv2d"]], "TimeSeriesConv2D": [[249, "timeseriesconv2d"]], "vertcom: Vertex compression": [[250, "vertcom-vertex-compression"]], "VerticalCompression": [[251, "verticalcompression"]], "WindowAmplifier": [[252, "windowamplifier"]], "Framework": [[253, "framework"]], "engine: Differentiable engine": [[254, "engine-differentiable-engine"]], "eval: Benchmarks and evaluation": [[255, "eval-benchmarks-and-evaluation"]], "functional: Functions and functionals": [[256, "functional-functions-and-functionals"]], "A differentiable program for mapping brain function": [[257, "a-differentiable-program-for-mapping-brain-function"]], "About": [[257, "about"]], "Remarks": [[257, "remarks"]], "Indices and tables": [[257, "indices-and-tables"]], "init: Initialisation schemes": [[258, "init-initialisation-schemes"]], "Installation": [[259, "installation"]], "loss: Loss and regularisation": [[260, "loss-loss-and-regularisation"]], "API reference": [[261, "api-reference"]], "neuro: Neuroscience data utilities": [[262, "neuro-neuroscience-data-utilities"]], "nn: Neural network modules": [[263, "nn-neural-network-modules"]], "Technical overview": [[264, "technical-overview"]], "functional and nn: composable differentiable functionals": [[264, "functional-and-nn-composable-differentiable-functionals"]], "init: functional parameterisation": [[264, "init-functional-parameterisation"]], "loss: learning signals": [[264, "loss-learning-signals"]], "formula: functional grammar": [[264, "formula-functional-grammar"]], "viz: visualisation": [[264, "viz-visualisation"]], "A simple example": [[264, "a-simple-example"]], "Poster landing page": [[265, "poster-landing-page"]], "viz: Visualisation": [[266, "viz-visualisation"]]}, "indexentries": {"hypercoil.functional.activation": [[1, "module-hypercoil.functional.activation"]], "module": [[1, "module-hypercoil.functional.activation"], [6, "module-hypercoil.functional.cmass"], [11, "module-hypercoil.functional.connectopy"], [14, "module-hypercoil.functional.cov"], [24, "module-hypercoil.functional.fourier"], [34, "module-hypercoil.functional.graph"], [40, "module-hypercoil.functional.interpolate"], [45, "module-hypercoil.functional.kernel"], [56, "module-hypercoil.functional.matrix"], [71, "module-hypercoil.functional.semidefinite"], [78, "module-hypercoil.functional.sparse"], [99, "module-hypercoil.functional.sphere"], [106, "module-hypercoil.functional.sylo"], [107, "module-hypercoil.functional.symmap"], [112, "module-hypercoil.functional.tsconv"], [119, "module-hypercoil.functional.utils"], [127, "module-hypercoil.functional.window"], [143, "module-hypercoil.init.atlasmixins"], [144, "module-hypercoil.init.base"], [254, "module-hypercoil.engine"], [256, "module-hypercoil.functional"]], "amplitude_atanh() (in module hypercoil.functional.activation)": [[2, "hypercoil.functional.activation.amplitude_atanh"]], "amplitude_tanh() (in module hypercoil.functional.activation)": [[3, "hypercoil.functional.activation.amplitude_tanh"]], "corrnorm() (in module hypercoil.functional.activation)": [[4, "hypercoil.functional.activation.corrnorm"]], "isochor() (in module hypercoil.functional.activation)": [[5, "hypercoil.functional.activation.isochor"]], "hypercoil.functional.cmass": [[6, "module-hypercoil.functional.cmass"]], "cmass() (in module hypercoil.functional.cmass)": [[7, "hypercoil.functional.cmass.cmass"]], "cmass_coor() (in module hypercoil.functional.cmass)": [[8, "hypercoil.functional.cmass.cmass_coor"]], "cmass_reference_displacement() (in module hypercoil.functional.cmass)": [[9, "hypercoil.functional.cmass.cmass_reference_displacement"]], "cmass_reference_displacement_grid() (in module hypercoil.functional.cmass)": [[9, "hypercoil.functional.cmass.cmass_reference_displacement_grid"]], "diffuse() (in module hypercoil.functional.cmass)": [[10, "hypercoil.functional.cmass.diffuse"]], "hypercoil.functional.connectopy": [[11, "module-hypercoil.functional.connectopy"]], "diffusion_mapping() (in module hypercoil.functional.connectopy)": [[12, "hypercoil.functional.connectopy.diffusion_mapping"]], "laplacian_eigenmaps() (in module hypercoil.functional.connectopy)": [[13, "hypercoil.functional.connectopy.laplacian_eigenmaps"]], "hypercoil.functional.cov": [[14, "module-hypercoil.functional.cov"]], "conditionalcorr() (in module hypercoil.functional.cov)": [[15, "hypercoil.functional.cov.conditionalcorr"]], "conditionalcov() (in module hypercoil.functional.cov)": [[16, "hypercoil.functional.cov.conditionalcov"]], "corr() (in module hypercoil.functional.cov)": [[17, "hypercoil.functional.cov.corr"]], "cov() (in module hypercoil.functional.cov)": [[18, "hypercoil.functional.cov.cov"]], "pairedcorr() (in module hypercoil.functional.cov)": [[19, "hypercoil.functional.cov.pairedcorr"]], "pairedcov() (in module hypercoil.functional.cov)": [[20, "hypercoil.functional.cov.pairedcov"]], "partialcorr() (in module hypercoil.functional.cov)": [[21, "hypercoil.functional.cov.partialcorr"]], "partialcov() (in module hypercoil.functional.cov)": [[22, "hypercoil.functional.cov.partialcov"]], "precision() (in module hypercoil.functional.cov)": [[23, "hypercoil.functional.cov.precision"]], "hypercoil.functional.fourier": [[24, "module-hypercoil.functional.fourier"]], "analytic_signal() (in module hypercoil.functional.fourier)": [[25, "hypercoil.functional.fourier.analytic_signal"]], "env_inst() (in module hypercoil.functional.fourier)": [[26, "hypercoil.functional.fourier.env_inst"]], "envelope() (in module hypercoil.functional.fourier)": [[27, "hypercoil.functional.fourier.envelope"]], "hilbert_transform() (in module hypercoil.functional.fourier)": [[28, "hypercoil.functional.fourier.hilbert_transform"]], "instantaneous_frequency() (in module hypercoil.functional.fourier)": [[29, "hypercoil.functional.fourier.instantaneous_frequency"]], "instantaneous_phase() (in module hypercoil.functional.fourier)": [[30, "hypercoil.functional.fourier.instantaneous_phase"]], "product_filter() (in module hypercoil.functional.fourier)": [[31, "hypercoil.functional.fourier.product_filter"]], "product_filtfilt() (in module hypercoil.functional.fourier)": [[32, "hypercoil.functional.fourier.product_filtfilt"]], "unwrap() (in module hypercoil.functional.fourier)": [[33, "hypercoil.functional.fourier.unwrap"]], "hypercoil.functional.graph": [[34, "module-hypercoil.functional.graph"]], "coaffiliation() (in module hypercoil.functional.graph)": [[35, "hypercoil.functional.graph.coaffiliation"]], "girvan_newman_null() (in module hypercoil.functional.graph)": [[36, "hypercoil.functional.graph.girvan_newman_null"]], "graph_laplacian() (in module hypercoil.functional.graph)": [[37, "hypercoil.functional.graph.graph_laplacian"]], "modularity_matrix() (in module hypercoil.functional.graph)": [[38, "hypercoil.functional.graph.modularity_matrix"]], "relaxed_modularity() (in module hypercoil.functional.graph)": [[39, "hypercoil.functional.graph.relaxed_modularity"]], "hypercoil.functional.interpolate": [[40, "module-hypercoil.functional.interpolate"]], "hybrid_interpolate() (in module hypercoil.functional.interpolate)": [[41, "hypercoil.functional.interpolate.hybrid_interpolate"]], "linear_interpolate() (in module hypercoil.functional.interpolate)": [[42, "hypercoil.functional.interpolate.linear_interpolate"]], "spectral_interpolate() (in module hypercoil.functional.interpolate)": [[43, "hypercoil.functional.interpolate.spectral_interpolate"]], "weighted_interpolate() (in module hypercoil.functional.interpolate)": [[44, "hypercoil.functional.interpolate.weighted_interpolate"]], "hypercoil.functional.kernel": [[45, "module-hypercoil.functional.kernel"]], "corr_kernel() (in module hypercoil.functional.kernel)": [[46, "hypercoil.functional.kernel.corr_kernel"]], "cosine_kernel() (in module hypercoil.functional.kernel)": [[47, "hypercoil.functional.kernel.cosine_kernel"]], "cov_kernel() (in module hypercoil.functional.kernel)": [[48, "hypercoil.functional.kernel.cov_kernel"]], "gaussian_kernel() (in module hypercoil.functional.kernel)": [[49, "hypercoil.functional.kernel.gaussian_kernel"]], "linear_distance() (in module hypercoil.functional.kernel)": [[50, "hypercoil.functional.kernel.linear_distance"]], "linear_kernel() (in module hypercoil.functional.kernel)": [[51, "hypercoil.functional.kernel.linear_kernel"]], "param_norm() (in module hypercoil.functional.kernel)": [[52, "hypercoil.functional.kernel.param_norm"]], "polynomial_kernel() (in module hypercoil.functional.kernel)": [[53, "hypercoil.functional.kernel.polynomial_kernel"]], "rbf_kernel() (in module hypercoil.functional.kernel)": [[54, "hypercoil.functional.kernel.rbf_kernel"]], "sigmoid_kernel() (in module hypercoil.functional.kernel)": [[55, "hypercoil.functional.kernel.sigmoid_kernel"]], "hypercoil.functional.matrix": [[56, "module-hypercoil.functional.matrix"]], "delete_diagonal() (in module hypercoil.functional.matrix)": [[58, "hypercoil.functional.matrix.delete_diagonal"]], "diag_embed() (in module hypercoil.functional.matrix)": [[59, "hypercoil.functional.matrix.diag_embed"]], "expand_outer() (in module hypercoil.functional.matrix)": [[60, "hypercoil.functional.matrix.expand_outer"]], "fill_diagonal() (in module hypercoil.functional.matrix)": [[61, "hypercoil.functional.matrix.fill_diagonal"]], "recondition_eigenspaces() (in module hypercoil.functional.matrix)": [[62, "hypercoil.functional.matrix.recondition_eigenspaces"]], "spd() (in module hypercoil.functional.matrix)": [[63, "hypercoil.functional.matrix.spd"]], "squareform() (in module hypercoil.functional.matrix)": [[64, "hypercoil.functional.matrix.squareform"]], "sym2vec() (in module hypercoil.functional.matrix)": [[65, "hypercoil.functional.matrix.sym2vec"]], "symmetric() (in module hypercoil.functional.matrix)": [[66, "hypercoil.functional.matrix.symmetric"]], "toeplitz() (in module hypercoil.functional.matrix)": [[67, "hypercoil.functional.matrix.toeplitz"]], "toeplitz_2d() (in module hypercoil.functional.matrix)": [[68, "hypercoil.functional.matrix.toeplitz_2d"]], "vec2sym() (in module hypercoil.functional.matrix)": [[69, "hypercoil.functional.matrix.vec2sym"]], "residualise() (in module hypercoil.functional.resid)": [[70, "hypercoil.functional.resid.residualise"]], "hypercoil.functional.semidefinite": [[71, "module-hypercoil.functional.semidefinite"]], "cone_project_spd() (in module hypercoil.functional.semidefinite)": [[72, "hypercoil.functional.semidefinite.cone_project_spd"]], "mean_euc_spd() (in module hypercoil.functional.semidefinite)": [[73, "hypercoil.functional.semidefinite.mean_euc_spd"]], "mean_geom_spd() (in module hypercoil.functional.semidefinite)": [[74, "hypercoil.functional.semidefinite.mean_geom_spd"]], "mean_harm_spd() (in module hypercoil.functional.semidefinite)": [[75, "hypercoil.functional.semidefinite.mean_harm_spd"]], "mean_logeuc_spd() (in module hypercoil.functional.semidefinite)": [[76, "hypercoil.functional.semidefinite.mean_logeuc_spd"]], "tangent_project_spd() (in module hypercoil.functional.semidefinite)": [[77, "hypercoil.functional.semidefinite.tangent_project_spd"]], "hypercoil.functional.sparse": [[78, "module-hypercoil.functional.sparse"]], "as_topk() (in module hypercoil.functional.sparse)": [[79, "hypercoil.functional.sparse.as_topk"]], "block_serialise() (in module hypercoil.functional.sparse)": [[80, "hypercoil.functional.sparse.block_serialise"]], "dspdmm() (in module hypercoil.functional.sparse)": [[81, "hypercoil.functional.sparse.dspdmm"]], "full_as_topk() (in module hypercoil.functional.sparse)": [[82, "hypercoil.functional.sparse.full_as_topk"]], "random_sparse() (in module hypercoil.functional.sparse)": [[83, "hypercoil.functional.sparse.random_sparse"]], "select_indices() (in module hypercoil.functional.sparse)": [[84, "hypercoil.functional.sparse.select_indices"]], "sp_block_serialise() (in module hypercoil.functional.sparse)": [[85, "hypercoil.functional.sparse.sp_block_serialise"]], "sparse_astype() (in module hypercoil.functional.sparse)": [[86, "hypercoil.functional.sparse.sparse_astype"]], "spdiagmm() (in module hypercoil.functional.sparse)": [[87, "hypercoil.functional.sparse.spdiagmm"]], "splr_hadamard() (in module hypercoil.functional.sparse)": [[88, "hypercoil.functional.sparse.splr_hadamard"]], "spsp_innerpaired() (in module hypercoil.functional.sparse)": [[89, "hypercoil.functional.sparse.spsp_innerpaired"]], "spsp_pairdiff() (in module hypercoil.functional.sparse)": [[90, "hypercoil.functional.sparse.spsp_pairdiff"]], "spspmm() (in module hypercoil.functional.sparse)": [[91, "hypercoil.functional.sparse.spspmm"]], "spspmm_full() (in module hypercoil.functional.sparse)": [[92, "hypercoil.functional.sparse.spspmm_full"]], "topk() (in module hypercoil.functional.sparse)": [[93, "hypercoil.functional.sparse.topk"]], "topk_diagzero() (in module hypercoil.functional.sparse)": [[95, "hypercoil.functional.sparse.topk_diagzero"]], "topk_to_bcoo() (in module hypercoil.functional.sparse)": [[96, "hypercoil.functional.sparse.topk_to_bcoo"]], "topkx() (in module hypercoil.functional.sparse)": [[97, "hypercoil.functional.sparse.topkx"]], "trace_spspmm() (in module hypercoil.functional.sparse)": [[98, "hypercoil.functional.sparse.trace_spspmm"]], "hypercoil.functional.sphere": [[99, "module-hypercoil.functional.sphere"]], "euclidean_conv() (in module hypercoil.functional.sphere)": [[100, "hypercoil.functional.sphere.euclidean_conv"]], "spatial_conv() (in module hypercoil.functional.sphere)": [[101, "hypercoil.functional.sphere.spatial_conv"]], "sphere_to_latlong() (in module hypercoil.functional.sphere)": [[102, "hypercoil.functional.sphere.sphere_to_latlong"]], "sphere_to_normals() (in module hypercoil.functional.sphere)": [[103, "hypercoil.functional.sphere.sphere_to_normals"]], "spherical_conv() (in module hypercoil.functional.sphere)": [[104, "hypercoil.functional.sphere.spherical_conv"]], "spherical_geodesic() (in module hypercoil.functional.sphere)": [[105, "hypercoil.functional.sphere.spherical_geodesic"]], "hypercoil.functional.sylo": [[106, "module-hypercoil.functional.sylo"]], "sylo() (in module hypercoil.functional.sylo)": [[106, "hypercoil.functional.sylo.sylo"]], "hypercoil.functional.symmap": [[107, "module-hypercoil.functional.symmap"]], "symexp() (in module hypercoil.functional.symmap)": [[108, "hypercoil.functional.symmap.symexp"]], "symlog() (in module hypercoil.functional.symmap)": [[109, "hypercoil.functional.symmap.symlog"]], "symmap() (in module hypercoil.functional.symmap)": [[110, "hypercoil.functional.symmap.symmap"]], "symsqrt() (in module hypercoil.functional.symmap)": [[111, "hypercoil.functional.symmap.symsqrt"]], "hypercoil.functional.tsconv": [[112, "module-hypercoil.functional.tsconv"]], "basischan() (in module hypercoil.functional.tsconv)": [[113, "hypercoil.functional.tsconv.basischan"]], "basisconv2d() (in module hypercoil.functional.tsconv)": [[114, "hypercoil.functional.tsconv.basisconv2d"]], "conv() (in module hypercoil.functional.tsconv)": [[115, "hypercoil.functional.tsconv.conv"]], "polychan() (in module hypercoil.functional.tsconv)": [[116, "hypercoil.functional.tsconv.polychan"]], "polyconv2d() (in module hypercoil.functional.tsconv)": [[117, "hypercoil.functional.tsconv.polyconv2d"]], "tsconv2d() (in module hypercoil.functional.tsconv)": [[118, "hypercoil.functional.tsconv.tsconv2d"]], "hypercoil.functional.utils": [[119, "module-hypercoil.functional.utils"]], "amplitude_apply() (in module hypercoil.functional.utils)": [[120, "hypercoil.functional.utils.amplitude_apply"]], "apply_mask() (in module hypercoil.functional.utils)": [[121, "hypercoil.functional.utils.apply_mask"]], "complex_decompose() (in module hypercoil.functional.utils)": [[122, "hypercoil.functional.utils.complex_decompose"]], "complex_recompose() (in module hypercoil.functional.utils)": [[123, "hypercoil.functional.utils.complex_recompose"]], "conform_mask() (in module hypercoil.functional.utils)": [[124, "hypercoil.functional.utils.conform_mask"]], "mask_tensor() (in module hypercoil.functional.utils)": [[125, "hypercoil.functional.utils.mask_tensor"]], "vertical_compression() (in module hypercoil.functional.sylo)": [[126, "hypercoil.functional.sylo.vertical_compression"]], "hypercoil.functional.window": [[127, "module-hypercoil.functional.window"]], "sample_nonoverlapping_windows_existing_ax() (in module hypercoil.functional.window)": [[128, "hypercoil.functional.window.sample_nonoverlapping_windows_existing_ax"]], "sample_nonoverlapping_windows_new_ax() (in module hypercoil.functional.window)": [[129, "hypercoil.functional.window.sample_nonoverlapping_windows_new_ax"]], "sample_overlapping_windows_existing_ax() (in module hypercoil.functional.window)": [[130, "hypercoil.functional.window.sample_overlapping_windows_existing_ax"]], "sample_overlapping_windows_new_ax() (in module hypercoil.functional.window)": [[131, "hypercoil.functional.window.sample_overlapping_windows_new_ax"]], "sample_windows() (in module hypercoil.functional.window)": [[132, "hypercoil.functional.window.sample_windows"]], "_ciftireferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CIfTIReferenceMixin"]], "_continuouslabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._ContinuousLabelMixin"]], "_cortexsubcortexcifticompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CortexSubcortexCIfTICompartmentMixin"]], "_cortexsubcortexciftimaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._CortexSubcortexCIfTIMaskMixin"]], "_dirichletlabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._DirichletLabelMixin"]], "_discretelabelmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._DiscreteLabelMixin"]], "_evenlysampledconvmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._EvenlySampledConvMixin"]], "_fromnullmaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._FromNullMaskMixin"]], "_logicmaskmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._LogicMaskMixin"]], "_multicompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._MultiCompartmentMixin"]], "_phantomreferencemixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._PhantomReferenceMixin"]], "_singlecompartmentmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SingleCompartmentMixin"]], "_spatialconvmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._SpatialConvMixin"]], "_vertexciftimeshmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VertexCIfTIMeshMixin"]], "_volumetricmeshmixin (class in hypercoil.init.atlasmixins)": [[143, "hypercoil.init.atlasmixins._VolumetricMeshMixin"]], "hypercoil.init.atlasmixins": [[143, "module-hypercoil.init.atlasmixins"]], "hypercoil.init.base": [[144, "module-hypercoil.init.base"]], "constantinitialiser() (in module hypercoil.init.base)": [[145, "hypercoil.init.base.ConstantInitialiser"]], "distributioninitialiser() (in module hypercoil.init.base)": [[146, "hypercoil.init.base.DistributionInitialiser"]], "hypercoil.engine": [[254, "module-hypercoil.engine"]], "hypercoil.functional": [[256, "module-hypercoil.functional"]]}})