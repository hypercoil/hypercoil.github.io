Search.setIndex({"docnames": ["api/hypercoil.data.bids", "api/hypercoil.data.bids.BIDSObjectFactory", "api/hypercoil.data.bids.LightBIDSLayout", "api/hypercoil.data.bids.LightBIDSObject", "api/hypercoil.data.bids.fMRIPrepDataset", "api/hypercoil.data.bids.fmriprep_references", "api/hypercoil.data.collate", "api/hypercoil.data.dataref", "api/hypercoil.data.dataref.DataQuery", "api/hypercoil.data.dataref.DataReference", "api/hypercoil.data.dataref.data_references", "api/hypercoil.data.dataset", "api/hypercoil.data.dataset.ReferencedDataLoader", "api/hypercoil.data.dataset.ReferencedDataset", "api/hypercoil.data.functional", "api/hypercoil.data.functional.dataframe", "api/hypercoil.data.functional.filesystem", "api/hypercoil.data.functional.general", "api/hypercoil.data.functional.metadata", "api/hypercoil.data.functional.missing", "api/hypercoil.data.functional.neuroimage", "api/hypercoil.data.functional.tensor", "api/hypercoil.data.functional.timeseries", "api/hypercoil.data.grabber.LightGrabber", "api/hypercoil.data.hcp", "api/hypercoil.data.hcp.hcp_references", "api/hypercoil.data.neuro.fMRIDataReference", "api/hypercoil.engine.accumulate", "api/hypercoil.engine.accumulate.AccumulatingFunction", "api/hypercoil.engine.accumulate.Accumulator", "api/hypercoil.functional.activation", "api/hypercoil.functional.activation.amplitude_atanh", "api/hypercoil.functional.activation.amplitude_tanh", "api/hypercoil.functional.activation.corrnorm", "api/hypercoil.functional.cmass", "api/hypercoil.functional.cmass.cmass", "api/hypercoil.functional.cmass.cmass_coor", "api/hypercoil.functional.cmass.cmass_reference", "api/hypercoil.functional.cmass.diffuse", "api/hypercoil.functional.cov", "api/hypercoil.functional.cov.conditionalcorr", "api/hypercoil.functional.cov.conditionalcov", "api/hypercoil.functional.cov.corr", "api/hypercoil.functional.cov.cov", "api/hypercoil.functional.cov.pairedcorr", "api/hypercoil.functional.cov.pairedcov", "api/hypercoil.functional.cov.partialcorr", "api/hypercoil.functional.cov.partialcov", "api/hypercoil.functional.cov.precision", "api/hypercoil.functional.fourier", "api/hypercoil.functional.fourier.product_filter", "api/hypercoil.functional.fourier.product_filtfilt", "api/hypercoil.functional.graph", "api/hypercoil.functional.graph.coaffiliation", "api/hypercoil.functional.graph.girvan_newman_null", "api/hypercoil.functional.graph.modularity_matrix", "api/hypercoil.functional.graph.relaxed_modularity", "api/hypercoil.functional.interpolate", "api/hypercoil.functional.interpolate.hybrid_interpolate", "api/hypercoil.functional.interpolate.spectral_interpolate", "api/hypercoil.functional.interpolate.weighted_interpolate", "api/hypercoil.functional.matrix", "api/hypercoil.functional.matrix.delete_diagonal", "api/hypercoil.functional.matrix.expand_outer", "api/hypercoil.functional.matrix.invert_spd", "api/hypercoil.functional.matrix.recondition_eigenspaces", "api/hypercoil.functional.matrix.spd", "api/hypercoil.functional.matrix.squareform", "api/hypercoil.functional.matrix.sym2vec", "api/hypercoil.functional.matrix.symmetric", "api/hypercoil.functional.matrix.toeplitz", "api/hypercoil.functional.matrix.vec2sym", "api/hypercoil.functional.resid.residualise", "api/hypercoil.functional.semidefinite", "api/hypercoil.functional.semidefinite.cone_project_spd", "api/hypercoil.functional.semidefinite.mean_euc_spd", "api/hypercoil.functional.semidefinite.mean_geom_spd", "api/hypercoil.functional.semidefinite.mean_harm_spd", "api/hypercoil.functional.semidefinite.mean_logeuc_spd", "api/hypercoil.functional.semidefinite.tangent_project_spd", "api/hypercoil.functional.sphere", "api/hypercoil.functional.sphere.euclidean_conv", "api/hypercoil.functional.sphere.spatial_conv", "api/hypercoil.functional.sphere.sphere_to_latlong", "api/hypercoil.functional.sphere.sphere_to_normals", "api/hypercoil.functional.sphere.spherical_conv", "api/hypercoil.functional.sphere.spherical_geodesic", "api/hypercoil.functional.sylo", "api/hypercoil.functional.symmap", "api/hypercoil.functional.symmap.symexp", "api/hypercoil.functional.symmap.symlog", "api/hypercoil.functional.symmap.symmap", "api/hypercoil.functional.symmap.symsqrt", "api/hypercoil.functional.tsconv", "api/hypercoil.functional.tsconv.basischan", "api/hypercoil.functional.tsconv.basisconv2d", "api/hypercoil.functional.tsconv.polychan", "api/hypercoil.functional.tsconv.polyconv2d", "api/hypercoil.functional.tsconv.tsconv2d", "api/hypercoil.functional.utils", "api/hypercoil.functional.utils.apply_mask", "api/hypercoil.functional.utils.complex_decompose", "api/hypercoil.functional.utils.complex_recompose", "api/hypercoil.functional.utils.conform_mask", "api/hypercoil.functional.utils.wmean", "api/hypercoil.init.atlas", "api/hypercoil.init.atlas.AtlasInit", "api/hypercoil.init.atlas.BaseAtlas", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas", "api/hypercoil.init.atlas.DirichletInitBaseAtlas", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas", "api/hypercoil.init.atlas.MultiVolumetricAtlas", "api/hypercoil.init.atlas.MultifileVolumetricAtlas", "api/hypercoil.init.atlasmixins", "api/hypercoil.init.base", "api/hypercoil.init.base.ConstantInitialiser", "api/hypercoil.init.base.DistributionInitialiser", "api/hypercoil.init.base.DomainInitialiser", "api/hypercoil.init.base.constant_init_", "api/hypercoil.init.base.from_distr_init_", "api/hypercoil.init.base.identity_init_", "api/hypercoil.init.deltaplus", "api/hypercoil.init.dirichlet", "api/hypercoil.init.domain", "api/hypercoil.init.domain.AmplitudeAtanh", "api/hypercoil.init.domain.AmplitudeMultiLogit", "api/hypercoil.init.domain.Atanh", "api/hypercoil.init.domain.Logit", "api/hypercoil.init.domain.MultiLogit", "api/hypercoil.init.domainbase", "api/hypercoil.init.domainbase.Affine", "api/hypercoil.init.domainbase.Clip", "api/hypercoil.init.domainbase.Identity", "api/hypercoil.init.domainbase.Linear", "api/hypercoil.init.domainbase.Normalise", "api/hypercoil.init.domainbase._Domain", "api/hypercoil.init.domainbase._PhaseAmplitudeDomain", "api/hypercoil.init.freqfilter", "api/hypercoil.init.freqfilter.FreqFilterSpec", "api/hypercoil.init.freqfilter.clamp_init_", "api/hypercoil.init.freqfilter.freqfilter_init_", "api/hypercoil.init.iirfilter", "api/hypercoil.init.laplace", "api/hypercoil.init.masklogic", "api/hypercoil.init.mpbl", "api/hypercoil.init.semidefinite", "api/hypercoil.init.semidefinite.SemidefiniteMean", "api/hypercoil.init.semidefinite.TangencyInit", "api/hypercoil.init.sylo", "api/hypercoil.init.toeplitz", "api/hypercoil.loss.base.LossApply", "api/hypercoil.loss.base.ReducingLoss", "api/hypercoil.loss.batchcorr.BatchCorrelation", "api/hypercoil.loss.batchcorr.QCFC", "api/hypercoil.loss.batchcorr.auto_tol", "api/hypercoil.loss.cmass.Compactness", "api/hypercoil.loss.cmass.HemisphericTether", "api/hypercoil.loss.determinant", "api/hypercoil.loss.dispersion.VectorDispersion", "api/hypercoil.loss.entropy", "api/hypercoil.loss.equilibrium", "api/hypercoil.loss.hinge.HingeLoss", "api/hypercoil.loss.jsdiv", "api/hypercoil.loss.modularity.ModularityLoss", "api/hypercoil.loss.mvkurtosis.MultivariateKurtosis", "api/hypercoil.loss.norm.ConstraintViolation", "api/hypercoil.loss.norm.NormedLoss", "api/hypercoil.loss.norm.UnilateralNormedLoss", "api/hypercoil.loss.scheme.LossScheme", "api/hypercoil.loss.secondmoment", "api/hypercoil.loss.smoothness.SmoothnessPenalty", "api/hypercoil.loss.symbimodal", "api/hypercoil.neuro.synth", "api/hypercoil.neuro.synth.match_cov_and_spectrum", "api/hypercoil.neuro.synth.match_covariance", "api/hypercoil.neuro.synth.match_reference", "api/hypercoil.neuro.synth.match_spectra", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum", "api/hypercoil.neuro.synth.synthesise_matched", "api/hypercoil.nn.activation", "api/hypercoil.nn.activation.CorrelationNorm", "api/hypercoil.nn.atlas", "api/hypercoil.nn.atlas.AtlasAccumuline", "api/hypercoil.nn.atlas.AtlasLinear", "api/hypercoil.nn.cov", "api/hypercoil.nn.cov.BinaryCovariance", "api/hypercoil.nn.cov.BinaryCovarianceTW", "api/hypercoil.nn.cov.BinaryCovarianceUW", "api/hypercoil.nn.cov.UnaryCovariance", "api/hypercoil.nn.cov.UnaryCovarianceTW", "api/hypercoil.nn.cov.UnaryCovarianceUW", "api/hypercoil.nn.cov._Cov", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter", "api/hypercoil.nn.iirfilter", "api/hypercoil.nn.interpolate", "api/hypercoil.nn.interpolate.HybridInterpolate", "api/hypercoil.nn.interpolate.SpectralInterpolate", "api/hypercoil.nn.interpolate.WeightedInterpolate", "api/hypercoil.nn.recombinator", "api/hypercoil.nn.recombinator.QueryEncoder", "api/hypercoil.nn.recombinator.Recombinator", "api/hypercoil.nn.resid.Residualise", "api/hypercoil.nn.select", "api/hypercoil.nn.select.EliminationSelector", "api/hypercoil.nn.select.LinearCombinationSelector", "api/hypercoil.nn.select.ResponseFunctionLinearSelector", "api/hypercoil.nn.semidefinite", "api/hypercoil.nn.semidefinite.BatchTangentProject", "api/hypercoil.nn.semidefinite.TangentProject", "api/hypercoil.nn.spdnoise.SPDNoise", "api/hypercoil.nn.svm.SVM", "api/hypercoil.nn.sylo", "api/hypercoil.nn.sylo.Sylo", "api/hypercoil.nn.sylo.SyloResNet", "api/hypercoil.nn.vertcom", "api/hypercoil.nn.vertcom.VerticalCompression", "api/hypercoil.nn.vertcom.vertical_compression", "api/hypercoil.nn.window.WindowAmplifier", "data", "diffprog", "engine", "eval", "functional", "index", "init", "installation", "loss", "modules", "neuro", "nn", "portal", "viz"], "filenames": ["api/hypercoil.data.bids.rst", "api/hypercoil.data.bids.BIDSObjectFactory.rst", "api/hypercoil.data.bids.LightBIDSLayout.rst", "api/hypercoil.data.bids.LightBIDSObject.rst", "api/hypercoil.data.bids.fMRIPrepDataset.rst", "api/hypercoil.data.bids.fmriprep_references.rst", "api/hypercoil.data.collate.rst", "api/hypercoil.data.dataref.rst", "api/hypercoil.data.dataref.DataQuery.rst", "api/hypercoil.data.dataref.DataReference.rst", "api/hypercoil.data.dataref.data_references.rst", "api/hypercoil.data.dataset.rst", "api/hypercoil.data.dataset.ReferencedDataLoader.rst", "api/hypercoil.data.dataset.ReferencedDataset.rst", "api/hypercoil.data.functional.rst", "api/hypercoil.data.functional.dataframe.rst", "api/hypercoil.data.functional.filesystem.rst", "api/hypercoil.data.functional.general.rst", "api/hypercoil.data.functional.metadata.rst", "api/hypercoil.data.functional.missing.rst", "api/hypercoil.data.functional.neuroimage.rst", "api/hypercoil.data.functional.tensor.rst", "api/hypercoil.data.functional.timeseries.rst", "api/hypercoil.data.grabber.LightGrabber.rst", "api/hypercoil.data.hcp.rst", "api/hypercoil.data.hcp.hcp_references.rst", "api/hypercoil.data.neuro.fMRIDataReference.rst", "api/hypercoil.engine.accumulate.rst", "api/hypercoil.engine.accumulate.AccumulatingFunction.rst", "api/hypercoil.engine.accumulate.Accumulator.rst", "api/hypercoil.functional.activation.rst", "api/hypercoil.functional.activation.amplitude_atanh.rst", "api/hypercoil.functional.activation.amplitude_tanh.rst", "api/hypercoil.functional.activation.corrnorm.rst", "api/hypercoil.functional.cmass.rst", "api/hypercoil.functional.cmass.cmass.rst", "api/hypercoil.functional.cmass.cmass_coor.rst", "api/hypercoil.functional.cmass.cmass_reference.rst", "api/hypercoil.functional.cmass.diffuse.rst", "api/hypercoil.functional.cov.rst", "api/hypercoil.functional.cov.conditionalcorr.rst", "api/hypercoil.functional.cov.conditionalcov.rst", "api/hypercoil.functional.cov.corr.rst", "api/hypercoil.functional.cov.cov.rst", "api/hypercoil.functional.cov.pairedcorr.rst", "api/hypercoil.functional.cov.pairedcov.rst", "api/hypercoil.functional.cov.partialcorr.rst", "api/hypercoil.functional.cov.partialcov.rst", "api/hypercoil.functional.cov.precision.rst", "api/hypercoil.functional.fourier.rst", "api/hypercoil.functional.fourier.product_filter.rst", "api/hypercoil.functional.fourier.product_filtfilt.rst", "api/hypercoil.functional.graph.rst", "api/hypercoil.functional.graph.coaffiliation.rst", "api/hypercoil.functional.graph.girvan_newman_null.rst", "api/hypercoil.functional.graph.modularity_matrix.rst", "api/hypercoil.functional.graph.relaxed_modularity.rst", "api/hypercoil.functional.interpolate.rst", "api/hypercoil.functional.interpolate.hybrid_interpolate.rst", "api/hypercoil.functional.interpolate.spectral_interpolate.rst", "api/hypercoil.functional.interpolate.weighted_interpolate.rst", "api/hypercoil.functional.matrix.rst", "api/hypercoil.functional.matrix.delete_diagonal.rst", "api/hypercoil.functional.matrix.expand_outer.rst", "api/hypercoil.functional.matrix.invert_spd.rst", "api/hypercoil.functional.matrix.recondition_eigenspaces.rst", "api/hypercoil.functional.matrix.spd.rst", "api/hypercoil.functional.matrix.squareform.rst", "api/hypercoil.functional.matrix.sym2vec.rst", "api/hypercoil.functional.matrix.symmetric.rst", "api/hypercoil.functional.matrix.toeplitz.rst", "api/hypercoil.functional.matrix.vec2sym.rst", "api/hypercoil.functional.resid.residualise.rst", "api/hypercoil.functional.semidefinite.rst", "api/hypercoil.functional.semidefinite.cone_project_spd.rst", "api/hypercoil.functional.semidefinite.mean_euc_spd.rst", "api/hypercoil.functional.semidefinite.mean_geom_spd.rst", "api/hypercoil.functional.semidefinite.mean_harm_spd.rst", "api/hypercoil.functional.semidefinite.mean_logeuc_spd.rst", "api/hypercoil.functional.semidefinite.tangent_project_spd.rst", "api/hypercoil.functional.sphere.rst", "api/hypercoil.functional.sphere.euclidean_conv.rst", "api/hypercoil.functional.sphere.spatial_conv.rst", "api/hypercoil.functional.sphere.sphere_to_latlong.rst", "api/hypercoil.functional.sphere.sphere_to_normals.rst", "api/hypercoil.functional.sphere.spherical_conv.rst", "api/hypercoil.functional.sphere.spherical_geodesic.rst", "api/hypercoil.functional.sylo.rst", "api/hypercoil.functional.symmap.rst", "api/hypercoil.functional.symmap.symexp.rst", "api/hypercoil.functional.symmap.symlog.rst", "api/hypercoil.functional.symmap.symmap.rst", "api/hypercoil.functional.symmap.symsqrt.rst", "api/hypercoil.functional.tsconv.rst", "api/hypercoil.functional.tsconv.basischan.rst", "api/hypercoil.functional.tsconv.basisconv2d.rst", "api/hypercoil.functional.tsconv.polychan.rst", "api/hypercoil.functional.tsconv.polyconv2d.rst", "api/hypercoil.functional.tsconv.tsconv2d.rst", "api/hypercoil.functional.utils.rst", "api/hypercoil.functional.utils.apply_mask.rst", "api/hypercoil.functional.utils.complex_decompose.rst", "api/hypercoil.functional.utils.complex_recompose.rst", "api/hypercoil.functional.utils.conform_mask.rst", "api/hypercoil.functional.utils.wmean.rst", "api/hypercoil.init.atlas.rst", "api/hypercoil.init.atlas.AtlasInit.rst", "api/hypercoil.init.atlas.BaseAtlas.rst", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.rst", "api/hypercoil.init.atlas.DirichletInitBaseAtlas.rst", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas.rst", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas.rst", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultiVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultifileVolumetricAtlas.rst", "api/hypercoil.init.atlasmixins.rst", "api/hypercoil.init.base.rst", "api/hypercoil.init.base.ConstantInitialiser.rst", "api/hypercoil.init.base.DistributionInitialiser.rst", "api/hypercoil.init.base.DomainInitialiser.rst", "api/hypercoil.init.base.constant_init_.rst", "api/hypercoil.init.base.from_distr_init_.rst", "api/hypercoil.init.base.identity_init_.rst", "api/hypercoil.init.deltaplus.rst", "api/hypercoil.init.dirichlet.rst", "api/hypercoil.init.domain.rst", "api/hypercoil.init.domain.AmplitudeAtanh.rst", "api/hypercoil.init.domain.AmplitudeMultiLogit.rst", "api/hypercoil.init.domain.Atanh.rst", "api/hypercoil.init.domain.Logit.rst", "api/hypercoil.init.domain.MultiLogit.rst", "api/hypercoil.init.domainbase.rst", "api/hypercoil.init.domainbase.Affine.rst", "api/hypercoil.init.domainbase.Clip.rst", "api/hypercoil.init.domainbase.Identity.rst", "api/hypercoil.init.domainbase.Linear.rst", "api/hypercoil.init.domainbase.Normalise.rst", "api/hypercoil.init.domainbase._Domain.rst", "api/hypercoil.init.domainbase._PhaseAmplitudeDomain.rst", "api/hypercoil.init.freqfilter.rst", "api/hypercoil.init.freqfilter.FreqFilterSpec.rst", "api/hypercoil.init.freqfilter.clamp_init_.rst", "api/hypercoil.init.freqfilter.freqfilter_init_.rst", "api/hypercoil.init.iirfilter.rst", "api/hypercoil.init.laplace.rst", "api/hypercoil.init.masklogic.rst", "api/hypercoil.init.mpbl.rst", "api/hypercoil.init.semidefinite.rst", "api/hypercoil.init.semidefinite.SemidefiniteMean.rst", "api/hypercoil.init.semidefinite.TangencyInit.rst", "api/hypercoil.init.sylo.rst", "api/hypercoil.init.toeplitz.rst", "api/hypercoil.loss.base.LossApply.rst", "api/hypercoil.loss.base.ReducingLoss.rst", "api/hypercoil.loss.batchcorr.BatchCorrelation.rst", "api/hypercoil.loss.batchcorr.QCFC.rst", "api/hypercoil.loss.batchcorr.auto_tol.rst", "api/hypercoil.loss.cmass.Compactness.rst", "api/hypercoil.loss.cmass.HemisphericTether.rst", "api/hypercoil.loss.determinant.rst", "api/hypercoil.loss.dispersion.VectorDispersion.rst", "api/hypercoil.loss.entropy.rst", "api/hypercoil.loss.equilibrium.rst", "api/hypercoil.loss.hinge.HingeLoss.rst", "api/hypercoil.loss.jsdiv.rst", "api/hypercoil.loss.modularity.ModularityLoss.rst", "api/hypercoil.loss.mvkurtosis.MultivariateKurtosis.rst", "api/hypercoil.loss.norm.ConstraintViolation.rst", "api/hypercoil.loss.norm.NormedLoss.rst", "api/hypercoil.loss.norm.UnilateralNormedLoss.rst", "api/hypercoil.loss.scheme.LossScheme.rst", "api/hypercoil.loss.secondmoment.rst", "api/hypercoil.loss.smoothness.SmoothnessPenalty.rst", "api/hypercoil.loss.symbimodal.rst", "api/hypercoil.neuro.synth.rst", "api/hypercoil.neuro.synth.match_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.match_covariance.rst", "api/hypercoil.neuro.synth.match_reference.rst", "api/hypercoil.neuro.synth.match_spectra.rst", "api/hypercoil.neuro.synth.synthesise_from_cov_and_spectrum.rst", "api/hypercoil.neuro.synth.synthesise_matched.rst", "api/hypercoil.nn.activation.rst", "api/hypercoil.nn.activation.CorrelationNorm.rst", "api/hypercoil.nn.atlas.rst", "api/hypercoil.nn.atlas.AtlasAccumuline.rst", "api/hypercoil.nn.atlas.AtlasLinear.rst", "api/hypercoil.nn.cov.rst", "api/hypercoil.nn.cov.BinaryCovariance.rst", "api/hypercoil.nn.cov.BinaryCovarianceTW.rst", "api/hypercoil.nn.cov.BinaryCovarianceUW.rst", "api/hypercoil.nn.cov.UnaryCovariance.rst", "api/hypercoil.nn.cov.UnaryCovarianceTW.rst", "api/hypercoil.nn.cov.UnaryCovarianceUW.rst", "api/hypercoil.nn.cov._Cov.rst", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter.rst", "api/hypercoil.nn.iirfilter.rst", "api/hypercoil.nn.interpolate.rst", "api/hypercoil.nn.interpolate.HybridInterpolate.rst", "api/hypercoil.nn.interpolate.SpectralInterpolate.rst", "api/hypercoil.nn.interpolate.WeightedInterpolate.rst", "api/hypercoil.nn.recombinator.rst", "api/hypercoil.nn.recombinator.QueryEncoder.rst", "api/hypercoil.nn.recombinator.Recombinator.rst", "api/hypercoil.nn.resid.Residualise.rst", "api/hypercoil.nn.select.rst", "api/hypercoil.nn.select.EliminationSelector.rst", "api/hypercoil.nn.select.LinearCombinationSelector.rst", "api/hypercoil.nn.select.ResponseFunctionLinearSelector.rst", "api/hypercoil.nn.semidefinite.rst", "api/hypercoil.nn.semidefinite.BatchTangentProject.rst", "api/hypercoil.nn.semidefinite.TangentProject.rst", "api/hypercoil.nn.spdnoise.SPDNoise.rst", "api/hypercoil.nn.svm.SVM.rst", "api/hypercoil.nn.sylo.rst", "api/hypercoil.nn.sylo.Sylo.rst", "api/hypercoil.nn.sylo.SyloResNet.rst", "api/hypercoil.nn.vertcom.rst", "api/hypercoil.nn.vertcom.VerticalCompression.rst", "api/hypercoil.nn.vertcom.vertical_compression.rst", "api/hypercoil.nn.window.WindowAmplifier.rst", "data.rst", "diffprog.rst", "engine.rst", "eval.rst", "functional.rst", "index.rst", "init.rst", "installation.rst", "loss.rst", "modules.rst", "neuro.rst", "nn.rst", "portal.rst", "viz.rst"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">bids</span></code>: BIDS interfaces", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BIDSObjectFactory</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LightBIDSLayout</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LightBIDSObject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fMRIPrepDataset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fmriprep_references</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collate</span></code>: Batch collation functionality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dataref</span></code>: Data references", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DataQuery</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DataReference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">data_references</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dataset</span></code>: Referenced datasets", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReferencedDataLoader</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReferencedDataset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">functional</span></code>: Data transform functions", "Data frames", "I/O and filesystem", "General use", "Metadata", "Missing values", "Neuroimaging datasets", "Tensor casting and binding", "Time series", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LightGrabber</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hcp</span></code>: HCP interfaces", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hcp_references</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fMRIDataReference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">accumulate</span></code>: Local gradient accumulation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AccumulatingFunction</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Accumulator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_tanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corrnorm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass, array coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass_coor</span></code>: Centre of mass, any coordinates", "Displacement from a reference centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffuse</span></code>: Diffuseness around centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariances and correlations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcorr</span></code>: Conditional correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcov</span></code>: Conditional covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr</span></code>: Pearson correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcorr</span></code>: Paired correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcov</span></code>: Paired covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcorr</span></code>: Partial correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcov</span></code>: Partial covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">precision</span></code>: Inverse covariance (precision)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fourier</span></code>: Frequency-domain filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filtfilt</span></code>: Zero-phase filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph</span></code>: Graphs and networks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coaffiliation</span></code>: Community coaffiliation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">girvan_newman_null</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">modularity_matrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">relaxed_modularity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation and imputation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hybrid_interpolate</span></code>: Weighted + spectral interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spectral_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">weighted_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">matrix</span></code>: Matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">delete_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_outer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">invert_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recondition_eigenspaces</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">squareform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sym2vec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmetric</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vec2sym</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>: Positive semidefinite cone", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cone_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_euc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_geom_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_harm_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_logeuc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tangent_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code>: Spherical coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">euclidean_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spatial_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_latlong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_normals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_geodesic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>: Sylo function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>: Symmetric matrix maps", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symexp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symlog</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symsqrt</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basischan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basisconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polychan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polyconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">utils</span></code>: Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apply_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_decompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_recompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conform_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wmean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas initialisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasInit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CortexSubcortexCIfTIAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitBaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitSurfaceAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DiscreteVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultifileVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlasmixins</span></code>: Atlas mixins", "<code class=\"docutils literal notranslate\"><span class=\"pre\">base</span></code>: Base initialisations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DistributionInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DomainInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constant_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">from_distr_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">identity_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deltaplus</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dirichlet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domain</span></code>: Domain mappers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeAtanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeMultiLogit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Logit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiLogit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domainbase</span></code>: Domain mapper base classes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Affine</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Clip</span></code>: OOD handler", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Identity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Linear</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Normalise</span></code>: OOD handler", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_Domain</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_PhaseAmplitudeDomain</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency band init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">FreqFilterSpec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">clamp_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplace</span></code>", "Mask logic", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mpbl</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SemidefiniteMean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangencyInit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossApply</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducingLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchCorrelation</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">QCFC</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto_tol</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Compactness</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HemisphericTether</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">determinant</span></code>: Log determinant-based losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VectorDispersion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Entropy</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxEntropy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Equilibrium</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxEquilibrium</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HingeLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">JSDivergence</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxJSDivergence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ModularityLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultivariateKurtosis</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ConstraintViolation</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NormedLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnilateralNormedLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossScheme</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">secondmoment</span></code>: Second moment-based losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmoothnessPenalty</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SymmetricBimodal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synth</span></code>: Data synthesis", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_covariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_reference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">match_spectra</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_from_cov_and_spectrum</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">synthesise_matched</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions as modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CorrelationNorm</span></code>: Correlation normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasAccumuline</span></code>: Linear atlas accumulator", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasLinear</span></code>: Linear atlas layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_Cov</span></code>: Covariance base class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency-domain filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HybridInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SpectralInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">WeightedInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">QueryEncoder</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">select</span></code>: Model Selection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">EliminationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearCombinationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ResponseFunctionLinearSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchTangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SPDNoise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SVM</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SyloResNet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertcom</span></code>: Vertex compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VerticalCompression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertical_compression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">WindowAmplifier</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code>: Data engineering", "Framework", "<code class=\"docutils literal notranslate\"><span class=\"pre\">engine</span></code>: Differentiable engine", "<code class=\"docutils literal notranslate\"><span class=\"pre\">eval</span></code>: Benchmarks and evaluation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">functional</span></code>: Functions and functionals", "Differentiable programming for brain mapping", "<code class=\"docutils literal notranslate\"><span class=\"pre\">init</span></code>: Initialisation schemes", "Installation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">loss</span></code>: Loss and regularisation", "API reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">neuro</span></code>: Neuroscience data utilities", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nn</span></code>: Neural network modules", "Poster landing page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">viz</span></code>: Visualisation"], "terms": {"load": [0, 11, 15, 16, 18, 20, 24, 27, 82, 105, 107, 108, 110, 112, 113, 114, 115, 145, 171], "conform": [0, 8, 21, 45, 67, 70, 94, 103, 151, 165, 194], "neuroimag": [0, 4, 5, 6, 7, 14, 16, 24, 25, 26, 105, 185, 220, 226, 230], "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 43, 45, 50, 51, 58, 59, 60, 70, 72, 81, 82, 85, 87, 93, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 123, 124, 136, 144, 145, 151, 154, 173, 179, 180, 187, 188, 189, 190, 191, 192, 193, 194, 208, 209, 210, 225, 229], "The": [0, 9, 11, 15, 17, 24, 26, 27, 28, 29, 31, 32, 35, 38, 40, 41, 42, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 60, 63, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 82, 85, 87, 95, 97, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 123, 124, 126, 127, 128, 129, 130, 136, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 173, 176, 179, 180, 187, 188, 189, 190, 191, 192, 194, 202, 205, 209, 211, 212, 214, 220, 225, 226, 228], "refer": [0, 4, 5, 9, 10, 11, 12, 13, 24, 25, 26, 34, 74, 79, 87, 105, 107, 108, 110, 111, 112, 113, 114, 115, 174, 176, 177, 178, 179, 180, 209, 210, 214, 220, 224, 225], "retriev": [0, 24, 28, 220], "util": [0, 6, 24, 100, 101, 102, 103, 104, 224, 225, 229], "written": 0, "assumpt": [0, 160, 176], "input": [0, 5, 6, 9, 10, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 104, 105, 115, 123, 124, 127, 130, 133, 134, 136, 141, 142, 144, 146, 148, 149, 151, 152, 157, 159, 161, 162, 165, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 185, 187, 188, 189, 190, 191, 192, 194, 202, 205, 206, 209, 210, 211, 212, 214, 218, 226, 228], "path": [0, 2, 4, 5, 8, 10, 15, 16, 17, 18, 20, 25, 107, 108, 110, 112, 113, 114, 115, 220, 226], "deriv": [0, 28, 29, 39, 193, 210, 212, 214], "dataset": [0, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 23, 25, 26, 27, 58, 60, 82, 94, 95, 96, 97, 136, 149, 171, 179, 194, 210, 212, 214, 220, 229], "creat": [0, 4, 5, 6, 10, 17, 19, 21, 24, 25, 26, 28, 58, 60, 70, 87, 94, 96, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 145, 151, 179, 180, 220], "fmriprep": [0, 4, 5, 24], "recommend": [0, 5, 17, 24, 25, 89, 161, 220, 227], "us": [0, 5, 6, 8, 9, 10, 11, 13, 14, 15, 19, 20, 24, 25, 26, 28, 29, 33, 35, 38, 43, 50, 51, 55, 56, 58, 59, 60, 63, 66, 70, 72, 74, 76, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 138, 140, 142, 143, 144, 145, 146, 148, 149, 151, 152, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 171, 173, 176, 185, 187, 188, 189, 190, 191, 192, 194, 195, 203, 205, 209, 210, 212, 214, 220, 225, 226, 227, 228], "first": [0, 6, 16, 24, 27, 28, 29, 41, 51, 59, 60, 66, 70, 71, 87, 95, 97, 126, 127, 128, 129, 130, 136, 137, 138, 140, 141, 143, 146, 150, 151, 159, 161, 176, 205, 214, 220, 232], "through": [0, 24, 27, 28, 33, 56, 65, 91, 107, 119, 124, 158, 159, 165, 185, 205, 209, 210, 212, 226, 228], "fmriprep_refer": [0, 10, 220], "function": [0, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 144, 146, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 184, 185, 187, 188, 189, 190, 191, 192, 194, 202, 205, 212, 214, 215, 220, 225, 226, 228, 229, 231, 232], "call": [0, 4, 6, 9, 19, 21, 24, 26, 28, 29, 106, 115, 119, 140, 145, 170, 212, 215, 220, 228], "pass": [0, 4, 9, 13, 24, 26, 27, 28, 29, 50, 51, 55, 56, 63, 73, 87, 95, 97, 115, 119, 140, 143, 153, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 178, 202, 205, 212, 214, 220, 228], "make_wd": [0, 24, 220], "A": [0, 4, 5, 8, 9, 13, 24, 25, 26, 33, 38, 54, 55, 56, 58, 60, 62, 64, 65, 74, 76, 79, 90, 91, 92, 94, 96, 99, 119, 140, 141, 142, 148, 157, 159, 161, 162, 165, 171, 185, 187, 188, 189, 190, 191, 192, 194, 200, 209, 210, 212, 214, 217], "fmriprepdataset": [0, 220], "class": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 23, 26, 28, 29, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 205, 206, 207, 211, 212, 214, 215, 219, 226, 229, 231], "also": [0, 6, 9, 20, 26, 28, 29, 33, 48, 63, 87, 107, 115, 160, 165, 171, 202, 211, 212, 214, 215, 226, 228, 232], "exist": [0, 8, 27, 99, 105, 106, 111, 115, 165, 226], "port": [0, 225], "webdataset": [0, 5, 6, 11, 25, 220], "yield": [0, 54, 140, 142, 185, 194], "far": [0, 28, 29], "superior": 0, "perform": [0, 28, 29, 39, 43, 45, 51, 82, 95, 97, 115, 170, 187, 188, 189, 190, 191, 192, 196, 212], "gener": [0, 4, 5, 10, 14, 24, 25, 27, 41, 43, 45, 63, 87, 89, 105, 109, 136, 173, 185, 188, 191, 212, 214, 220, 226], "ciftifi": 0, "compat": [0, 28, 33, 123, 124, 144, 151, 173, 220, 226], "like": [0, 2, 11, 13, 24, 25, 27, 39, 85, 87, 105, 115, 150, 159, 161, 212, 214, 220, 232], "absent": 0, "thi": [0, 4, 5, 6, 8, 9, 10, 14, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 41, 43, 45, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 97, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 124, 127, 130, 136, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 205, 209, 210, 211, 212, 214, 215, 217, 218, 220, 225, 226, 228, 232], "should": [0, 4, 5, 6, 8, 9, 10, 20, 25, 26, 28, 29, 43, 50, 51, 55, 56, 58, 59, 65, 68, 69, 70, 71, 74, 79, 87, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 133, 136, 140, 141, 143, 144, 146, 151, 156, 157, 159, 161, 162, 165, 170, 173, 185, 187, 188, 189, 190, 191, 192, 194, 202, 211, 212, 214, 215, 218], "develop": [0, 14, 225], "prioriti": 0, "given": [0, 15, 28, 40, 42, 44, 53, 55, 56, 59, 74, 79, 94, 124, 154, 157, 171, 175, 176, 209, 210], "great": [0, 27, 82, 86], "deal": 0, "ha": [0, 12, 13, 28, 35, 45, 51, 65, 70, 76, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 127, 128, 129, 130, 148, 151, 159, 161, 162, 166, 185, 227], "oper": [0, 19, 20, 27, 28, 29, 33, 34, 51, 59, 64, 65, 72, 73, 76, 80, 87, 91, 115, 140, 141, 145, 148, 150, 152, 153, 159, 162, 165, 167, 168, 169, 171, 178, 203, 209, 210, 213, 224, 229], "under": [0, 27, 29, 53, 56, 115, 119, 126, 127, 128, 129, 130, 132, 135, 137, 138, 165, 187, 188, 190, 191], "cifti": [0, 20, 105, 108, 110, 115], "current": [0, 4, 5, 8, 9, 10, 24, 25, 26, 27, 28, 29, 58, 60, 64, 73, 82, 95, 97, 105, 115, 122, 124, 140, 146, 150, 158, 160, 168, 188, 191, 195, 209, 212, 220, 225, 227], "we": [0, 6, 20, 27, 28, 29, 41, 72, 86, 105, 119, 127, 130, 150, 162, 165, 171, 203, 205, 212, 220, 232], "acquir": 0, "an": [0, 6, 9, 15, 17, 18, 23, 26, 27, 28, 29, 36, 38, 41, 43, 45, 55, 58, 63, 66, 74, 76, 79, 82, 85, 87, 91, 100, 105, 106, 107, 108, 109, 110, 111, 115, 119, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 148, 150, 151, 153, 157, 158, 159, 161, 165, 171, 175, 176, 178, 185, 187, 188, 189, 190, 191, 192, 194, 195, 205, 209, 210, 214, 215, 217, 220, 226, 232], "intern": [0, 13, 28, 29, 119, 159, 171, 187, 188, 190, 191, 193, 205, 226], "lightgrabb": 0, "d": [0, 36, 38, 64, 74, 75, 76, 77, 78, 79, 82, 85, 89, 90, 91, 92, 105, 157, 160, 166, 175, 176, 177, 178, 179, 180, 185, 194, 212, 232], "eventu": [0, 8, 105, 225, 226], "actual": [0, 106, 119, 120, 140, 171, 193, 220], "bidslayout": 0, "from": [0, 2, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 25, 26, 28, 29, 33, 34, 35, 41, 58, 59, 62, 63, 66, 68, 70, 71, 72, 73, 74, 79, 83, 84, 86, 87, 90, 91, 92, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 123, 124, 140, 141, 142, 144, 146, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 176, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 194, 205, 209, 210, 211, 214, 224, 225, 227, 228, 232], "pybid": [0, 220], "robust": [0, 105, 185, 209], "lightbidslayout": [0, 220], "bidsobjectfactori": [0, 220], "lightbidsobject": [0, 1, 220], "hypercoil": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 205, 206, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 224, 225, 227], "bid": [1, 2, 3, 4, 5, 10, 220, 229], "factori": [1, 8, 9, 26], "produc": [1, 8, 9, 10, 15, 21, 26, 63, 119, 167, 168, 169, 187, 188, 189, 190, 191, 192, 206, 211], "thin": [1, 3, 155, 206], "wrapper": [1, 3, 152, 153, 155, 161, 206, 228], "around": [1, 3, 34, 155, 157, 206, 224], "variablefactori": [1, 9, 26], "consult": [1, 3, 40, 41, 42, 44, 45, 46, 47, 48, 140, 143, 193, 194], "further": [1, 3, 9, 27, 28, 72, 123, 124, 144, 151, 194, 232], "document": [1, 3, 4, 8, 9, 12, 13, 23, 28, 29, 40, 41, 42, 44, 45, 46, 47, 48, 72, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 140, 143, 144, 151, 157, 158, 159, 160, 161, 162, 164, 165, 171, 173, 193, 194, 225, 232], "root": [2, 23, 33, 74, 79, 88, 92, 150, 211], "queri": [2, 8, 9, 10, 26, 201], "lightweight": 2, "minim": [2, 127, 130, 225], "datagrabb": 2, "inspir": [2, 59, 220], "paramet": [2, 4, 5, 8, 9, 10, 13, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 194, 202, 205, 206, 209, 210, 211, 212, 214, 215, 218, 226], "str": [2, 4, 5, 8, 10, 16, 18, 21, 23, 25, 33, 72, 107, 108, 110, 111, 112, 113, 114, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173], "directori": [2, 4, 5, 8, 9, 10, 23, 25, 26], "file": [2, 4, 5, 10, 16, 18, 20, 23, 24, 25, 105, 108, 110, 112, 113, 114, 115, 220], "system": [2, 16, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 157], "pattern": [2, 4, 8, 23, 193, 220], "list": [2, 4, 5, 8, 9, 10, 13, 17, 19, 21, 23, 25, 26, 29, 82, 94, 140, 141, 142, 144, 149, 194, 209, 210, 212], "string": [2, 4, 5, 17, 19, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173], "constrain": [2, 5, 25, 119, 123, 124, 126, 128, 129, 137, 138, 140, 142, 144, 146, 151, 161, 162, 165, 185, 187, 188, 190, 191, 194, 214, 226], "scope": 2, "layout": [2, 8, 9, 10, 23, 26, 220], "If": [2, 8, 9, 12, 13, 17, 19, 20, 21, 26, 28, 33, 35, 36, 38, 43, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 66, 67, 70, 72, 74, 76, 79, 82, 85, 86, 87, 90, 92, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 123, 124, 136, 140, 143, 144, 145, 146, 148, 150, 151, 154, 157, 165, 167, 168, 169, 176, 178, 185, 187, 188, 189, 190, 191, 192, 194, 195, 202, 205, 209, 210, 212, 214, 218, 226, 232], "ar": [2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 26, 27, 28, 29, 32, 35, 36, 38, 48, 53, 54, 55, 56, 58, 59, 60, 66, 70, 72, 74, 76, 79, 82, 85, 86, 87, 90, 91, 92, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 146, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 161, 162, 165, 169, 171, 177, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 194, 203, 205, 209, 210, 212, 214, 218, 220, 224, 225, 226, 232], "provid": [2, 8, 9, 15, 17, 26, 28, 33, 35, 50, 51, 56, 59, 63, 82, 86, 87, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 140, 141, 142, 143, 146, 165, 176, 178, 187, 188, 189, 190, 191, 193, 194, 212, 226, 228], "includ": [2, 4, 5, 6, 9, 10, 13, 23, 25, 26, 45, 58, 60, 68, 71, 82, 85, 94, 95, 96, 97, 105, 107, 115, 126, 127, 128, 129, 130, 142, 153, 159, 162, 185, 187, 188, 189, 190, 191, 192, 220, 225], "ani": [2, 4, 5, 9, 10, 15, 16, 19, 20, 21, 23, 25, 26, 28, 29, 34, 35, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 58, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 123, 124, 126, 127, 128, 129, 130, 136, 137, 138, 140, 144, 145, 146, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 185, 187, 188, 189, 190, 191, 192, 194, 205, 206, 209, 210, 211, 224, 226], "do": [2, 20, 28, 91, 103, 105, 119, 140, 150, 185, 188, 191, 212], "match": [2, 8, 10, 21, 23, 140, 144, 174, 175, 176, 177, 178, 179, 180, 220], "least": [2, 66, 72, 146, 203], "one": [2, 6, 13, 17, 27, 28, 29, 41, 65, 105, 140, 143, 146, 149, 154, 158, 160, 162, 165, 170, 187, 188, 189, 205, 210, 212], "dataqueri": [2, 7, 10, 220], "object": [2, 5, 6, 8, 9, 10, 11, 13, 17, 21, 23, 25, 26, 28, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119, 121, 123, 124, 126, 127, 128, 129, 130, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 185, 187, 188, 189, 190, 191, 192, 194, 209, 210, 220, 228], "defin": [2, 27, 28, 29, 35, 38, 40, 41, 42, 44, 54, 55, 56, 60, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 170, 172, 214, 220], "variabl": [2, 4, 5, 8, 9, 10, 17, 25, 26, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 72, 94, 95, 96, 97, 166, 187, 188, 189, 190, 191, 192, 194, 205, 212, 215, 220], "extract": [2, 27, 185], "via": [2, 4, 5, 9, 10, 19, 21, 25, 40, 42, 44, 46, 47, 49, 50, 51, 66, 72, 74, 76, 79, 87, 95, 97, 148, 171, 185, 194], "name": [3, 8, 9, 10, 15, 16, 21, 23, 26, 29, 107, 108, 109, 110, 111, 112, 113, 114, 115, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 200, 220], "regex": 3, "metadata": [3, 14, 15, 16, 20, 24, 220], "none": [3, 4, 5, 6, 8, 9, 10, 15, 17, 19, 21, 25, 26, 28, 29, 33, 35, 36, 37, 38, 43, 45, 53, 55, 56, 58, 60, 63, 70, 81, 82, 85, 86, 87, 95, 97, 98, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 205, 206, 207, 209, 210, 212, 214, 215, 217, 218], "metadata_glob": 3, "metadata_loc": 3, "datapathvari": 3, "fmriprep_dir": [4, 5], "space": [4, 5, 36, 38, 76, 82, 85, 105, 107, 115, 127, 130, 148, 157, 158, 187, 188, 189, 190, 191, 192, 209, 210], "additional_t": [4, 5, 10, 25], "ignor": [4, 5, 10, 25, 29, 70, 151, 170, 187, 188, 189, 190, 191, 192], "label": [4, 5, 9, 10, 15, 25, 26, 58, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 185], "subject": [4, 5, 10, 11, 23, 25, 26, 27, 87, 226], "outcom": [4, 5, 9, 10, 25, 26, 161], "model": [4, 5, 10, 15, 24, 25, 27, 28, 29, 54, 55, 56, 108, 110, 115, 158, 165, 187, 188, 189, 190, 191, 192, 205, 206, 207, 209, 212, 215, 226, 227, 228, 229, 231], "tmask": [4, 5, 25, 59], "observ": [4, 5, 6, 9, 10, 25, 26, 41, 43, 45, 46, 47, 50, 51, 58, 59, 60, 72, 82, 85, 94, 95, 96, 97, 136, 148, 156, 160, 165, 171, 175, 176, 177, 178, 180, 187, 188, 189, 190, 191, 192, 194, 205, 206, 212, 220], "level": [4, 5, 8, 9, 10, 11, 12, 13, 17, 25, 26, 27, 154, 156], "session": [4, 5, 10, 11, 25], "run": [4, 5, 10, 23, 25, 26, 27, 29, 76, 82, 85, 146, 148, 170], "task": [4, 5, 6, 10, 25], "depth": [4, 9, 11, 12, 13, 26], "0": [4, 5, 6, 13, 22, 25, 28, 38, 43, 45, 58, 59, 65, 68, 70, 71, 74, 75, 76, 77, 78, 79, 90, 91, 92, 109, 110, 111, 112, 115, 119, 120, 123, 127, 129, 130, 132, 134, 137, 138, 140, 142, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 157, 159, 162, 165, 166, 167, 173, 185, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 201, 205, 207, 209, 210, 212, 214, 215, 219], "base": [4, 6, 12, 13, 16, 17, 23, 26, 59, 105, 107, 108, 109, 111, 115, 117, 118, 119, 120, 121, 122, 150, 152, 153, 156, 168, 172, 173, 186, 212, 215, 226, 228, 229, 231], "referenceddataset": [4, 11, 12, 26, 220], "referenc": [4, 5, 13, 220, 229], "output": [4, 10, 14, 15, 21, 27, 28, 29, 31, 32, 33, 35, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 66, 69, 70, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 140, 142, 144, 145, 146, 150, 152, 153, 157, 167, 168, 169, 171, 178, 179, 180, 187, 188, 189, 190, 191, 192, 194, 202, 205, 206, 209, 210, 211, 214, 228], "top": [4, 5, 10, 25, 26], "contain": [4, 5, 8, 9, 10, 15, 16, 18, 19, 20, 21, 25, 26, 28, 29, 35, 36, 41, 43, 45, 72, 82, 83, 84, 85, 86, 94, 96, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 141, 154, 155, 160, 161, 162, 167, 176, 185, 187, 188, 189, 190, 191, 192, 194, 215, 220, 226], "all": [4, 5, 6, 8, 9, 10, 14, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 35, 41, 45, 46, 47, 53, 54, 56, 58, 59, 65, 66, 73, 74, 76, 79, 90, 91, 92, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 144, 145, 148, 159, 161, 162, 165, 170, 177, 178, 180, 194, 209, 210, 212, 214, 215, 224, 226, 228], "preprocess": [4, 5], "default": [4, 5, 8, 10, 13, 15, 16, 19, 21, 25, 29, 33, 35, 36, 38, 43, 53, 55, 56, 58, 59, 60, 63, 68, 69, 70, 71, 72, 82, 84, 85, 86, 87, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 123, 124, 126, 127, 128, 129, 130, 140, 142, 143, 144, 145, 146, 148, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 194, 202, 205, 212, 214, 226], "indic": [4, 5, 10, 13, 16, 17, 19, 25, 28, 34, 38, 43, 53, 55, 56, 58, 59, 60, 69, 72, 83, 84, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 133, 136, 140, 144, 165, 176, 177, 178, 180, 185, 187, 188, 189, 190, 191, 192, 211, 212], "stereotax": [4, 5], "coordin": [4, 5, 34, 37, 38, 82, 83, 84, 85, 86, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 144, 157, 160, 185, 224, 229], "which": [4, 5, 6, 11, 12, 13, 25, 27, 28, 29, 33, 35, 38, 53, 54, 55, 56, 58, 59, 66, 69, 74, 75, 76, 77, 78, 79, 82, 85, 91, 95, 97, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 130, 140, 144, 148, 149, 150, 151, 153, 154, 155, 156, 159, 161, 162, 165, 167, 168, 169, 171, 172, 179, 185, 194, 209, 210, 212, 220], "imag": [4, 5, 105, 106, 107, 109, 112, 113, 114, 115, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 145, 185], "addit": [4, 5, 6, 8, 10, 13, 15, 16, 20, 24, 25, 27, 29, 30, 50, 51, 55, 56, 70, 91, 95, 97, 115, 119, 150, 151, 165, 170, 187, 188, 189, 190, 191, 192, 211], "each": [4, 5, 6, 9, 10, 13, 15, 17, 19, 21, 25, 26, 27, 28, 29, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 66, 68, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 144, 146, 149, 151, 154, 155, 157, 158, 159, 161, 162, 164, 165, 171, 185, 187, 188, 189, 190, 191, 192, 194, 209, 210, 211, 212, 214, 220, 228], "index": [4, 5, 9, 10, 15, 17, 25, 26, 162, 194], "column": [4, 5, 9, 10, 15, 25, 26, 36, 38, 63, 64, 70, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 151, 157, 162, 171, 188, 191, 214, 218, 226], "correspond": [4, 5, 9, 10, 12, 13, 15, 25, 26, 28, 29, 33, 34, 36, 38, 41, 43, 45, 50, 51, 54, 55, 60, 63, 70, 82, 95, 96, 97, 105, 108, 110, 112, 119, 140, 148, 151, 157, 158, 159, 161, 162, 167, 168, 169, 171, 172, 173, 177, 178, 180, 187, 188, 189, 190, 191, 192, 205, 220], "identifi": [4, 5, 8, 9, 10, 23, 25, 26, 66, 105, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173], "present": [4, 5, 9, 10, 25, 26, 107, 115, 226, 232], "e": [4, 5, 10, 11, 23, 25, 28, 29, 36, 38, 43, 95, 97, 115, 126, 128, 129, 144, 155, 157, 162, 165, 171, 175, 176, 178, 179, 187, 188, 189, 190, 191, 192, 220], "g": [4, 5, 10, 11, 23, 25, 28, 36, 38, 155, 162, 171, 175, 178, 187, 188, 189, 190, 191, 192, 220], "etc": [4, 5, 10, 25, 167, 168, 169, 172, 173, 187, 188, 190, 191, 215], "dict": [4, 5, 8, 9, 10, 16, 18, 20, 25, 26, 29, 106, 107, 108, 109, 110, 111, 112, 113, 114, 140, 202, 214], "dictionari": [4, 5, 8, 9, 10, 15, 16, 17, 18, 20, 25, 26, 29, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 202, 214], "doesn": [4, 5, 10, 25, 120], "t": [4, 5, 8, 10, 15, 16, 20, 25, 28, 86, 120, 146, 150, 156, 171, 176, 194, 205, 206, 209], "support": [4, 5, 10, 25, 28, 56, 80, 93, 131, 140, 165, 186, 189, 192, 204, 212, 227], "logic": [4, 5, 10, 25, 115, 226, 229], "composit": [4, 5, 10, 25], "take": [4, 5, 8, 10, 23, 25, 28, 29, 34, 82, 87, 105, 115, 119, 150, 159, 170, 187, 190, 194, 205, 220], "OR": [4, 5, 10, 25], "over": [4, 5, 10, 11, 25, 27, 28, 29, 59, 60, 75, 76, 77, 78, 89, 94, 95, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 148, 149, 154, 157, 159, 161, 162, 165, 167, 168, 169, 172, 185, 194, 226, 228], "specif": [4, 5, 10, 15, 21, 24, 25, 26, 35, 37, 39, 58, 95, 97, 140, 141, 142, 143, 149, 176, 193, 194, 210], "In": [4, 5, 6, 9, 10, 24, 25, 26, 27, 43, 72, 76, 82, 87, 91, 105, 136, 146, 148, 157, 159, 171, 187, 188, 189, 190, 191, 192, 203, 210, 220, 226, 232], "other": [4, 5, 9, 10, 25, 28, 41, 46, 47, 63, 82, 87, 93, 111, 122, 152, 157, 158, 160, 162, 169, 214, 215, 228], "word": [4, 5, 10, 25], "thei": [4, 5, 9, 10, 11, 19, 20, 21, 25, 28, 58, 59, 60, 66, 99, 185, 226], "satisfi": [4, 5, 10, 25, 167, 185, 212, 214], "criteria": [4, 5, 10, 25], "tupl": [4, 5, 9, 10, 25, 26, 28, 69, 70, 83, 84, 95, 97, 123, 140, 143, 146, 173, 214], "categor": [4, 5, 9, 10, 17, 25, 26, 110, 111, 124, 161], "These": [4, 5, 10, 11, 25, 105, 115, 140, 162, 188, 191, 194, 228], "can": [4, 5, 6, 9, 10, 13, 15, 17, 19, 20, 21, 25, 26, 27, 28, 29, 33, 35, 41, 43, 46, 47, 50, 51, 59, 63, 70, 72, 74, 76, 79, 82, 85, 87, 90, 91, 92, 95, 97, 99, 105, 106, 107, 115, 119, 122, 123, 124, 136, 140, 141, 142, 144, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 165, 171, 172, 173, 185, 187, 188, 189, 190, 191, 192, 194, 209, 210, 212, 214, 215, 218, 220, 226, 228], "taken": [4, 5, 10, 25], "either": [4, 5, 10, 25, 28, 59, 60, 67, 76, 105, 115, 137, 138, 148, 162, 173, 176, 187, 188, 189, 194, 212, 214, 218, 226], "tabl": [4, 5, 10, 25], "becom": [4, 5, 10, 25, 76, 148, 159, 161, 212], "avail": [4, 5, 10, 20, 25, 34, 48, 107, 115, 159, 171, 187, 188, 189, 190, 191, 192, 212, 214, 225, 226], "predict": [4, 5, 10, 25], "target": [4, 5, 10, 25, 209, 210], "classif": [4, 5, 10, 25, 212], "By": [4, 5, 13, 25, 29, 43, 55, 56, 58, 60, 68, 69, 71, 107, 108, 110, 112, 113, 114, 140, 159, 161, 165, 187, 188, 189, 190, 191, 192, 194, 212], "continu": [4, 5, 9, 10, 25, 26, 105, 107, 113, 114, 115, 145], "regress": [4, 5, 10, 25, 187, 188, 189, 204], "formula": [4, 5, 25, 28], "express": [4, 5, 25, 86, 115, 157], "repres": [4, 5, 8, 10, 17, 25, 28, 74, 79, 142, 161, 165, 171, 185, 215], "confound": [4, 5, 24, 25, 41, 187, 188, 189, 204, 220], "For": [4, 5, 6, 8, 11, 25, 26, 27, 28, 29, 43, 54, 55, 88, 91, 95, 97, 105, 110, 111, 115, 119, 123, 124, 130, 140, 142, 144, 151, 159, 161, 162, 165, 167, 173, 187, 188, 189, 190, 191, 192, 214, 217, 226, 227, 228], "exampl": [4, 5, 9, 25, 27, 119, 153, 162, 167, 215, 225, 226, 227], "36": [4, 5, 25], "expand": [4, 5, 25, 63, 87, 94, 96, 97, 150, 214, 232], "specifi": [4, 5, 8, 9, 10, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 33, 35, 36, 38, 43, 58, 60, 63, 66, 69, 70, 76, 87, 90, 91, 92, 94, 95, 96, 97, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 133, 136, 140, 142, 143, 144, 145, 146, 148, 149, 151, 156, 157, 161, 162, 167, 168, 169, 171, 172, 185, 187, 188, 189, 190, 191, 192, 194, 212, 214, 224], "dd1": [4, 5, 25], "rp": [4, 5, 25, 140, 143], "wm": [4, 5, 25], "csf": [4, 5, 25], "gsr": [4, 5, 25], "2": [4, 5, 25, 27, 28, 29, 35, 38, 43, 50, 51, 63, 65, 68, 69, 70, 71, 74, 79, 83, 84, 85, 86, 87, 95, 96, 97, 123, 140, 146, 150, 156, 157, 158, 162, 166, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 187, 188, 189, 190, 191, 192, 205, 209, 210, 214], "tempor": [4, 5, 6, 25, 43, 185, 187, 188, 189, 190, 191, 192], "mask": [4, 5, 6, 25, 58, 60, 100, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 141, 185, 187, 188, 189, 190, 191, 192, 194, 226, 229], "instanc": [4, 5, 6, 25, 26, 29, 43, 55, 56, 63, 70, 74, 79, 87, 91, 105, 106, 107, 113, 114, 115, 123, 124, 136, 140, 144, 146, 151, 155, 160, 165, 170, 173, 185, 187, 188, 189, 190, 191, 192, 214, 218, 226, 228], "uthr0": [4, 5, 25], "5": [4, 5, 25, 129, 140, 205, 215], "fd": [4, 5, 25], "uthr1": [4, 5, 25], "dv": [4, 5, 25], "result": [4, 5, 8, 9, 25, 26, 54, 55, 56, 59, 66, 72, 86, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 130, 133, 136, 144, 146, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 185, 202, 203, 205, 211], "time": [4, 5, 6, 14, 20, 25, 39, 40, 42, 43, 44, 50, 51, 53, 54, 56, 58, 59, 60, 87, 95, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 146, 159, 162, 165, 171, 176, 179, 185, 187, 188, 189, 190, 191, 192, 194, 202, 205, 206, 212, 217, 218, 220, 224, 229, 232], "point": [4, 5, 6, 25, 37, 38, 39, 59, 60, 74, 76, 79, 82, 83, 84, 85, 86, 107, 108, 109, 110, 111, 112, 113, 114, 133, 140, 141, 144, 145, 148, 149, 157, 162, 185, 187, 188, 189, 190, 191, 192, 194, 205, 206, 209, 210, 226, 228], "less": [4, 5, 25, 58, 59, 76, 133, 145, 148, 167], "than": [4, 5, 9, 21, 25, 26, 27, 38, 58, 59, 66, 76, 115, 119, 133, 136, 145, 148, 160, 161, 168, 169, 187, 188, 189, 190, 191, 192, 205], "framewis": [4, 5, 25], "displac": [4, 5, 25, 34, 157, 158, 224], "1": [4, 5, 22, 25, 27, 28, 29, 35, 38, 41, 43, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 68, 69, 71, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 90, 91, 92, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 185, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 205, 209, 210, 211, 212, 214, 215, 219], "standardis": [4, 5, 14, 25, 171, 220], "dvar": [4, 5, 25], "whose": [4, 5, 8, 9, 10, 17, 25, 26, 31, 32, 35, 36, 41, 58, 59, 70, 83, 95, 97, 105, 107, 108, 110, 111, 112, 113, 114, 115, 119, 133, 136, 140, 142, 146, 155, 159, 160, 162, 165, 167, 168, 169, 171, 176, 210, 214, 220], "packag": [4, 5, 9, 10, 25, 26, 212, 220, 228], "separ": [4, 5, 10, 25, 26, 35, 41, 59, 82, 85, 105, 115, 140, 159, 160, 161, 205], "have": [4, 5, 6, 8, 10, 20, 25, 27, 28, 56, 65, 72, 119, 120, 124, 127, 130, 140, 142, 153, 154, 155, 157, 159, 165, 171, 203, 212, 214, 215, 232], "same": [4, 5, 6, 10, 25, 31, 32, 33, 53, 54, 55, 56, 58, 59, 63, 66, 70, 76, 87, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 119, 140, 143, 148, 149, 151, 158, 165, 171, 189, 192, 209, 210, 218], "valu": [4, 5, 6, 9, 10, 14, 17, 18, 21, 23, 25, 26, 28, 31, 32, 35, 43, 53, 55, 56, 58, 59, 60, 65, 66, 70, 74, 76, 79, 82, 83, 84, 90, 91, 92, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 133, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 151, 154, 156, 157, 159, 165, 166, 168, 172, 173, 176, 178, 185, 187, 188, 189, 190, 191, 192, 194, 205, 209, 210, 212, 214, 220, 228], "sublevel": [4, 5, 10, 25], "permit": [4, 5, 10, 25, 95, 97, 133, 136, 187, 188, 190, 191], "easier": [4, 5, 10, 25], "augment": [4, 5, 10, 25, 187, 188, 189, 190, 191, 192, 207, 209], "pool": [4, 5, 10, 25], "across": [4, 5, 10, 25, 26, 27, 35, 58, 59, 63, 69, 94, 95, 96, 97, 113, 114, 115, 144, 162, 177, 178, 180, 185, 194, 205], "int": [4, 13, 21, 43, 58, 60, 68, 69, 70, 71, 75, 76, 77, 78, 82, 85, 96, 107, 108, 109, 110, 111, 112, 113, 114, 124, 127, 130, 140, 143, 146, 148, 156, 161, 162, 167, 168, 169, 172, 185, 187, 188, 189, 190, 191, 192, 194, 202, 205, 206, 212, 214], "sampl": [4, 5, 12, 13, 25, 26, 27, 28, 41, 43, 45, 59, 74, 79, 90, 91, 92, 105, 109, 110, 111, 115, 121, 123, 124, 140, 143, 144, 179, 180, 185, 205, 210, 211], "nest": [4, 12, 13, 23, 26, 115, 215], "hierarch": [4, 13], "minibatch": [4, 13], "highest": [4, 13], "method": [4, 6, 8, 9, 10, 12, 13, 23, 26, 28, 29, 57, 58, 59, 66, 85, 91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 145, 146, 148, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 168, 170, 171, 173, 182, 184, 185, 193, 194, 195, 197, 198, 199, 205, 206, 207, 211, 212, 214, 219], "add_data": [4, 13], "add": [4, 13, 43, 150, 154, 155, 187, 188, 189, 190, 191, 192, 202, 212, 214], "anoth": [4, 6, 41, 105, 107, 108, 109, 110, 111, 112, 113, 114, 149, 165, 185, 200, 210], "follow": [4, 10, 28, 29, 33, 47, 58, 65, 68, 71, 82, 107, 119, 140, 142, 166, 187, 188, 190, 191, 194, 195, 211, 220, 232], "constructor": [4, 115, 212], "dtype": [5, 21, 25, 70, 107, 108, 109, 110, 111, 112, 113, 114, 141, 156, 179, 185, 187, 188, 189, 190, 191, 192, 194, 195, 201, 202, 205, 206, 207, 210, 214, 217], "devic": [5, 17, 21, 25, 70, 107, 108, 109, 110, 111, 112, 113, 114, 156, 179, 185, 187, 188, 189, 190, 191, 192, 194, 195, 201, 202, 205, 206, 207, 210, 214, 217], "obtain": [5, 9, 10, 13, 15, 18, 20, 25, 40, 42, 43, 44, 46, 47, 82, 166, 187, 188, 189, 190, 191, 192], "process": [5, 24, 28, 29, 166, 176, 179, 180, 194, 220], "torch": [5, 6, 21, 25, 27, 28, 29, 39, 50, 51, 72, 89, 91, 95, 97, 124, 141, 154, 157, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 179, 203, 206, 215, 227], "datatyp": [5, 21, 25, 107, 108, 109, 110, 111, 112, 113, 114, 142], "datarefer": [5, 7, 10, 11, 13, 25, 26, 220], "creation": [5, 25, 107, 108, 112, 113, 114], "note": [5, 9, 17, 20, 25, 27, 51, 56, 66, 83, 84, 87, 90, 91, 92, 106, 115, 126, 127, 130, 136, 140, 142, 150, 154, 155, 160, 165, 168, 187, 188, 190, 191, 205, 212, 214, 227], "you": [5, 20, 25, 28, 82, 85, 91, 136, 154, 155, 194, 195, 212, 215, 232], "train": [5, 25, 185, 193, 212, 215, 220, 228], "strongli": [5, 11, 25], "type": [5, 6, 8, 9, 21, 25, 26, 28, 38, 107, 108, 110, 111, 112, 113, 114, 140, 143, 179, 187, 188, 189, 190, 191, 192], "return": [5, 8, 9, 10, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 31, 32, 33, 35, 36, 38, 41, 43, 50, 51, 53, 54, 55, 56, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 133, 134, 136, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 173, 176, 178, 180, 203, 212, 215], "data_ref": [5, 10, 13, 25], "fmridatarefer": [5, 9, 25], "found": [5, 10, 25, 72, 149, 171, 203, 232], "patch": 6, "pytorch": [6, 21, 43, 121, 227], "s": [6, 8, 9, 12, 13, 15, 19, 20, 26, 27, 28, 29, 34, 35, 36, 38, 53, 56, 87, 94, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 127, 128, 129, 130, 137, 138, 140, 141, 150, 154, 155, 157, 159, 162, 165, 185, 194, 205, 209, 220, 226, 232], "default_col": 6, "associ": [6, 82, 85, 115, 156, 157, 160, 165], "enabl": [6, 9, 24, 26, 27, 107, 108, 109, 110, 111, 112, 113, 114, 140, 214, 226, 228], "argument": [6, 8, 9, 15, 16, 20, 21, 26, 28, 29, 31, 32, 33, 34, 51, 58, 59, 60, 70, 74, 79, 105, 115, 117, 118, 119, 123, 126, 144, 149, 151, 172, 194], "typic": [6, 39, 58, 82, 88, 115], "when": [6, 9, 20, 26, 28, 56, 58, 59, 72, 76, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 124, 126, 127, 128, 129, 130, 140, 148, 158, 159, 161, 162, 165, 166, 171, 176, 185, 203, 212, 214, 215, 220, 226], "tensor": [6, 14, 17, 19, 22, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 194, 202, 206, 209, 210, 211, 212, 214, 218, 220, 228], "form": [6, 8, 67, 68, 71, 74, 79, 102, 105, 176, 206, 212, 220], "our": [6, 27, 28, 29, 171, 220, 221, 232], "gen_col": 6, "modifi": [6, 65, 66], "make": [6, 28, 51, 119, 159, 212], "itself": [6, 31, 32, 87, 105, 126, 128, 129, 159, 176, 211], "set": [6, 8, 20, 28, 29, 33, 35, 41, 43, 45, 53, 54, 55, 56, 58, 59, 60, 68, 71, 86, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 123, 140, 144, 145, 146, 154, 156, 157, 159, 160, 161, 165, 166, 167, 169, 170, 171, 185, 187, 188, 189, 190, 191, 192, 194, 205, 209, 210, 212, 214, 220, 226], "stack": [6, 70, 87, 151, 214, 218, 225], "along": [6, 19, 21, 35, 41, 43, 45, 50, 51, 68, 70, 71, 76, 91, 100, 124, 127, 130, 144, 148, 161, 162, 165, 171, 172, 187, 188, 190, 191, 211], "new": [6, 8, 15, 16, 19, 21, 28, 76, 94, 96, 105, 146, 148, 209, 211, 212], "prepend": [6, 172], "axi": [6, 19, 21, 22, 34, 36, 41, 43, 45, 50, 51, 62, 70, 72, 75, 76, 77, 78, 95, 97, 100, 103, 108, 110, 124, 127, 130, 136, 144, 148, 151, 158, 161, 162, 165, 167, 168, 169, 172, 187, 188, 189, 190, 191, 192], "With": [6, 115], "altern": [6, 26, 209, 210, 212], "extend_and_bind": 6, "design": [6, 87, 105, 115, 146, 157, 162, 220], "handl": [6, 35, 105, 126, 127, 128, 129, 130, 133, 137, 138, 220], "case": [6, 11, 15, 26, 27, 28, 29, 43, 55, 56, 72, 90, 91, 92, 105, 122, 146, 152, 157, 159, 162, 165, 171, 173, 187, 188, 189, 190, 191, 192, 203, 209, 210, 214, 220, 225, 226], "being": [6, 28, 68, 74, 79, 120, 159, 185], "might": [6, 9, 15, 26, 59, 82, 85, 91, 105, 119, 153, 159, 162, 171, 205, 209], "size": [6, 19, 21, 27, 41, 43, 45, 50, 51, 54, 55, 56, 58, 60, 70, 72, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 94, 95, 96, 97, 146, 150, 154, 165, 187, 188, 189, 190, 191, 192, 194, 209, 210, 211], "commonli": 6, "occur": [6, 58, 74, 79, 91, 159, 162], "differ": [6, 10, 21, 34, 50, 51, 53, 55, 56, 59, 70, 76, 97, 107, 108, 109, 110, 111, 112, 113, 114, 136, 146, 148, 149, 151, 152, 159, 165, 171, 172, 189, 192, 209, 210, 214], "acquisit": 6, "durat": [6, 166], "termin": [6, 28, 76, 148], "earli": 6, "pad": [6, 21, 95, 97, 98], "miss": [6, 14, 21, 58, 59, 60, 220], "until": [6, 19, 21, 60, 70, 185], "concaten": [6, 70, 151, 185], "them": [6, 9, 26, 29, 41, 58, 59, 60, 133, 159, 161, 165, 167, 170, 193, 205, 215, 228], "wai": [6, 17, 27, 85, 87, 103, 119, 212, 215], "prefix": 6, "random": [6, 28, 29, 105, 110, 111, 123, 144, 146, 185, 211, 226], "window": [6, 14, 58, 60, 95, 97, 219, 220], "selector": [6, 152, 205], "transform": [6, 8, 9, 15, 17, 26, 31, 32, 58, 59, 74, 79, 87, 89, 90, 91, 92, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 126, 127, 128, 129, 130, 132, 135, 137, 138, 140, 142, 144, 145, 146, 151, 161, 165, 167, 168, 169, 175, 179, 180, 185, 187, 188, 190, 191, 194, 217, 220, 226, 229], "sure": [6, 150], "appropri": [6, 72, 94, 119, 124, 185], "would": [6, 27, 105, 160, 212, 220, 232], "sens": [6, 28, 51], "replac": [6, 11, 16, 19, 35, 59, 63, 74, 76, 79, 87, 90, 91, 92, 148, 209, 210], "signal": [6, 39, 49, 50, 51, 140, 143, 175, 176, 177, 178, 179, 180, 183, 185, 226], "exclud": [6, 108, 110, 115, 144, 165, 169], "keep": 6, "code": [6, 115], "sync": 6, "could": [6, 51, 82, 86, 95, 97, 146, 155, 162], "failur": 6, "concat": 6, "built": 6, "concat_axi": 6, "basic": [6, 176, 225], "stolen": 6, "adapt": [6, 195], "_util": 6, "py": 6, "out": [6, 20, 27, 28, 29, 31, 32, 41, 50, 51, 53, 54, 56, 63, 70, 82, 85, 87, 95, 96, 97, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 150, 165, 194, 202, 217, 218, 232], "interfac": [7, 28, 220, 224, 229], "between": [7, 27, 39, 41, 44, 45, 46, 47, 53, 54, 55, 56, 63, 67, 76, 82, 86, 87, 119, 126, 127, 128, 129, 130, 136, 140, 148, 149, 158, 159, 160, 165, 172, 187, 188, 189, 193, 208, 209, 210, 214], "loader": [7, 12, 115], "data_refer": [7, 9, 13, 26, 220], "dataref": [8, 9, 10, 220, 229], "templat": [8, 23, 63, 87, 109, 110, 150, 214], "filter": [8, 10, 23, 50, 59, 87, 139, 140, 141, 142, 152, 224, 226, 229, 231], "grabber": [8, 23, 220], "represent": [8, 107, 115, 119, 185, 214, 220], "filesystem": [8, 9, 14, 17, 26, 115, 220], "within": [8, 29, 35, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 157, 160, 170], "search": [8, 13, 106, 225], "subsequ": 8, "substanti": [8, 107, 108, 109, 110, 111, 112, 113, 114, 115, 225], "narrow": 8, "acceler": [8, 227], "variablefactoryfactori": 8, "child": [8, 145, 215], "datasetvari": [8, 9, 26], "suitabl": [8, 55, 56, 74, 76, 79, 90, 91, 92, 148, 165, 209, 210], "store": [8, 17, 28, 29, 102, 105, 112, 113, 114, 119, 185, 187, 188, 189, 193, 220, 226], "doe": [8, 19, 28, 29, 45, 67, 123, 127, 130, 142, 144, 151, 189, 192], "noth": [8, 19, 29, 111], "overrid": [8, 43, 187, 188, 189, 190, 191, 192], "now": [8, 20, 28, 29, 76, 82, 83, 84, 85, 99, 146, 148], "just": [8, 28, 86, 214], "write": [8, 220, 225], "ones": [8, 152], "don": [8, 20, 86, 150], "keyword": [8, 115], "onli": [8, 9, 16, 17, 18, 21, 27, 28, 29, 31, 32, 83, 84, 86, 107, 108, 109, 110, 111, 112, 113, 114, 140, 142, 143, 146, 152, 153, 154, 158, 167, 185, 187, 188, 190, 191, 202, 205, 209, 212], "those": [8, 9, 27, 41, 59, 60, 70, 154, 155, 159, 187, 188, 189], "summari": [8, 9, 23, 87], "__call__": [8, 9, 106, 107, 108, 109, 110, 111, 112, 113, 114, 145], "param": [8, 28, 40, 41, 42, 44, 46, 47, 48, 50, 51, 55, 56, 95, 97, 98, 165], "submit": 8, "It": [8, 10, 20, 27, 28, 29, 39, 41, 46, 47, 56, 59, 60, 74, 76, 79, 82, 112, 115, 119, 148, 150, 159, 160, 162, 165, 194, 202, 212, 228], "must": [8, 10, 19, 28, 29, 43, 59, 87, 94, 102, 107, 113, 114, 119, 124, 140, 157, 185, 187, 188, 189, 190, 191, 192, 194, 195, 212, 214, 215], "implement": [8, 9, 10, 26, 27, 29, 43, 67, 73, 81, 85, 105, 107, 115, 140, 141, 142, 171, 185, 193, 194, 195, 212, 220, 228], "get": [8, 9, 10, 23, 86], "entri": [8, 9, 10, 17, 19, 21, 26, 33, 40, 42, 43, 44, 46, 47, 53, 56, 70, 101, 106, 115, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 151, 152, 155, 157, 165, 172, 187, 188, 189, 190, 191, 192, 211], "combin": [8, 10, 58, 74, 76, 79, 91, 105, 107, 108, 109, 110, 111, 112, 113, 114, 148, 152, 159, 206, 207, 209, 210, 220, 226], "initialis": [8, 9, 26, 76, 106, 109, 110, 111, 115, 117, 118, 119, 120, 121, 122, 123, 124, 130, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 185, 187, 188, 190, 191, 193, 194, 202, 205, 209, 210, 214, 220, 225, 229], "collis": 8, "preced": [8, 36, 38, 53, 63, 64, 205, 206, 209, 210, 211], "variable_factori": 8, "assign": [8, 9, 18, 21, 26, 38, 53, 55, 56, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 161, 162, 165, 215], "idx": [9, 26], "level_nam": [9, 26], "singl": [9, 21, 26, 35, 70, 94, 95, 96, 97, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 136, 140, 146, 151, 161, 162, 165, 185, 187, 188, 190, 191, 192, 212, 220, 228], "multivari": [9, 26, 41, 43, 45, 50, 51, 166, 175, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 192], "sub": [9, 26], "recurs": [9, 17, 26, 140, 143, 145], "subref": [9, 26], "field": [9, 26, 111, 145, 150, 157, 185], "parent": [9, 13, 26, 124, 215], "dataload": [9, 12], "travers": [9, 26], "see": [9, 29, 37, 72, 81, 85, 95, 97, 105, 109, 117, 118, 123, 136, 144, 149, 151, 154, 176, 212, 221], "datafram": [9, 15, 21, 26], "panda": [9, 21], "assum": [9, 20, 23, 26, 29, 53, 56, 112, 165, 178, 218], "iter": [9, 17, 21, 26, 28, 29, 33, 35, 60, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 144, 145, 146, 148, 167, 168, 169], "togeth": [9, 26, 28, 35, 58, 60, 82, 85, 95, 97, 105, 107, 108, 109, 110, 111, 112, 113, 114, 130, 159, 193, 211], "furthermor": [9, 26], "slice": [9, 26, 29, 35, 41, 43, 45, 53, 56, 66, 68, 69, 122, 124, 127, 130, 165, 167, 168, 169, 171, 172, 187, 188, 189, 190, 191, 192], "here": [9, 26, 28, 70, 73, 85, 111, 127, 130, 142, 150, 209, 212, 226], "futur": [9, 11, 24, 26, 95, 97, 122], "comput": [9, 26, 28, 29, 33, 34, 35, 36, 38, 41, 43, 45, 46, 47, 53, 54, 55, 56, 64, 75, 76, 77, 78, 82, 85, 86, 87, 88, 89, 90, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 126, 128, 129, 142, 144, 147, 148, 150, 154, 156, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 178, 185, 187, 188, 189, 190, 191, 192, 209, 211, 212, 214, 224], "automat": [9, 13, 26, 27, 28, 43, 108, 115, 156, 171, 187, 188, 189, 190, 191, 192, 212, 227], "rather": [9, 20, 26, 27, 115, 119, 161, 168, 187, 188, 189, 190, 191, 192], "themselv": [9, 26], "subrefer": [9, 26], "eas": [9, 26], "without": [9, 26, 115, 157, 161, 171, 189, 192], "overwrit": [9, 26], "categoricalvari": [9, 26], "continuousvari": [9, 26], "addition": [9, 26, 27, 105, 115, 228, 232], "access": [9, 26, 27, 29, 115], "attribut": [9, 26, 28, 29, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 140, 154, 155, 185, 187, 188, 189, 190, 191, 192, 193, 194, 202, 205, 206, 209, 210, 211, 214, 215], "fulli": [9, 26, 212, 225], "vfactori": [9, 26], "lfactori": [9, 26], "ofactori": [9, 26], "were": [9, 19, 21, 26, 28, 66, 185], "thu": [9, 26, 28, 29, 48, 66, 76, 105, 148, 159, 160, 161, 171, 185, 187, 190, 211], "id": [9, 26, 85], "direct": [9, 21, 46, 47, 56, 58, 60, 165, 227], "kei": [9, 17, 18, 22, 29, 105, 115, 140], "pair": [9, 33, 39, 46, 47, 54, 82, 86, 115, 140, 157, 158, 159, 165, 171, 187, 188, 189, 224, 226], "its": [9, 13, 15, 16, 21, 29, 35, 38, 50, 51, 63, 65, 69, 87, 102, 105, 106, 115, 119, 122, 126, 127, 128, 129, 130, 132, 135, 137, 138, 142, 144, 153, 157, 159, 161, 165, 167, 168, 176, 185, 194, 214, 227], "__getattr__": 9, "request": 9, "so": [9, 10, 19, 20, 28, 35, 59, 66, 105, 106, 119, 126, 136, 141, 150, 152, 159, 168, 176, 194, 217, 220], "multipl": [9, 28, 29, 49, 50, 51, 113, 114, 115, 126, 128, 129, 140, 146, 171, 187, 189, 190, 191, 192, 194, 228], "entir": [9, 11, 31, 115], "otherwis": [9, 21, 58, 60, 63, 70, 87, 140, 151, 162, 167, 176, 178, 187, 188, 190, 191, 212], "get_var": 9, "parse_id": 9, "popul": [9, 19, 21, 35, 70, 71, 121, 140, 151], "order": [9, 22, 35, 36, 50, 51, 68, 71, 140, 143, 146, 167, 168, 169, 172, 173, 212], "ident": [9, 14, 53, 56, 66, 74, 76, 79, 86, 91, 106, 107, 108, 110, 111, 112, 113, 114, 119, 122, 123, 131, 140, 142, 144, 148, 150, 151, 159, 165, 176, 185, 194, 209, 210, 214, 220, 226], "map": [9, 15, 28, 29, 31, 32, 33, 53, 82, 87, 91, 94, 95, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 150, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 173, 183, 185, 193, 194, 200, 202, 217, 220, 224, 228, 229], "data_dir": 10, "getal": [10, 23], "i": [10, 14, 28, 29, 43, 53, 54, 55, 56, 65, 74, 75, 76, 77, 78, 79, 90, 91, 92, 95, 97, 105, 115, 126, 128, 129, 140, 143, 148, 150, 157, 160, 162, 165, 176, 179, 180, 187, 188, 189, 190, 191, 192, 205, 206, 209, 210, 212, 220, 232], "entiti": [10, 23], "subclass": [10, 11, 27, 28, 29, 105, 106, 149, 170, 185, 215], "locat": [10, 19, 34, 36, 38, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 185, 220], "uniqu": [10, 23, 105, 127, 130, 146, 212], "select": [10, 15, 17, 107, 108, 109, 110, 111, 112, 113, 114, 146, 205, 206, 207, 209, 210, 212, 228, 229, 231], "long": [10, 20, 107, 108, 109, 110, 111, 112, 113, 114, 120, 212], "format": [10, 16, 18, 24, 83, 84, 86, 220], "hcp_refer": [10, 24, 220], "hcp": [10, 25, 220, 229], "compos": [11, 152, 153, 224], "encourag": 11, "remain": [11, 53, 56, 106, 124, 144, 165, 167, 168, 169, 185, 187, 188, 189, 190, 191, 192, 211, 220], "chang": [11, 14, 16, 17, 21, 140, 143, 185, 226, 228], "switch": 11, "deprec": 11, "advis": [11, 14, 59, 115], "anyth": 11, "import": [11, 43, 142, 187, 188, 189, 190, 191, 192, 215], "referenceddataload": [11, 220], "kwarg": [12, 15, 16, 20, 28, 29, 107, 109, 111, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173], "set_depth": [12, 13], "adjust": [12, 13, 21, 140, 212], "append": [13, 28, 172], "collat": [13, 28, 220, 229], "variou": [14, 140, 228], "modal": 14, "moment": [14, 27, 159, 228, 229], "larg": [14, 17, 20, 27, 55, 56, 70, 144, 157, 165, 171, 212, 220], "undocu": 14, "untest": [14, 184, 185, 220], "dure": [14, 28, 107, 108, 109, 110, 111, 112, 113, 114, 157, 185, 205, 209, 212], "come": [14, 20, 150], "round": [14, 91, 92], "howev": [14, 27, 28, 159, 214, 232], "interim": 14, "user": [14, 29, 59, 105, 107, 115], "verifi": [14, 67, 72, 203], "expect": [14, 27, 54, 59, 136, 162, 165, 166, 176, 178, 220], "get_path_from_var": [14, 220], "apply_transform": [14, 220], "apply_to_select": [14, 220], "transform_block": [14, 220], "unzip_blocked_dict": [14, 220], "transpos": [14, 29, 43, 63, 69, 72, 87, 165, 187, 188, 189, 190, 191, 192, 214, 220], "vector_encod": [14, 220], "o": [14, 53, 54, 55, 56, 187, 188, 189, 190, 191, 192, 206, 220], "read_data_fram": [14, 220], "read_neuro_imag": [14, 220], "read_json": [14, 220], "change_extens": [14, 220], "cast": [14, 17, 220], "bind": [14, 220], "to_tensor": [14, 220], "to_named_tensor": [14, 220], "consolidate_block": [14, 220], "extend_to_s": [14, 220], "extend_to_max_s": [14, 220], "frame": [14, 57, 58, 59, 60, 95, 97, 212, 220], "get_col": [14, 220], "apply_model_spec": [14, 220], "nifti_head": [14, 220], "cwb_cifti_head": [14, 220], "dump_data": [14, 220], "get_metadata_vari": [14, 220], "nanfil": [14, 21, 220], "fillnan": [14, 220], "seri": [14, 39, 43, 50, 51, 58, 59, 60, 95, 97, 98, 105, 150, 159, 171, 176, 185, 187, 188, 189, 190, 191, 192, 194, 220, 224, 229], "polynomial_detrend": [14, 220], "normalis": [14, 33, 40, 41, 42, 43, 44, 46, 53, 55, 56, 106, 107, 108, 109, 110, 111, 112, 113, 114, 131, 140, 143, 144, 159, 162, 165, 166, 171, 181, 185, 187, 188, 189, 190, 191, 192, 211, 220, 226, 231], "random_window": [14, 220], "window_map": [14, 220], "df": [15, 26], "accord": [15, 27, 31, 32, 35, 40, 42, 44, 50, 51, 58, 63, 87, 140, 154, 155, 187, 190], "collect": [15, 26, 28, 228], "subset": [15, 106, 185, 187, 188, 189, 190, 191, 192, 228], "therebi": [15, 26, 27, 66, 140, 142, 187, 188, 189, 190, 191, 192, 194, 220], "option": [15, 33, 87, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 140, 187, 188, 189, 190, 191, 192, 211, 214], "guid": 15, "some": [15, 20, 24, 29, 39, 72, 74, 79, 85, 95, 97, 115, 119, 126, 128, 129, 137, 138, 160, 161, 162, 165, 173, 185, 187, 188, 189, 190, 191, 192, 203, 209, 212, 226], "compulsori": 15, "sep": [15, 16], "tabular": [15, 16], "tsv": [15, 16], "forward": [15, 16, 20, 27, 28, 29, 51, 58, 60, 73, 119, 127, 130, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 205, 212, 215], "pd": [15, 16], "read_csv": [15, 16], "nibabel": [16, 20, 145], "json": [16, 18], "python": [16, 18, 20, 119, 227], "new_ext": 16, "mode": [16, 27, 28, 150, 173, 193, 215], "edit": [16, 136], "extens": [16, 19, 21, 171], "last": [16, 29, 34, 35, 36, 41, 43, 45, 50, 51, 68, 69, 72, 95, 97, 122, 187, 188, 189, 190, 191, 192], "everyth": 16, "after": [16, 29, 41, 58, 66, 107, 108, 109, 110, 111, 112, 113, 114, 115, 146, 154, 155, 179, 180, 185, 187, 188, 189, 190, 191, 192, 211], "period": [16, 59], "treat": [16, 66, 185], "old": 16, "text": 16, "final": [16, 50, 51, 58, 60, 62, 68, 95, 97, 146, 187, 188, 189, 190, 191, 192, 206, 220], "new_path": 16, "var": [17, 123, 144], "ensur": [17, 65, 66, 74, 76, 79, 86, 90, 91, 92, 124, 126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 148, 149, 159, 162, 185, 187, 188, 189, 190, 191, 192, 194, 209, 210, 212, 227], "appli": [17, 22, 28, 29, 31, 32, 33, 50, 51, 58, 91, 95, 97, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 151, 152, 157, 159, 164, 167, 170, 171, 185, 194, 217, 226, 228], "potenti": [17, 19, 50, 51, 87, 92, 115, 146, 187, 188, 189, 190, 191, 192, 215], "block": [17, 18, 21, 27, 28, 33, 54, 55, 56, 62, 65, 66, 67, 68, 69, 70, 71, 72, 87, 147, 151, 154, 155, 162, 165, 215, 220], "encod": [17, 28, 53, 56, 105, 107, 115, 124, 165, 201, 209, 210], "vector": [17, 35, 54, 63, 66, 67, 68, 71, 72, 83, 84, 86, 87, 154, 155, 159, 161, 162, 164, 166, 168, 173, 205, 206, 211, 212, 214], "matrix": [17, 28, 29, 33, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 82, 87, 89, 90, 91, 92, 122, 146, 148, 149, 151, 159, 160, 165, 166, 168, 175, 176, 179, 187, 188, 189, 190, 191, 192, 202, 209, 210, 211, 212, 214, 217, 218, 224, 226, 229], "dimens": [17, 20, 21, 27, 29, 31, 32, 33, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 59, 62, 63, 64, 65, 68, 70, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 141, 142, 146, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 192, 194, 205, 206, 209, 210, 211, 218], "equal": [17, 19, 21, 27, 53, 56, 68, 70, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 157, 162, 165, 171, 214], "number": [17, 20, 28, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 58, 59, 63, 64, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 140, 141, 142, 146, 148, 150, 156, 157, 158, 165, 169, 171, 175, 176, 177, 178, 180, 185, 187, 188, 189, 190, 191, 192, 194, 202, 205, 206, 209, 210, 211, 212, 214], "hot": 17, "endod": 17, "becaus": [17, 27, 58, 59, 64, 86, 107, 108, 109, 110, 111, 112, 113, 114, 136, 140, 150, 157, 159, 165, 171, 211, 225, 232], "expens": 17, "mani": [17, 27, 28, 29, 55, 56, 115, 146, 165, 220], "dataobj": 18, "dataobjectvari": 18, "fill": [19, 70, 145, 151], "invalid": 19, "np": 19, "ndarrai": [19, 107, 108, 110, 112, 113, 114], "denot": [19, 21, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 66, 70, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 102, 140, 141, 142, 158, 161, 165, 175, 176, 177, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 194, 205, 206, 209, 210, 211], "nan": [19, 21, 35, 137, 138], "float": [19, 35, 36, 38, 43, 55, 56, 58, 59, 65, 66, 70, 74, 76, 79, 82, 84, 85, 86, 90, 91, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 126, 127, 128, 129, 130, 133, 136, 140, 143, 144, 145, 146, 148, 149, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 185, 187, 188, 189, 190, 191, 192, 205, 209, 210, 211, 212, 214], "broadcast": [19, 50, 51, 102, 120, 144, 171], "against": [19, 90, 91, 92], "part": [19, 107, 108, 109, 110, 111, 112, 113, 114, 142], "mean": [19, 20, 29, 58, 60, 74, 75, 76, 77, 78, 79, 104, 140, 147, 148, 149, 153, 154, 157, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 177, 178, 180, 185, 209, 210, 232], "everi": [19, 29, 58, 60, 82, 86, 107, 108, 109, 110, 111, 112, 113, 114, 162, 170, 205, 212], "non": [19, 27, 28, 33, 56, 58, 59, 90, 105, 107, 108, 109, 110, 111, 112, 113, 114, 165, 185, 187, 188, 189, 190, 191, 192], "nanmask": 19, "boolean": [19, 28, 58, 59, 60, 107, 108, 109, 110, 111, 112, 113, 114, 115, 133, 136, 140, 145, 176, 178, 185, 187, 190, 194, 215], "cell": 19, "where": [19, 55, 56, 68, 71, 72, 74, 79, 90, 91, 92, 105, 126, 127, 128, 129, 130, 146, 158, 161, 162, 165, 171, 176, 187, 190, 193, 194, 226], "previous": [19, 28, 105, 106], "restor": 19, "later": [19, 220], "desir": [19, 55, 56, 115, 161, 162, 165, 226, 227], "tensor_list": [19, 21], "extend": [19, 21, 70, 151], "largest": [19, 21, 144, 168, 212], "mark": [19, 21, 27, 60, 115], "chain": [19, 21], "most": [20, 28, 39, 136, 142, 171, 173, 225, 226], "essenti": [20, 165], "tm": 20, "nifti": [20, 112, 113, 114, 115, 145], "header": 20, "right": [20, 38, 50, 51, 55, 56, 63, 65, 66, 77, 78, 87, 105, 107, 108, 110, 115, 146, 148, 150, 157, 158, 160, 161, 162, 165, 171, 176, 214, 217], "tr": 20, "smart": 20, "enough": [20, 105], "figur": [20, 150], "unit": [20, 31, 32, 140, 143], "re": [20, 28, 136, 187, 188, 189, 190, 191, 192, 232], "fourth": 20, "repetit": 20, "probabl": [20, 53, 56, 91, 106, 115, 124, 127, 130, 161, 162, 164, 165, 185, 226, 232], "need": [20, 27, 28, 29, 150, 170, 187, 188, 189, 190, 191, 192], "anywai": [20, 146], "slow": [20, 212, 220], "pars": 20, "To": [20, 28, 29, 58, 59, 90, 92, 95, 97, 140, 143, 145, 165, 169, 194], "limit": [20, 27, 41, 63, 126, 128, 129, 134, 137, 138, 220], "connectom": 20, "workbench": 20, "inform": [20, 146, 228], "isn": [20, 146], "generalis": [20, 168], "more": [20, 27, 29, 41, 43, 45, 58, 85, 89, 105, 122, 130, 136, 157, 161, 226], "effici": [20, 46, 85, 220], "dim": [21, 70, 104, 151, 187, 188, 189, 190, 191, 192, 193, 194, 214], "auto": [21, 154, 212], "minimum": [21, 66, 76, 126, 128, 129, 133, 136, 148, 159, 161, 162, 173, 185], "made": [21, 28, 66, 122, 212, 215], "singleton": 21, "ad": [21, 28, 66, 87, 91, 106, 123, 149, 185, 210, 211, 225], "greater": [21, 115, 133, 145, 162, 205], "consolid": 21, "smaller": [21, 55, 56, 66, 145, 161, 165, 212], "befor": [21, 50, 51, 59, 76, 87, 107, 108, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 148, 172, 185, 215, 226], "posit": [21, 43, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 107, 108, 110, 111, 112, 113, 114, 147, 148, 149, 159, 167, 185, 187, 188, 189, 190, 191, 192, 202, 208, 209, 210, 211, 212, 214, 224, 229], "polynomi": [22, 94, 95, 96, 97, 212], "detrend": 22, "window_length": 22, "window_start": 22, "lightgrabberbas": 23, "_indexquerymixin": 23, "find_fil": 23, "find": [23, 106, 159, 205, 212], "particular": [23, 24, 27, 136, 140, 194, 210], "enumer": 23, "requir": [24, 27, 28, 76, 85, 91, 94, 115, 119, 145, 148, 157, 171, 210, 211, 212], "cannot": [24, 27, 58, 140, 142, 212], "download": 24, "directli": [24, 28, 33, 39], "script": 24, "share": [24, 59, 63], "hcp_dir": 25, "cpu": 25, "neuro": [26, 175, 176, 177, 178, 179, 180, 225, 229], "magnet": 26, "reson": 26, "behaviour": [26, 33, 56, 58, 87, 124, 140, 165], "suffici": [26, 27, 220], "aris": [26, 27], "split": [26, 214, 220], "throughput": [27, 184], "control": [27, 41, 58, 59, 187, 188, 189], "convey": 27, "atla": [27, 36, 38, 106, 107, 108, 109, 110, 111, 112, 113, 114, 158, 226, 229, 231], "layer": [27, 30, 87, 119, 140, 142, 143, 184, 200, 202, 205, 212, 214, 216, 217, 226, 229, 231], "voxel": [27, 36, 38, 105, 106, 107, 115, 162, 185], "wise": [27, 75, 76, 77, 78, 148, 154], "vertex": [27, 53, 56, 105, 108, 110, 146, 165, 229, 231], "necessit": 27, "memori": [27, 82, 85, 107, 108, 109, 110, 111, 112, 113, 114, 157, 171], "footprint": [27, 157, 171], "On": [27, 176], "consum": 27, "grade": 27, "gpu": [27, 171, 227], "fewer": [27, 185], "10": [27, 28, 76, 146, 148, 207, 212], "reason": [27, 28, 72, 146, 161, 162, 165, 203, 212, 226], "fit": [27, 58, 59, 72, 171, 203, 212], "pose": 27, "signific": [27, 154, 156], "problem": [27, 146, 161, 212], "downstream": [27, 214], "modul": [27, 29, 63, 87, 105, 116, 123, 124, 144, 146, 150, 151, 168, 170, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 204, 205, 208, 209, 210, 212, 214, 215, 224, 225, 226, 229], "impos": [27, 63, 66, 69, 87, 160, 161, 214], "penalti": [27, 157, 161, 162, 167, 205, 214], "relationship": [27, 39, 43, 46, 47, 72, 187, 188, 189, 190, 191, 192], "featur": [27, 150, 162, 171, 200, 202, 214, 220], "nuisanc": [27, 41], "measur": [27, 38, 39, 46, 47, 52, 87, 95, 97, 149, 154, 155, 157, 159, 160, 171, 187, 188, 189, 190, 191, 192, 193, 209, 210, 228], "connect": [27, 39, 53, 54, 55, 56, 146, 155, 165, 225], "estim": [27, 39, 43, 48, 58, 59, 76, 127, 130, 148, 149, 171, 185, 186, 187, 188, 189, 190, 191, 192, 193], "movement": 27, "accur": 27, "stabli": 27, "pearson": [27, 33, 39, 40, 41, 43, 44, 46, 159, 187, 188, 189, 190, 191, 192, 224], "correl": [27, 33, 41, 43, 45, 72, 154, 155, 156, 159, 176, 181, 187, 188, 189, 190, 191, 192, 224, 229, 231], "batch": [27, 29, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 59, 64, 72, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 94, 95, 96, 97, 103, 148, 154, 156, 162, 187, 188, 189, 190, 191, 192, 194, 209, 220, 229], "attain": [27, 76, 126, 128, 129, 148, 159, 161, 162], "constraint": [27, 63, 87, 123, 144, 151, 161, 167, 187, 188, 190, 191, 214], "circumv": 27, "ineffici": [27, 212], "usual": 27, "There": [27, 87, 103], "principl": 27, "appear": 27, "interact": [27, 220, 226], "autograd": [27, 28], "work": [27, 59, 76, 82, 83, 84, 85, 86, 87, 136, 148, 158, 171, 184, 195, 232], "streamlin": 27, "approach": [27, 58, 59, 63, 87, 146], "perhap": [27, 185], "involv": [27, 159, 171, 212], "autodifferenti": 27, "alreadi": [27, 56, 115, 161, 162, 165], "better": [27, 103, 115, 150, 171, 226], "solut": [27, 165, 212], "fragment": 27, "high": [27, 50, 51, 59, 140, 143, 209], "demand": 27, "onc": [27, 95, 97, 150], "accumulatingfunct": [27, 29, 222], "cach": [27, 28], "averag": [27, 29, 58, 60, 63, 69, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 157, 214], "respect": [27, 28, 29, 41, 72, 106, 146, 185, 220], "backward": [27, 28, 29, 33, 51, 58, 60, 73, 173, 212, 228], "save": [27, 28, 108, 110, 220], "factor": [27, 33, 43, 53, 56, 74, 76, 79, 90, 91, 92, 126, 128, 129, 146, 148, 182, 187, 188, 189, 190, 191, 192, 209, 210, 212, 220], "ratio": 27, "differenti": [27, 28, 34, 35, 36, 39, 65, 73, 88, 91, 140, 142, 149, 159, 165, 195, 210, 212, 220, 224, 226, 227, 228, 229], "backpropag": [27, 28], "compartmentalis": [27, 105], "environ": 27, "possibl": [27, 39, 66, 85, 95, 97, 150, 161, 194, 202, 205, 212, 214], "per": [27, 41, 43, 45, 50, 51, 72, 82, 85, 94, 95, 96, 97, 154, 175, 176, 177, 178, 180, 187, 188, 189, 190, 191, 192, 194, 205, 206, 215], "outsid": [27, 126, 127, 128, 129, 130, 136, 137, 138], "insid": 27, "histori": [27, 28, 209], "track": [27, 28, 29], "therefor": [27, 74, 76, 79, 90, 92, 113, 114, 124, 140, 142, 148, 209, 210], "inact": 27, "introduc": [27, 59, 212], "second": [27, 34, 36, 41, 86, 87, 95, 97, 115, 140, 141, 143, 146, 159, 187, 188, 189, 214, 228, 229], "challeng": 27, "often": [27, 39, 58, 59, 115, 119, 162, 171], "want": [27, 29, 154, 155], "loss": [27, 28, 104, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 210, 225, 229], "stage": [27, 58, 60, 171, 220, 225], "littl": 27, "chanc": [27, 150, 185], "full": [27, 140, 171, 187, 190, 201, 205], "again": [27, 43, 51, 66, 187, 188, 189, 190, 191, 192], "two": [27, 29, 44, 45, 58, 68, 82, 86, 95, 97, 122, 126, 127, 128, 129, 130, 141, 146, 150, 158, 159, 165, 173, 187, 188, 189, 212], "parallel": 27, "wrap": [27, 228], "accumulin": [27, 28, 29, 184], "engin": [28, 29, 225, 229], "accumul": [28, 183, 222, 229, 231], "arg": [28, 29, 55, 56, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "local": [28, 29, 87, 184, 222, 229], "gradient": [28, 29, 33, 76, 126, 127, 128, 129, 130, 142, 148, 149, 159, 184, 210, 212, 222, 226, 229], "instead": [28, 29, 58, 64, 72, 106, 113, 114, 115, 140, 143, 144, 157, 161, 162, 170, 177, 178, 180, 194, 203], "begin": [28, 68, 71, 146, 205], "acc": [28, 29], "model_grad": [28, 29], "retain_dim": [28, 29], "operationalis": [28, 39, 82, 157], "back": [28, 76, 148, 154, 155, 194, 212], "propag": [28, 70], "node": [28, 53, 54, 56, 115, 145, 162, 165], "ii": [28, 33, 40, 42, 44, 140, 143], "ve": [28, 171, 232], "def": [28, 29, 215], "accbwd": 28, "grad_output": 28, "grad_loc": 28, "ll": 28, "quick": 28, "argmap": [28, 184], "lambda": [28, 29, 119, 167, 176], "x": [28, 29, 31, 32, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 65, 66, 67, 69, 72, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 144, 148, 150, 159, 167, 206, 209, 210, 214, 215], "matric": [28, 53, 54, 55, 56, 62, 64, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 105, 106, 146, 151, 155, 159, 162, 165, 209, 210, 211, 212, 214, 218], "multipli": [28, 29, 63, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 194, 211, 228], "w": [28, 29, 36, 38, 63, 87, 150, 187, 188, 189, 190, 191, 192, 214], "t0": [28, 29], "rand": [28, 29], "4": [28, 29, 129], "100": [28, 29, 109, 110, 111, 158], "accfwd": 28, "passmap": 28, "fals": [28, 29, 35, 37, 43, 45, 53, 55, 56, 58, 59, 60, 69, 72, 87, 91, 94, 95, 96, 97, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 145, 146, 150, 165, 166, 171, 176, 177, 178, 180, 184, 185, 187, 188, 189, 190, 191, 192, 193, 201, 202, 212, 214, 218, 219], "t1": [28, 29], "6": [28, 29], "shape": [28, 29, 31, 32, 33, 87, 101, 102, 115, 140, 202, 206, 214], "abov": [28, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 95, 97, 154, 157, 175, 176, 177, 178, 179, 180, 211, 215], "bwd": 28, "true": [28, 29, 43, 45, 53, 56, 58, 59, 60, 64, 72, 91, 107, 108, 109, 110, 111, 112, 113, 114, 133, 136, 140, 142, 145, 146, 165, 166, 170, 176, 178, 185, 187, 188, 189, 190, 191, 192, 193, 202, 207, 211, 214, 215, 217, 218], "clear": [28, 72, 107, 108, 112, 113, 114, 203, 220], "capabl": 28, "receiv": [28, 53, 54, 55, 56, 146, 149, 157, 210, 226, 228, 232], "partial": [28, 39, 43, 94, 119, 187, 190, 191, 192, 224], "simplifi": 28, "usag": [28, 225], "callabl": [28, 29, 55, 56, 58, 60, 82, 91, 94, 107, 108, 109, 110, 111, 112, 113, 114, 119, 152, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 173, 187, 188, 189, 190, 191, 192, 194, 205, 212], "bool": [28, 29, 43, 53, 55, 56, 69, 72, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 141, 146, 165, 166, 176, 177, 178, 180, 185, 187, 188, 189, 190, 191, 192, 202, 211, 212, 214, 215], "graph": [28, 33, 53, 54, 55, 56, 87, 162, 165, 171, 214, 217, 224, 229], "retain": [28, 173], "accordingli": [28, 59, 106, 157, 159, 162, 171, 228], "unseen": [28, 57, 58, 60], "static": 28, "ctx": 28, "overridden": [28, 29, 170], "accept": [28, 34, 187, 188, 189, 190, 191, 192, 212], "context": [28, 29, 51, 228], "arbitrari": [28, 153, 157, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 228], "though": [28, 66, 185, 189, 192], "enforc": [28, 63, 87, 95, 97, 158, 187, 188, 190, 191, 212, 214], "save_for_backward": 28, "intend": 28, "equival": [28, 41, 53, 56, 63, 87, 95, 97, 165, 167, 171, 187, 188, 189, 190, 191, 214, 227], "vjp": 28, "save_for_forward": 28, "jvp": 28, "alia": [28, 195], "r": [28, 40, 42, 44, 53, 54, 56, 63, 70, 84, 85, 86, 87, 95, 97, 150, 151, 165, 214], "grad": [28, 29], "needs_input_grad": 28, "whether": [28, 58, 59, 60, 69, 95, 97, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 215], "reduce_dim": 29, "autouse_domain_gradi": 29, "model_output": 29, "model_param": 29, "let": 29, "next": [29, 60, 66, 146], "interest": [29, 41, 162, 228, 232], "reduc": [29, 59, 104, 105, 159, 161, 162, 165, 185], "explicitli": [29, 33, 34, 95, 97, 109, 119, 224], "protect": 29, "declar": [29, 194], "out0": 29, "out1": 29, "sum": [29, 56, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 144, 153, 160, 162, 165, 171, 185], "overal": [29, 107, 109, 111, 115, 146, 150, 167, 168, 169, 220], "weight": [29, 34, 35, 36, 37, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 57, 59, 60, 82, 87, 95, 97, 98, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 124, 140, 149, 150, 152, 153, 154, 155, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 185, 187, 188, 189, 190, 191, 192, 193, 194, 199, 202, 205, 206, 209, 210, 212, 214, 224, 226], "16": 29, "22": 29, "acc_weight": 29, "reset": 29, "zero_grad": 29, "still": [29, 58, 87, 115, 225], "respons": [29, 140, 142], "facilit": [29, 115, 228], "correct": [29, 72, 203], "reduct": [29, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 184, 185], "ax": [29, 35, 37, 68, 69, 70, 75, 76, 77, 78, 115, 122, 144, 148, 167, 168, 169, 171, 187, 188, 189], "unus": [29, 66], "total": [29, 53, 54, 55, 56, 140, 141, 142, 146, 162, 165, 194], "although": [29, 72, 86, 115, 170, 203], "recip": [29, 170], "afterward": [29, 170], "sinc": [29, 170], "former": [29, 170], "care": [29, 170], "regist": [29, 170, 215], "hook": [29, 170], "while": [29, 31, 32, 43, 53, 55, 56, 58, 59, 60, 95, 97, 108, 110, 136, 140, 142, 159, 160, 165, 167, 170, 185, 187, 188, 189, 190, 191, 192, 194, 212], "latter": [29, 170], "silent": [29, 170], "set_to_non": 29, "zero": [29, 35, 49, 59, 65, 70, 84, 91, 126, 145, 185, 187, 188, 189, 190, 191, 192, 194, 209, 224], "similar": [29, 33, 87, 141, 159, 165, 171, 187, 188, 189, 190, 191, 192, 202, 214], "optim": 29, "detail": [29, 33, 44, 72, 81, 85, 95, 97, 105, 109, 117, 118, 123, 140, 143, 144, 149, 151, 194, 221, 225], "neural": [30, 150, 215, 224, 225, 226, 229], "network": [30, 56, 150, 162, 165, 200, 212, 215, 224, 225, 226, 229], "amplitude_tanh": [30, 224], "amplitude_atanh": [30, 224], "corrnorm": [30, 224], "activ": [31, 32, 33, 123, 124, 144, 146, 151, 182, 214, 224, 229, 231], "invers": [31, 39, 43, 46, 47, 64, 74, 77, 79, 126, 127, 128, 129, 130, 140, 142, 148, 150, 187, 188, 189, 190, 191, 192, 194, 224], "hyperbol": [31, 32, 126, 128], "tangent": [31, 32, 73, 74, 76, 79, 126, 128, 148, 149, 187, 188, 189, 190, 191, 192, 208, 209, 210], "arctang": 31, "amplitud": [31, 32, 51, 101, 102, 126, 127, 138, 140, 142, 178, 194], "absolut": [31, 32, 66, 154, 155, 173], "mathrm": [31, 32, 33, 65, 95, 97, 159, 160], "arctanh": 31, "phase": [31, 32, 49, 101, 102, 138, 140, 143, 194, 224], "complex": [31, 32, 101, 102, 126, 127, 138, 142, 194], "preserv": [31, 32, 136, 211], "open": [31, 32, 145, 226], "disc": [31, 32], "plane": [31, 32], "origin": [31, 32, 50, 51, 58, 59, 60, 74, 76, 79, 83, 90, 91, 92, 136, 144, 148, 154, 155, 171, 184, 187, 188, 190, 191, 209, 210], "circumfer": [31, 32], "infin": [31, 126, 127, 128, 129, 130, 146], "As": [31, 32, 33, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 86, 87, 89, 90, 91, 92, 95, 97, 175, 176, 177, 178, 179, 180, 211, 215], "elementwis": [31, 32, 33, 56, 103, 127, 130, 153, 161, 165, 171, 211], "conserv": [31, 32, 33, 91], "tanh": [32, 123, 140, 142, 144, 151, 185, 194], "distant": 32, "region": [32, 36, 38, 107, 108, 110, 111, 112, 113, 114, 115, 157, 158, 162, 185], "gradpath": 33, "both": [33, 73, 102, 151, 177, 182, 187, 188, 189, 194, 205, 212], "divid": [33, 58, 144, 146, 166], "a_": 33, "ij": [33, 40, 42, 44, 53, 56, 165], "product": [33, 56, 63, 82, 86, 87, 140, 142, 143, 150, 165, 211, 214], "sign": [33, 55, 56, 66, 146, 165, 214, 218], "squar": [33, 43, 62, 67, 68, 69, 72, 74, 79, 88, 92, 150, 171, 187, 188, 189, 190, 191, 192, 203, 209, 210, 211], "diagon": [33, 43, 46, 47, 62, 63, 66, 68, 70, 71, 87, 91, 151, 165, 187, 188, 189, 190, 191, 192, 211, 212, 214], "bar": [33, 75, 76, 77, 78, 209], "_": [33, 38, 40, 42, 44, 53, 56, 157, 165], "frac": [33, 38, 40, 42, 44, 50, 51, 54, 55, 63, 65, 75, 77, 78, 87, 148, 156, 157, 165, 171, 176, 214], "sgn": 33, "jj": [33, 40, 42, 44], "sqrt": [33, 40, 42, 44, 92, 156], "epsilon": 33, "covari": [33, 40, 42, 44, 46, 59, 72, 140, 159, 174, 175, 176, 177, 179, 180, 187, 188, 189, 190, 191, 192, 224, 229, 231], "overriden": 33, "below": [33, 171, 212], "version": [33, 37, 162, 164, 169], "laplacian": 33, "divis": [33, 43, 171, 187, 188, 189, 190, 191, 192], "mostli": [33, 70], "outer": [33, 63, 87, 211, 214], "flow": 33, "intrins": 34, "mesh": [34, 108, 110, 115], "grid": [34, 37], "cmass_reference_displacement_grid": [34, 37], "cmass_coor": [34, 37, 224], "diffus": [34, 224], "cmass_reference_displac": [34, 37], "arrai": [34, 82, 85, 102, 123, 144, 145, 146, 224], "na_rm": [35, 37], "regularis": [35, 43, 157, 165, 166, 170, 171, 173, 187, 188, 189, 190, 191, 192, 193, 209, 212, 225, 229], "close": [35, 105, 127, 130, 145, 157, 159, 160, 195, 205, 220], "k_1": 35, "k_2": 35, "k_n": 35, "interven": [35, 41, 43, 45, 50, 51, 54, 55, 56, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 187, 188, 189, 190, 191, 192, 194], "k_i": [35, 54], "n": [35, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 56, 71, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 140, 141, 142, 143, 148, 156, 175, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 192, 194, 209, 210, 211, 212, 214, 218], "3": [35, 58, 83, 84, 86, 126, 127, 128, 130, 140, 167, 197, 212, 214], "dimension": [35, 43, 157, 187, 188, 189, 190, 191, 192], "span": [35, 72], "three": [35, 108, 110, 157, 220], "undefin": [35, 159], "how": [35, 150, 220], "left": [35, 38, 50, 51, 55, 56, 63, 65, 66, 77, 78, 87, 105, 107, 108, 110, 115, 148, 150, 157, 158, 160, 161, 162, 165, 171, 176, 214, 217], "intact": 35, "cmass": [36, 37, 38, 157, 158, 224, 229], "coor": [36, 37, 38, 81, 82, 83, 84, 85, 107, 108, 110, 111, 112, 113, 114, 157, 185], "radiu": [36, 37, 38, 84, 85, 86, 157, 158], "l": [36, 38, 53, 56, 63, 87, 165, 185, 188, 191, 214], "embed": [36, 38, 82, 85, 211], "project": [36, 59, 72, 73, 74, 76, 79, 148, 149, 157, 161, 176, 187, 188, 189, 190, 191, 192, 208, 209, 210, 225], "onto": [36, 59, 157, 161, 171], "sphere": [36, 38, 81, 82, 83, 84, 85, 86, 157, 224, 229], "row": [36, 63, 64, 70, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 107, 108, 110, 111, 112, 113, 114, 140, 151, 157, 162, 171, 188, 191, 217, 218], "ref": [37, 107, 108, 110, 111, 112, 113, 114], "explicit": [37, 63, 87], "norm": [38, 76, 82, 140, 143, 144, 148, 153, 157, 158, 160, 167, 168, 169, 172, 173, 211, 214], "floor": [38, 157], "compact": [38, 160, 228, 229], "score": [38, 157], "mathbf": [38, 54, 56, 65, 157, 161, 162, 165, 171, 176], "interc": [38, 41, 53, 54, 56, 63, 87, 89, 90, 92, 157, 161, 162, 165, 176, 214, 217], "circ": [38, 56, 157, 161, 162, 165, 171], "c": [38, 43, 53, 56, 63, 70, 82, 85, 87, 94, 95, 96, 97, 151, 157, 165, 190, 191, 192, 194, 209, 210, 212, 218], "ac": [38, 157], "col": [38, 157, 217], "distanc": [38, 82, 85, 86, 106, 107, 108, 109, 110, 111, 112, 113, 114, 136, 157, 160, 173], "closer": [38, 205], "about": [38, 171, 194, 228], "statist": [39, 187, 188, 189, 190, 191, 192], "localis": 39, "At": [39, 210, 225], "whatev": 39, "deleg": 39, "corrcoef": 39, "remov": [39, 41, 72, 185], "alias": 39, "improv": [39, 45, 162, 220], "corr": [39, 43, 187, 190, 191, 192, 224], "partialcov": [39, 224], "partialcorr": [39, 41, 43, 187, 190, 191, 192, 224], "pairedcov": [39, 44, 187, 188, 189, 224], "pairedcorr": [39, 187, 188, 189, 224], "conditionalcov": [39, 40, 187, 188, 189, 224], "condit": [39, 46, 47, 72, 74, 76, 79, 90, 91, 92, 115, 148, 187, 188, 189, 209, 210, 224], "conditionalcorr": [39, 41, 187, 188, 189, 224], "precis": [39, 43, 166, 187, 190, 191, 192, 224], "cov": [40, 41, 42, 44, 45, 46, 47, 48, 175, 176, 179, 187, 188, 189, 190, 191, 192, 193, 224, 229, 231], "y": [40, 41, 44, 45, 72, 83, 84, 86], "complet": [40, 41, 42, 43, 44, 45, 46, 47, 48, 82, 85, 107, 108, 110, 112, 113, 114], "characterist": [40, 41, 42, 45, 46, 47, 48], "hat": [40, 42, 44, 74, 76, 79, 148, 209, 210], "sigma": [40, 41, 42, 43, 44, 106, 107, 108, 109, 110, 111, 112, 113, 114, 176], "mathbb": [40, 42, 44, 53, 54, 56, 165], "r_": [40, 42, 44, 156], "sigma_": 41, "xx": 41, "yy": 41, "xy": 41, "schur": [41, 211], "complement": [41, 187, 190, 205], "residualis": [41, 146, 224, 229, 231], "plu": [41, 71, 123], "intercept": [41, 94, 95, 96, 97, 187, 188, 189], "term": [41, 43, 54, 63, 87, 94, 95, 96, 97, 150, 159, 165, 187, 188, 189, 190, 191, 192, 212, 214], "interpret": [41, 46, 47, 115, 140, 143, 159, 165, 185, 187, 188, 189, 190, 191, 192, 226], "effect": [41, 45, 51, 70, 126, 151, 162, 166, 185, 187, 188, 189], "c_x": [41, 45, 72], "ob": [41, 43, 45, 50, 51, 72, 94, 95, 96, 97], "channel": [41, 43, 45, 50, 51, 70, 72, 82, 85, 87, 94, 95, 96, 97, 149, 150, 151, 166, 175, 176, 177, 178, 180, 187, 188, 189, 190, 191, 192, 194, 202, 209, 210, 214], "c_y": [41, 45, 72], "influenc": [41, 185], "wish": [41, 91, 119], "penultim": [41, 43, 45, 72, 95, 97, 187, 188, 189, 190, 191, 192], "rowvar": [41, 43, 45, 72, 187, 188, 189, 190, 191, 192, 193], "bia": [41, 43, 45, 87, 95, 97, 98, 187, 188, 189, 190, 191, 192, 193, 202, 212, 214], "ddof": [41, 43, 45, 187, 188, 189, 190, 191, 192, 193], "l2": [41, 43, 45, 81, 82, 166, 167, 168, 169, 172, 173, 187, 188, 189, 190, 191, 192, 193], "empir": [41, 43, 44, 45, 48, 150, 187, 188, 189, 190, 191, 192], "thank": [43, 115], "http": [43, 85, 195, 212, 227], "github": [43, 195, 227, 232], "com": [43, 195, 212, 227], "issu": [43, 226], "19037": 43, "bias": [43, 87, 187, 188, 189, 190, 191, 192], "unweight": [43, 187, 188, 189, 190, 191, 192], "unbias": [43, 105, 187, 188, 189, 190, 191, 192], "degre": [43, 54, 55, 56, 94, 95, 96, 97, 159, 165, 187, 188, 189, 190, 191, 192, 212], "freedom": [43, 187, 188, 189, 190, 191, 192], "determin": [43, 58, 59, 95, 97, 146, 157, 165, 166, 187, 188, 189, 190, 191, 192, 194, 212, 228, 229], "coupl": [43, 53, 63, 87, 124, 165, 187, 188, 189, 190, 191, 192, 214], "symmetr": [43, 61, 63, 64, 66, 67, 68, 71, 74, 79, 87, 89, 90, 91, 92, 150, 151, 165, 173, 176, 187, 188, 189, 190, 191, 192, 209, 210, 211, 213, 214, 224, 229], "semidefinit": [43, 63, 65, 66, 74, 75, 76, 77, 78, 79, 87, 88, 91, 148, 149, 159, 187, 188, 189, 190, 191, 192, 209, 210, 211, 212, 214, 224, 226, 229, 231], "rel": [43, 45, 130, 136, 140, 143, 155, 159, 187, 188, 189, 190, 191, 192, 209], "off": [43, 46, 47, 70, 151, 187, 188, 189, 190, 191, 192], "band": [43, 70, 140, 143, 151, 187, 188, 189, 190, 191, 192, 226, 229], "multi": [43, 115, 157, 161, 162, 187, 188, 189, 190, 191, 192, 212, 226], "inter": [43, 53, 165, 187, 188, 189, 190, 191, 192], "nonneg": [43, 55, 56, 76, 91, 127, 130, 148, 154, 157, 159, 165, 185, 187, 188, 189, 190, 191, 192, 211, 212, 214], "maximum": [43, 55, 56, 58, 59, 60, 63, 66, 76, 82, 85, 87, 95, 96, 97, 107, 108, 109, 110, 111, 112, 113, 114, 126, 128, 129, 133, 136, 140, 144, 146, 148, 157, 159, 161, 165, 167, 187, 188, 189, 190, 191, 192, 212], "likelihood": [43, 159, 187, 188, 189, 190, 191, 192], "intermedi": [43, 157, 171, 187, 188, 189, 190, 191, 192], "offer": 45, "success": 46, "accompani": 46, "negat": [46, 47, 128, 145, 159], "convolv": [49, 50, 82, 85, 95, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115], "product_filt": [49, 51, 224], "product_filtfilt": [49, 194, 224], "fourier": [50, 51, 58, 59, 224, 229], "frequenc": [50, 51, 58, 59, 140, 141, 142, 143, 162, 175, 178, 179, 224, 226, 229, 231], "domain": [50, 51, 74, 76, 79, 90, 92, 106, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 148, 149, 151, 157, 161, 162, 178, 185, 188, 191, 209, 210, 224, 226, 229, 231], "lfloor": [50, 51], "rfloor": [50, 51], "analogu": [50, 51], "gain": [50, 51, 140, 142, 194], "bin": [50, 51, 58, 59, 140, 141, 142, 162, 194], "spectrum": [50, 51, 59, 140, 142, 175, 177, 178, 179, 180, 194], "low": [50, 51, 63, 87, 140, 143, 213, 214], "rule": [50, 51], "fft": [50, 51], "rfft": [50, 51], "irfft": [50, 51], "digit": 51, "revers": [51, 60, 194], "copi": [51, 133, 136], "quadrat": [51, 150], "strictli": [51, 53, 56, 140, 142, 165, 209], "real": [51, 102, 142, 176, 178], "delai": [51, 140, 143], "compon": [51, 101, 146, 178, 225], "simpli": [51, 162], "depend": [51, 140, 143, 176, 178, 187, 188, 189, 190, 191, 192], "girvan_newman_nul": [52, 55, 56, 165, 224], "modularity_matrix": [52, 224], "coaffili": [52, 56, 165, 224], "commun": [52, 55, 56, 146, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 224], "relaxed_modular": [52, 55, 224], "c_i": 53, "c_o": [53, 56, 95, 97, 165], "exclude_diag": [53, 56, 165], "vertic": [53, 54, 55, 56, 105, 108, 110, 146, 162, 165, 214, 216, 217, 218], "structur": [53, 55, 56, 59, 70, 145, 151, 165, 187, 188, 190, 191, 215], "affili": [53, 56, 162, 165], "sourc": [53, 54, 55, 56, 107, 109, 111, 115, 165, 187, 188, 189, 190, 191, 192, 211], "sink": [53, 54, 55, 56, 165], "coeffici": [53, 63, 87, 143, 212], "omega": [53, 74, 79, 209, 210], "h": [53, 56, 63, 87, 150, 165, 214], "propos": [53, 56, 165], "partit": [53, 55, 56, 165], "emit": [53, 54, 55, 56], "edg": [53, 54, 55, 56, 146, 155, 165], "uncertainti": [53, 56, 165], "jk": [53, 56, 165], "j": [53, 56, 160, 162, 165], "k": [53, 56, 94, 95, 96, 97, 141, 162, 165], "binari": [53, 56, 145, 165, 187, 188, 189], "reflect": [53, 56, 165], "determinist": [53, 56, 146, 161, 162, 165], "l_": [53, 56, 105, 165], "assort": [53, 56, 165], "preferenti": [53, 56, 165], "disaffili": [53, 56, 165], "self": [53, 56, 106, 165, 215], "link": [53, 56, 232], "max": [53, 55, 56, 126, 128, 129, 133, 136, 144, 165], "girvan": [54, 55, 56], "newman": [54, 55, 56], "null": [54, 55, 56, 115, 158, 165], "cut": [54, 165], "stub": 54, "randomli": [54, 140, 146, 165, 185, 187, 188, 189, 190, 191, 192, 205], "rewir": [54, 165], "k_o": 54, "2m": [54, 55], "p_": [54, 165], "gn": [54, 165], "adjac": [54, 55, 56, 165, 172, 217], "p": [54, 55, 157, 165, 167, 168, 169, 172, 173], "compris": [54, 55, 115, 220], "gamma": [55, 56, 165, 212], "modular": [55, 56], "b": [55, 56, 165, 195], "resolut": [55, 56, 165], "larger": [55, 56, 58, 59, 82, 136, 145, 165], "small": [55, 56, 91, 165], "mai": [55, 56, 72, 153, 165], "necessari": [55, 56, 115, 165, 193, 212], "consid": [55, 56, 58, 59, 90, 91, 92, 136, 165, 167, 169], "normalise_modular": [56, 165], "normalise_coaffili": [56, 165], "relax": 56, "linkag": [56, 165], "revert": [56, 165], "standard": [56, 81, 106, 140, 149, 165, 176, 179, 180, 185, 210, 211], "hadamard": [56, 165], "q": [56, 176], "renormalis": [56, 165, 211, 217, 218], "unnecessari": [56, 165], "been": [56, 76, 148, 165, 212], "softmax": [56, 106, 124, 127, 130, 146, 161, 162, 165, 207, 226], "extrapol": 57, "censor": 57, "hybrid_interpol": [57, 224], "spectral": [57, 59, 174, 198, 224], "weighted_interpol": [57, 224], "spectral_interpol": [57, 224], "max_weighted_stag": [58, 197], "map_to_kernel": [58, 60, 197, 199], "oversampling_frequ": [58, 59, 197, 198], "8": [58, 59, 197, 198], "maximum_frequ": [58, 59, 197, 198], "frequency_thresh": [58, 197], "handle_fail": [58, 59], "orig": 58, "hybrid": [58, 197], "awai": [58, 107, 108, 112, 113, 114, 161], "seen": [58, 60, 95, 97, 106, 119, 123, 124, 144, 151, 187, 188, 189, 190, 191, 192, 193, 194], "successfulli": 58, "imput": [58, 60, 224, 229], "kernel": [58, 60, 81, 82, 85, 87, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 185, 212, 213], "proce": [58, 60, 82, 107, 211, 220], "group": [58, 85, 99, 220], "good": [58, 59, 60, 150, 212], "bad": [58, 59, 60, 209], "flag": [58, 59, 60, 107, 108, 109, 110, 111, 112, 113, 114], "govern": [58, 60], "boxcar": [58, 60], "integ": [58, 60, 105, 115], "convolut": [58, 59, 60, 81, 87, 95, 97, 106, 150, 194, 202, 207, 224, 229], "neighbour": [58, 60], "sine": [58, 59], "cosin": [58, 59], "spectra": [58, 59, 140], "oversampl": [58, 59], "fraction": [58, 59, 214], "nyquist": [58, 59, 140, 143], "orthogon": [58, 59, 72, 159], "basi": [58, 59, 87, 94, 95, 96, 97, 159], "spuriou": [58, 59], "varianc": [58, 59, 72, 95, 97, 123, 136, 144], "captur": [58, 59], "thresh": [58, 59, 198], "rais": [58, 59, 94, 96, 97], "fail": [58, 64], "except": 58, "interpol": [59, 60, 144, 197, 198, 199, 224, 229, 231], "sampling_period": [59, 198], "corrupt": 59, "proxi": 59, "reconstruct": [59, 66, 146], "previou": [59, 76, 148, 209], "anish": 59, "mitra": 59, "jonathan": 59, "power": [59, 94, 96, 97], "turn": [59, 159], "lomb": 59, "scargl": 59, "periodogram": 59, "temporarili": 59, "omiss": 59, "due": [59, 91, 92], "artefact": 59, "content": [59, 115], "disrupt": 59, "autocorrel": 59, "artefactu": 59, "outlier": [59, 136], "arguabl": 59, "linearli": [59, 206], "relev": [59, 106, 152], "plai": 59, "role": 59, "easili": [59, 226], "your": [59, 161, 162, 215, 227], "unsqueez": 59, "consecut": 59, "procedur": [59, 136, 146, 159, 176, 220], "start_stag": [60, 199], "max_stag": [60, 199], "progress": 60, "longer": [60, 150], "initi": [60, 63, 87], "special": 61, "invert_spd": [61, 224], "spd": [61, 91, 224], "expand_out": [61, 224], "recondition_eigenspac": [61, 224], "delete_diagon": [61, 214, 224], "toeplitz": [61, 187, 188, 190, 191, 224, 226, 229], "sym2vec": [61, 224], "vec2sym": [61, 224], "squareform": [61, 224], "delet": [62, 214], "infer": [62, 115], "symmetri": [63, 69, 87, 150, 158, 187, 188, 190, 191, 214, 218], "rank": [63, 87, 150, 201, 211, 213, 214], "inner": 63, "height": [63, 87, 123], "width": [63, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 144, 185], "expans": [63, 87, 214], "toggl": [63, 87, 193, 212], "neg": [63, 66, 87, 92, 126, 159, 165, 167, 185, 214], "cross": [63, 86, 87, 214], "skew": [63, 69, 87, 214], "subtract": [63, 87], "guarante": [63, 66, 74, 76, 79, 87, 90, 92, 148, 209, 210, 211], "force_invert_singular": 64, "invert": [64, 187, 188, 189, 190, 191, 192], "definit": [64, 66, 74, 76, 79, 87, 89, 90, 91, 92, 148, 153, 159, 209, 210, 211, 214], "choleski": 64, "decomposit": [64, 65, 66, 91, 159], "recompos": [64, 89, 90, 92], "singular": [64, 65, 66, 90, 92, 159, 168, 187, 188, 189, 190, 191, 192, 212], "moor": 64, "penros": 64, "pseudoinvers": 64, "ainv": 64, "psi": [65, 74, 76, 79, 90, 91, 92, 148, 159, 209, 210], "xi": [65, 90, 91, 92, 159], "recondit": [65, 74, 76, 79, 90, 91, 92, 159, 209, 210, 212], "eigenvalu": [65, 66, 74, 76, 79, 89, 90, 91, 92, 148, 159, 209, 210, 212], "eigenspac": [65, 91], "help": [65, 146, 209, 220], "stabilis": 65, "x_i": 65, "sim": 65, "uniform": [65, 119, 150, 205], "foral": 65, "nonzero": [65, 154, 155, 157, 159, 185, 187, 188, 190, 191], "nondegener": [65, 90, 92, 159], "ep": [66, 76, 148], "1e": [66, 76, 127, 130, 148], "06": [66, 76, 148], "eig": 66, "symmetris": [66, 69, 71, 87], "decompos": [66, 101], "diagonalis": [66, 89, 90, 92], "svd": [66, 91, 146, 159, 215], "smallest": 66, "scale": [66, 81, 85, 107, 108, 109, 110, 111, 112, 113, 114, 122, 123, 126, 128, 129, 132, 134, 135, 136, 137, 138, 144, 150, 151, 165, 212], "threshold": [66, 76, 145, 148, 154, 155, 205], "reconstitut": [66, 102], "theori": 66, "up": [66, 94, 96, 150, 188, 191], "error": [66, 87, 91, 92, 137, 138, 171], "eigendecomposit": [66, 176], "recomposit": 66, "among": [66, 146, 159, 160, 165, 187, 188, 189, 190, 191, 192, 214], "margin": [66, 212], "occasion": 66, "insuffici": 66, "avoid": [66, 126, 127, 128, 129, 130, 137, 138], "numer": [66, 73, 91, 92, 107, 108, 110, 111, 112, 113, 114], "convert": [67, 68, 71, 83, 84, 215], "unlik": 67, "numpi": 67, "matlab": 67, "vectoris": 67, "sym": [68, 71], "offset": [68, 71, 187, 188, 190, 191], "ravel": [68, 71], "upper": [68, 71, 145], "triangl": [68, 71, 161], "main": [68, 71, 105, 187, 188, 190, 191, 212, 227], "vec": [68, 71, 74, 79, 209, 210], "delin": 69, "antisymmetri": 69, "fill_valu": [70, 151], "element": [70, 71, 74, 79, 90, 91, 92, 124, 140, 151, 154, 160, 162, 167], "unless": [70, 162, 212, 224], "unspecifi": 70, "length": [71, 124, 140, 194], "choos": 71, "place": [71, 106, 119, 123, 124, 141, 142, 144, 149, 151, 161, 205, 214], "resid": [72, 107, 108, 109, 110, 111, 112, 113, 114], "driver": 72, "gelsd": 72, "ordinari": 72, "linear": [72, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131, 132, 171, 183, 200, 202, 206, 207, 212, 226, 231], "incorrect": [72, 142, 203], "linalg": [72, 203], "lstsq": [72, 203], "pinv": [72, 203], "orthogonalis": 72, "subspac": [72, 73, 74, 79, 149, 208, 209, 210], "explanatori": 72, "explain": 72, "routin": [72, 226], "solv": [72, 146, 212], "lapack": 72, "proper": [73, 208, 209, 210], "riemann": 73, "manifold": [73, 76, 82, 148, 209, 210], "nearli": [73, 136], "exhibit": 73, "instabl": 73, "tangent_project_spd": [73, 74, 224], "cone_project_spd": [73, 79, 224], "mean_euc_spd": [73, 224], "mean_harm_spd": [73, 224], "mean_logeuc_spd": [73, 224], "mean_geom_spd": [73, 224], "cone": [74, 75, 76, 77, 78, 79, 147, 148, 149, 187, 188, 189, 190, 191, 192, 208, 209, 210, 211, 224, 229], "tangenc": [74, 76, 79, 148, 149, 209, 210], "theta": [74, 79, 209, 210], "exp": [74, 78, 89, 209, 210], "exponenti": [74, 78, 88, 89, 144, 148, 187, 188, 190, 191], "promot": [74, 76, 79, 90, 91, 92, 148, 157, 159, 160, 161, 165, 171, 172, 185, 209, 210, 226], "convex": [74, 76, 79, 91, 148, 159, 209, 210, 212], "euclidean": [75, 76, 77, 78, 82, 86, 107, 108, 109, 110, 111, 112, 113, 114, 115, 148, 157, 167, 168, 169, 172, 173, 210, 226], "familiar": [75, 148, 165], "arithmet": [75, 76, 148], "sum_": [75, 77, 78, 148, 158, 160], "x_": [75, 77, 78, 148], "max_it": [76, 148], "geometr": [76, 148], "descent": [76, 148], "geodes": [76, 86, 148, 157], "brief": [76, 148], "converg": [76, 148], "algorithm": [76, 146, 148], "frobeniu": [76, 148, 168], "harmon": [77, 148], "log": [78, 79, 90, 148, 161, 209, 210, 228, 229], "logarithm": [78, 79, 88, 90, 127, 130, 148, 161], "sphere_to_norm": [80, 224], "sphere_to_latlong": [80, 224], "spherical_geodes": [80, 82, 224], "spatial_conv": [80, 81, 85, 224], "spherical_conv": [80, 224], "euclidean_conv": [80, 224], "max_bin": [81, 82, 85, 106, 107, 108, 109, 110, 111, 112, 113, 114, 185], "10000": [81, 82, 85, 106, 107, 108, 109, 110, 111, 112, 113, 114, 185], "truncat": [81, 82, 85, 91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 185], "spatial": [81, 82, 85, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 157, 158, 160, 185], "metric": [81, 82, 87, 160, 214], "gaussian": [81, 85, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 144, 179, 180, 185, 212], "kernel_gaussian": 82, "isotrop": [82, 85, 144], "evalu": [82, 94, 95, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 215, 225, 229], "shorter": 82, "n_i": 82, "pairwis": [82, 86, 160], "spheric": [82, 83, 84, 86, 107, 108, 109, 110, 111, 112, 113, 114, 115, 157, 158, 224, 226, 229], "circl": [82, 86], "try": [82, 85], "decreas": [82, 85], "data_conv": [82, 85], "normal": [83, 84, 86, 140, 166, 176, 179, 180], "latitud": [83, 84, 86], "longitud": [83, 84, 86], "z": [83, 84, 212], "centr": [83, 84, 144, 157, 158, 224, 229], "pretti": 85, "much": [85, 136, 146, 171], "dumbest": 85, "lie": [85, 124], "thing": 85, "openreview": 85, "net": 85, "pdf": 85, "hkbd5xzrb": 85, "haversin": 86, "pleas": [86, 221, 226], "n_x": 86, "n_y": 86, "surfac": [86, 105, 108, 110, 111, 115, 157, 158, 226], "dist": 86, "brainnetcnn": 87, "equip": [87, 220], "induct": 87, "favour": [87, 159, 162, 165, 171, 214], "learn": [87, 95, 97, 106, 124, 171, 185, 194, 195, 200, 205, 206, 210, 214, 226], "unord": 87, "dens": 87, "analog": [87, 158], "lot": 87, "quirk": 87, "usabl": 87, "crosshair_similar": [87, 214], "bank": [87, 194, 214], "step": [87, 107, 220], "c_": [87, 165, 187, 188, 189, 202, 217], "precursor": 87, "One": [87, 152, 161], "nonsquar": [87, 214], "bipartit": [87, 146, 214], "count": [87, 154, 214], "doubl": [87, 144, 150, 187, 188, 190, 191, 214], "parametris": [87, 124], "symexp": [88, 224], "symlog": [88, 224], "symsqrt": [88, 224], "symmap": [89, 90, 92, 224, 229], "q_x": [89, 90, 92], "lambda_x": [89, 90, 92], "matrix_exp": 89, "stabl": 89, "infeas": [90, 92], "guard": [90, 91, 92], "widetild": [90, 91, 92, 176], "independ": [90, 91, 92, 159, 185], "uniformli": [90, 91, 92], "truncate_eigenvalu": 91, "convexcombin": 91, "nois": [91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 144, 149, 185, 187, 188, 189, 190, 191, 192, 193, 210, 211], "degener": [91, 159], "repeat": [91, 188, 191, 194], "nondegeneraci": 91, "veri": [91, 144, 171, 205], "tsconv2d": [93, 224], "basisconv2d": [93, 224], "polyconv2d": [93, 224], "basischan": [93, 224], "polychan": [93, 224], "tsconv": [94, 95, 96, 97, 98, 224, 229], "basis_funct": [94, 95, 207], "include_const": [94, 95, 96, 97], "ith": [94, 95, 96, 97], "constitut": [94, 224], "signatur": [94, 212], "constant": [94, 95, 96, 97, 117, 120], "conv": [95, 97, 98, 200], "view": [95, 97, 209, 232], "sequenti": [95, 97], "past": [95, 97], "divers": [95, 97, 105], "consist": [95, 97, 111], "penalis": [95, 97, 157, 159, 161, 165, 167, 171, 172, 173], "spread": [95, 97], "conv2d": [95, 97, 215], "zeroth": [96, 97], "hideou": 99, "disorganis": 99, "hopefulli": 99, "somedai": 99, "disappear": 99, "altogeth": 99, "move": 99, "elsewher": [99, 228], "sad": 99, "blemish": 99, "conform_mask": [99, 100, 224], "apply_mask": [99, 103, 185, 224], "wmean": [99, 224], "complex_decompos": [99, 102, 224], "complex_recompos": [99, 101, 224], "msk": [100, 103], "ampl": [101, 102], "radian": [101, 102], "almost": [103, 142, 161, 209], "certainli": [103, 142, 161, 171], "keepdim": 104, "tool": [105, 139, 143, 225, 230], "brain": [105, 108, 110, 228], "atlas": [105, 106, 109, 112, 113, 114, 115, 162], "princip": [105, 146, 162, 225], "distribut": [105, 106, 109, 110, 111, 115, 118, 119, 121, 123, 124, 140, 144, 161, 164, 165, 166, 176, 179, 180, 226], "volumetr": [105, 108, 110, 111, 115, 226], "discret": [105, 107, 112, 115, 226], "hard": [105, 220, 226], "parcel": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 158, 159, 161, 162, 165, 171, 185, 194, 226], "overlap": [105, 112, 113, 114, 115], "unstructur": [105, 157], "leverag": [105, 159], "prior": [105, 115, 187, 188, 190, 191, 194], "knowledg": 105, "atlasinit": [105, 226], "abstract": [105, 109], "baseatla": [105, 106, 109, 185, 226], "incorpor": [105, 226], "mixin": [105, 107, 226, 229], "pointer": [105, 107, 108, 110, 111, 112, 113, 114], "annot": 105, "discretevolumetricatla": [105, 226], "volum": [105, 112, 113, 114, 115], "multivolumetricatla": [105, 114, 226], "multifilevolumetricatla": [105, 113, 226], "cortexsubcortexciftiatla": [105, 226], "cerebr": 105, "cortex": [105, 108, 110], "subcortex": [105, 108, 110], "dirichletinitvolumetricatla": [105, 110, 226], "dirichlet": [105, 106, 109, 110, 111, 115, 130, 226, 229], "dirichletinitsurfaceatla": [105, 111, 226], "flexibl": [105, 122], "straightforwardli": 105, "realiti": 105, "isol": [105, 107, 115], "compart": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 158, 185], "v_": [105, 165], "distinct": 105, "dirichletinitbaseatla": [105, 226], "init": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 185, 187, 188, 190, 191, 194, 202, 205, 214, 217, 225, 229], "spherical_scal": [106, 107, 108, 109, 110, 111, 112, 113, 114, 185], "kernel_sigma": [106, 185], "noise_sigma": [106, 185], "characteris": 106, "instanti": [106, 107, 115, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 179, 194, 212], "blur": 106, "pointwis": 106, "inject": [106, 107, 108, 109, 110, 111, 112, 113, 114, 187, 188, 189, 190, 191, 192, 193, 211], "smooth": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 127, 130, 172, 185, 226], "establish": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "topolog": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 226], "deviat": [106, 140, 149, 185, 210, 211], "preimag": [106, 119, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 187, 188, 190, 191], "multilogit": [106, 124, 125, 185, 226], "pre": [106, 161, 165, 167, 168, 169, 205, 212, 226], "simplex": [106, 124, 127, 130, 161, 162, 226], "ref_point": [107, 108, 112, 113, 114, 115], "mask_sourc": [107, 109, 111], "clear_cach": [107, 108, 112, 113, 114], "inherit": [107, 228], "sever": [107, 159, 170, 189, 192], "cover": 107, "frequent": [107, 159], "scenario": 107, "own": 107, "composition": 107, "_load_refer": 107, "referencemixin": [107, 226], "_create_mask": 107, "maskmixin": [107, 226], "_compartment_names_dict": 107, "compartmentmixin": [107, 226], "_create_compart": 107, "_configure_decod": 107, "labelmixin": [107, 226], "_populate_map_from_ref": 107, "_init_coor": 107, "meshmixin": [107, 226], "_configure_sigma": 107, "convmixin": [107, 226], "_convolv": 107, "abstractli": 107, "candid": [107, 205, 206], "inclus": [107, 108, 110, 111, 112, 113, 114, 115, 140], "subcompart": [107, 108, 109, 110, 111, 112, 113, 114, 115], "cortic": [107, 108, 110, 115, 158], "hemispher": [107, 108, 110, 115], "decod": [107, 108, 110, 111, 112, 113, 114, 115, 185], "wa": [107, 108, 110, 111, 112, 113, 114], "construct": [107, 108, 110, 111, 112, 113, 114], "statu": [107, 108, 110, 111, 112, 113, 114, 115], "extent": [107, 108, 110, 111, 112, 113, 114, 167, 168, 169, 171], "cached_ref_data": [107, 108, 110, 111, 112, 113, 114], "purg": [107, 108, 110, 112, 113, 114], "overhead": [107, 108, 109, 110, 111, 112, 113, 114], "ceil": [107, 108, 109, 110, 111, 112, 113, 114], "mask_l": [108, 110], "mask_r": [108, 110], "surf_l": [108, 110], "surf_r": [108, 110], "cortex_l": [108, 110], "cifti_structure_cortex_left": [108, 110], "cortex_r": [108, 110], "cifti_structure_cortex_right": [108, 110], "subcort": [108, 110, 115], "grei": [108, 110], "matter": [108, 110], "endow": [108, 110], "gifti": [108, 110], "32k": [108, 110], "fslr": [108, 110], "medial": [108, 110, 115], "wall": [108, 110, 115], "nb": [108, 110, 111, 112, 113, 114], "nifti1imag": [108, 110, 111, 112, 113, 114], "to_imag": [108, 110, 115], "compartment_label": [109, 110, 115], "conc": [109, 110, 111], "template_imag": 109, "concentr": [109, 110, 111, 124, 157, 161, 165, 173], "cifti_templ": 110, "n_label": 111, "probabilist": [113, 114, 185], "segment": [113, 114], "ica": [113, 114], "_objectreferencemixin": 115, "_singlereferencemixin": 115, "disk": [115, 220], "_multireferencemixin": 115, "_phantomreferencemixin": 115, "unimport": 115, "_ciftireferencemixin": 115, "model_axi": 115, "substitut": [115, 202], "chri": 115, "markiewicz": 115, "tutori": 115, "_logicmaskmixin": 115, "tree": [115, 145, 215], "maskintersect": [115, 226], "maskthreshold": [115, 226], "leaf": [115, 145], "_cortexsubcortexciftimaskmixin": 115, "exclus": 115, "_fromnullmaskmixin": 115, "background": 115, "_singlecompartmentmixin": 115, "_multicompartmentmixin": 115, "extra": 115, "_cortexsubcortexcifticompartmentmixin": 115, "_discretelabelmixin": 115, "_continuouslabelmixin": 115, "valid": [115, 160, 220], "scheme": [115, 119, 170, 187, 188, 190, 191, 225, 229], "discretelabelmixin": 115, "_dirichletlabelmixin": 115, "_volumetricmeshmixin": 115, "evenli": 115, "_vertexciftimeshmixin": 115, "_evenlysampledconvmixin": 115, "unsupport": 115, "Its": 115, "_spatialconvmixin": 115, "from_distr_init_": [116, 118, 226], "constant_init_": [116, 117, 226], "identity_init_": [116, 226], "domaininitialis": [116, 117, 118, 226], "distributioninitialis": [116, 226], "constantinitialis": [116, 226], "throughout": [117, 120], "distr": [118, 121, 124], "preweight": [119, 185, 187, 188, 190, 191, 193, 194], "logist": [119, 129], "interv": [119, 127, 130, 136], "unconstrain": 119, "learnabl": [119, 140, 142, 187, 188, 189, 190, 191, 192, 193, 194, 202, 209, 210, 214, 217], "conveni": [119, 159, 161, 220], "functool": 119, "scalar": [120, 153, 154, 157, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 173, 228], "delta": [123, 144, 165], "deltaplus_init_": 123, "loc": [123, 129, 132, 134, 137, 138, 144], "conjunct": [123, 124, 144, 146, 151, 162], "atanh": [123, 125, 140, 142, 144, 151, 185, 194, 226], "rang": [123, 126, 127, 128, 129, 130, 136, 137, 138, 144, 151], "dirichlet_init_": 124, "1d": [124, 127, 130], "understood": 124, "n_class": [124, 212], "logit": [125, 127, 130, 157, 161, 162, 164, 185, 226], "amplitudeatanh": [125, 140, 142, 194, 226], "amplitudemultilogit": [125, 194, 226], "handler": [126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 226], "mapper": [126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 157, 161, 162, 185, 226, 229], "finit": [126, 128, 129], "reciproc": [126, 128, 129, 211], "never": 126, "min": [126, 128, 129, 133, 136], "purpos": [126, 127, 128, 129, 130, 189, 192], "supremum": [126, 127, 128, 129, 130, 205], "infimum": [126, 127, 128, 129, 130, 205], "asymptot": [126, 128, 129], "restrict": [126, 127, 128, 129, 130], "vanish": [126, 127, 128, 129, 130], "_outofdomainhandl": [126, 127, 128, 129, 130], "clip": [126, 127, 128, 129, 130, 131, 136, 226], "test": [126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 156, 193, 205, 220, 225, 226], "fall": [126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138], "bound": [126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 161], "handle_ood": [126, 127, 128, 129, 130, 132, 134, 135, 137, 138], "001": [127, 130, 159, 207], "multinomi": [127, 130], "natur": [127, 130], "serv": [127, 130], "sigmoid": [129, 165, 185, 205, 212], "well": [130, 153, 159, 212], "behav": 130, "increas": [130, 209, 212], "higher": 130, "entropi": [130, 162, 165, 228, 229], "equiprob": [130, 161, 162], "ood": [131, 140, 226], "_domain": [131, 226], "_phaseamplitudedomain": [131, 226], "affin": [131, 167, 226], "domainbas": [132, 133, 134, 135, 136, 137, 138, 226, 229], "closest": [133, 140, 160], "allow": [133, 142, 187, 188, 190, 191, 215, 228], "prescrib": [133, 136], "exactli": [134, 144], "unmodifi": 134, "radic": 136, "extrem": [136, 171, 212, 226], "destroi": 136, "accommod": 136, "feasibl": 136, "obs_min": 136, "obs_max": 136, "lbound": 136, "ubound": 136, "safe": [137, 138], "manner": [137, 138, 142, 162], "superclass": [137, 138], "emul": [139, 140, 142, 143, 194], "replic": 139, "transfer": [139, 140, 141, 142, 194], "freqfilterspec": [139, 141, 142, 194, 226], "freqfilter_init_": [139, 194, 226], "clamp_init_": [139, 226], "freqfilt": [140, 141, 142, 226, 229, 231], "wn": [140, 143], "ftype": [140, 143], "butter": [140, 143], "btype": [140, 143], "bandpass": [140, 143], "fs": [140, 143], "rs": [140, 143], "20": [140, 143, 215], "ampl_loc": 140, "ampl_scal": 140, "phase_loc": 140, "phase_scal": 140, "02": [140, 144], "clamp": [140, 141, 194], "approxim": [140, 142, 144, 158, 212, 214], "curv": [140, 142], "iir": [140, 142, 226, 229, 231], "iirfilt": [140, 142, 226, 229, 231], "f": [140, 141, 142, 175, 178, 179, 194, 195, 215], "bandstop": [140, 143], "critic": [140, 142, 143], "cutoff": [140, 143], "Not": 140, "ideal": [140, 143, 146], "cheby1": [140, 143], "cheby2": [140, 143], "ellip": [140, 143], "bessel": [140, 143], "randn": 140, "butterworth": [140, 143], "chebyshev": [140, 143], "ellipt": [140, 143], "thompson": [140, 143], "overst": 140, "remot": 140, "contrast": 140, "exact": 140, "lowpass": [140, 143], "highpass": [140, 143], "rippl": [140, 143], "stop": [140, 143], "mag": [140, 143], "scipi": [140, 142, 143], "clampabl": 140, "get_clamp": 140, "toler": [140, 154, 156], "excess": 140, "initialise_spectrum": 140, "worn": 140, "raw": [140, 142, 150, 185, 187, 188, 190, 191, 192, 194], "prevent": [140, 142, 146, 194, 209], "explos": [140, 142, 185, 194], "points_tensor": 141, "values_tensor": 141, "filter_spec": [141, 142, 194], "spec": [141, 142, 195], "even": 142, "kuznetsov": [143, 195], "initialise_coef": 143, "laplace_init_": 144, "excl_axi": 144, "multidimension": 144, "decai": 144, "rate": [144, 220], "atlasmixin": [145, 226, 229], "binaris": 145, "surviv": [145, 214], "morpholog": 145, "dilat": 145, "eros": 145, "hole": 145, "children": 145, "union": [145, 205], "intersect": [145, 205], "img": 145, "lattic": 146, "bipartitelatticeinit": 146, "n_out": 146, "n_lattic": [146, 215], "channel_multipli": [146, 215], "temperatur": 146, "random_init": 146, "attenu": 146, "prev": 146, "spars": 146, "biregular": 146, "compress": [146, 217, 218, 229, 231], "wrong": 146, "But": 146, "realli": 146, "common": [146, 193], "n_in": 146, "twice": [146, 165], "maximis": 146, "mutual": [146, 160], "allegi": 146, "n_": 146, "h_": [146, 217, 218], "w_": [146, 217, 218], "best": [146, 226], "uncompress": 146, "succeed": 146, "greedi": 146, "fuse": [146, 217], "join": 146, "redund": 146, "set_next": 146, "set_object": 146, "set_potenti": 146, "sign_vector": 146, "tangencyinit": [147, 226], "tangency_init_": [147, 226], "semidefinitemean": [147, 226], "spdeuclideanmean": [147, 226], "spdharmonicmean": [147, 226], "spdlogeuclideanmean": [147, 226], "spdgeometricmean": [147, 226], "exp_m": 148, "log_m": 148, "mean_spec": [149, 209, 210], "init_data": [149, 210], "std": [149, 210, 211], "_semidefinitemean": [149, 209, 210], "central": [149, 209, 210], "tendenc": [149, 209, 210], "sylo_init_": 150, "fan_in": 150, "nonlinear": [150, 202, 214], "leaky_relu": 150, "kaim": [150, 202], "fan": 150, "m": [150, 227], "recept": 150, "crosshair": 150, "hack": 150, "theoret": 150, "justif": 150, "believ": 150, "toeplitz_init_": 151, "pretransform": 152, "lossschem": [152, 228, 229], "hand": 152, "register_act": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "register_sentri": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "sentri": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 228], "action": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "nu": [153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173], "slicewis": 153, "criterion": [153, 185], "alwai": [153, 159, 162, 178], "listen": [153, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 228], "batchcorr": [154, 155, 156], "tol": [154, 155, 156], "tol_sig": [154, 155], "auto_tol": [154, 228, 229], "fc": 155, "qc": 155, "edgewis": 155, "batchcorrel": [155, 228, 229], "scanner": 155, "motion": 155, "scan": 155, "batch_siz": [156, 184], "tail": 156, "mass": [157, 158, 224, 229], "simul": 157, "collaps": 157, "quantiti": [157, 171, 172, 173], "dispers": 157, "unpenalis": 157, "ball": 157, "proport": [157, 167], "ell": 158, "ell_": 158, "lh": 158, "rh": 158, "moder": 158, "strong": [158, 159], "analysi": 159, "properti": [159, 174, 226], "suit": 159, "concav": [159, 161], "global": 159, "optimis": [159, 165, 210, 212], "seek": 159, "weaker": 159, "induc": [159, 165], "cluster": [159, 160], "four": 159, "presum": 159, "advantag": 159, "certain": 159, "denomin": [159, 165], "unstabl": [159, 220, 225], "simpl": [159, 225], "cor": 159, "straightforward": 159, "v": [160, 185, 194, 212], "mathcal": [160, 165], "v_i": 160, "v_j": 160, "half": 160, "Such": 160, "centroid": 160, "proxim": 160, "l1": [160, 167, 168, 169, 172, 173, 205], "notion": 160, "commut": 160, "cartoon": [161, 171], "schemat": 161, "contour": 161, "superpos": 161, "categori": 161, "applic": [161, 185, 195], "minimis": [161, 172], "afford": 161, "unbound": 161, "capac": 161, "undesir": 161, "parameteris": [161, 205], "precompos": [161, 162, 165, 167, 168, 169], "unnormalis": [162, 171], "shrink": 162, "situat": 162, "trivial": 162, "uninterest": 162, "minima": 162, "prob_axi": 162, "hing": 163, "svm": [163, 229, 231], "jensen": 164, "shannon": 164, "diverg": 164, "jsdiv": 164, "js": 164, "affiliation_xfm": 165, "_q": 165, "nu_q": 165, "undirect": 165, "calcul": 165, "notat": 165, "account": 165, "lend": [165, 185, 226], "intuit": [165, 185, 226], "quantif": 165, "similarli": [165, 214], "wherein": 165, "equilibrium": [165, 228, 229], "loop": 165, "mvkurtosi": 166, "dimensional_sc": 166, "kurtosi": 166, "mardia": 166, "laumann": [166, 176], "colleagu": 166, "stationari": [166, 179, 180], "infinit": 166, "optimum": 166, "violat": 167, "unilateralnormedloss": [167, 228, 229], "manhattan": [167, 168, 169, 172, 173], "unilater": [167, 169, 214], "unreduc": [167, 168, 169], "configur": [168, 212], "normedloss": [169, 228, 229], "nonposit": 169, "verbos": [170, 212], "homogen": 171, "AT": 171, "core": 171, "illustr": 171, "intens": 171, "lavend": 171, "blue": 171, "green": 171, "practic": [171, 205, 220, 226], "uneven": 171, "omit": 171, "voxelwis": [171, 183], "too": [171, 215], "fortun": 171, "broken": [171, 188, 191], "down": 171, "affect": 171, "reactivetermin": 171, "caution": 171, "improp": 171, "destruct": 171, "skip_normalis": 171, "tend": 171, "standardise_data": 171, "standardise_mu": 171, "transit": 172, "smoother": 172, "diff": 172, "bimod": 173, "symbimod": 173, "synthet": [173, 179, 180], "experi": [173, 220], "prefer": 173, "synthesis": 174, "match_spectra": [174, 230], "match_covari": [174, 230], "match_refer": [174, 175, 180, 230], "match_cov_and_spectrum": [174, 177, 179, 230], "synthesise_match": [174, 177, 179, 230], "synthesise_from_cov_and_spectrum": [174, 175, 180, 230], "synth": [175, 176, 177, 178, 179, 180, 229, 230], "describ": [176, 209], "et": 176, "al": 176, "2017": 176, "stabil": 176, "bold": [176, 220], "fmri": 176, "drawn": [176, 179, 180], "hold": 176, "_inter": 176, "alia_": 176, "use_mean": [177, 178, 180], "rescal": 178, "correlationnorm": [181, 231], "nn": [182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 205, 206, 207, 209, 210, 211, 212, 214, 215, 217, 218, 219, 224, 225, 229], "grad_path": 182, "labelwis": 183, "atlaslinear": [183, 184, 231], "atlasaccumulin": [183, 231], "image_kei": 184, "influx": 184, "efflux": 184, "line": 184, "transmit_filt": 184, "receive_filt": 184, "skip_loc": 184, "nonlocal_argmap": 184, "rebatch": 184, "mask_input": 185, "spatial_dropout": 185, "min_voxel": 185, "dropout": [185, 187, 188, 189, 190, 191, 192, 193], "discount": 185, "conjectur": 185, "grow": 185, "absmean": 185, "zscore": 185, "psc": 185, "strategi": 185, "percent": 185, "postweight": [185, 187, 188, 189, 190, 191, 192, 193, 205], "consider": 185, "concatenate_and_decod": 185, "reset_paramet": [185, 194, 205, 207, 214], "select_compart": 185, "_cov": [186, 231], "unarycovari": [186, 231], "unarycovariancetw": [186, 231], "unarycovarianceuw": [186, 231], "binarycovari": [186, 231], "binarycovariancetw": [186, 231], "binarycovarianceuw": [186, 231], "max_lag": [187, 188, 190, 191, 193], "out_channel": [187, 188, 189, 190, 191, 192, 193, 202, 214], "stochast": [187, 188, 189, 190, 191, 192], "c_1": [187, 188, 189], "c_2": [187, 188, 189], "unari": [187, 190, 191, 192], "lag": [187, 188, 189, 190, 191, 192], "noisesourc": [187, 188, 189, 190, 191, 192], "dropoutsourc": [187, 188, 189, 190, 191, 192], "bootstrap": [187, 188, 189, 190, 191, 192], "prepreweight_c": [188, 191], "prepreweight_r": [188, 191], "lead": [188, 191], "prepreweight": [188, 191], "nonetheless": [189, 192], "comprehens": 193, "frequencydomainfilt": 194, "time_dim": 194, "suppli": 194, "uncertain": 194, "entail": 194, "predomain": 194, "clamp_point": 194, "clamp_valu": 194, "rnn": 195, "bori": 195, "kuz": 195, "differentiable_iir_filt": 195, "publish": 195, "cite": 195, "parker": 195, "jd": 195, "esqueda": 195, "2020": 195, "machin": [195, 212], "dafx2020": 195, "vienna": 195, "austria": 195, "septemb": 195, "21": 195, "yet": 195, "dtdf": 195, "iirfiltfilt": 195, "spectralinterpol": [196, 231], "weightedinterpol": [196, 231], "hybridinterpol": [196, 231], "1x1": [200, 202], "queryencod": [200, 231], "recombin": [201, 215, 229, 231], "num_embed": 201, "embedding_dim": 201, "query_dim": 201, "common_layer_dim": 201, "specific_layer_dim": 201, "nlin": [201, 215], "progressive_specif": 201, "noise_dim": 201, "in_channel": [202, 214, 215], "positive_onli": 202, "mixtur": 202, "math": 202, "denois": 204, "responsefunctionlinearselector": [204, 231], "linearcombinationselector": [204, 231], "eliminationselector": [204, 231], "n_column": [205, 206, 207], "or_dim": 205, "and_dim": 205, "elimin": 205, "gentler": 205, "slope": 205, "did": 205, "didn": 205, "look": 205, "carefulli": 205, "someon": 205, "model_dim": [206, 207], "n_response_funct": 207, "response_function_len": 207, "9": 207, "init_lin": 207, "init_conv": 207, "leak": 207, "tangentproject": [208, 231], "batchtangentproject": [208, 231], "inertia": 209, "transport": [209, 210], "destin": [209, 210], "idea": [209, 220], "somehow": 209, "updat": [209, 228, 232], "inerti": 209, "eta": 209, "omega_t": 209, "omega_": 209, "histor": 209, "tangencypoint": 209, "skip": 209, "heavili": 209, "dest": [209, 210], "fix": [210, 214], "noisi": 211, "necessarili": 211, "theorem": 211, "spsdnoisesourc": 211, "rbf": 212, "coef0": 212, "class_weight": 212, "decision_function_shap": 212, "ovr": 212, "01": 212, "formulate_on_forward_pass": 212, "solver": 212, "n_observ": 212, "sample_weight": 212, "kernelis": 212, "dpp": 212, "complianc": 212, "sacrific": 212, "quickli": 212, "prohibit": 212, "analyt": 212, "custom": 212, "sklearn": 212, "Or": 212, "libsvm": 212, "end": 212, "hyperparamet": [212, 228], "strength": 212, "poli": 212, "gram": 212, "precomput": 212, "unbalanc": 212, "vs": 212, "rest": 212, "classifi": 212, "formul": 212, "eco": 212, "sc": 212, "decis": 212, "diffcp": 212, "incred": 212, "compar": 212, "dedic": 212, "dual": 212, "soft": [212, 214], "15": 212, "www": 212, "youtub": 212, "watch": 212, "zzn80wmclnw": 212, "cxvpylay": 212, "disciplin": [212, 226], "parametr": 212, "program": [212, 224, 226, 228], "syloresnet": [213, 231], "learnable_al": 214, "disabl": 214, "simultan": 214, "respond": [214, 228], "rectifi": 214, "c_in": 214, "c_out": 214, "third": 214, "relu": [214, 215], "sylo": [215, 224, 226, 229, 231], "in_dim": 215, "dim_sequ": 215, "channel_sequ": 215, "block_sequ": 215, "lattice_order_sequ": 215, "compression_init": 215, "norm_lay": 215, "syloresblock": 215, "community_dim": 215, "submodul": [215, 220, 225, 226, 228], "regular": 215, "__init__": 215, "super": 215, "conv1": 215, "conv2": 215, "verticalcompress": [216, 231], "vertical_compress": [216, 231], "vertcom": [217, 218, 229, 231], "in_featur": 217, "out_featur": 217, "fold_channel": [217, 218], "forward_oper": 217, "row_compressor": 218, "col_compressor": 218, "remove_diagon": 218, "rightarrow": 218, "compressor": 218, "window_s": 219, "augmentation_factor": 219, "nonoverlap": 219, "augmentation_axi": 219, "workflow": [220, 225, 226], "ingest": 220, "pipelin": 220, "torchvis": 220, "instruct": 220, "tar": [220, 227], "archiv": [220, 227, 228], "shard": 220, "api": [220, 225, 226], "fairli": [220, 225], "brittl": 220, "atom": [220, 224], "coverag": [220, 226], "poor": 220, "grab": 220, "quit": 220, "read": 220, "speed": 220, "suboptim": 220, "welcom": [220, 232], "contribut": 220, "parallelis": 220, "head": 220, "hour": 220, "upward": 220, "dai": 220, "preprint": [221, 232], "elementari": 224, "miscellan": [224, 229], "softwar": 225, "librari": 225, "incipi": 225, "hub": 225, "focus": 225, "guidelin": 225, "soon": 225, "benchmark": [225, 229], "visualis": [225, 229], "instal": 225, "framework": [225, 226, 227], "eval": [225, 229], "neurosci": [225, 229], "viz": [225, 229], "page": 225, "integr": 226, "expertis": 226, "transpar": 226, "start": [226, 228], "modif": 226, "clean": 226, "slate": 226, "experiment": 226, "inadequ": 226, "warrant": 226, "report": 226, "bug": 226, "deltaplu": [226, 229], "deltaplus_init": 226, "deltaplusinit": 226, "dirichlet_init": 226, "dirichletinit": 226, "iirfilterspec": 226, "laplac": [226, 229], "laplace_init": 226, "laplaceinit": 226, "maskuthreshold": 226, "maskdil": 226, "maskeros": 226, "maskopen": 226, "maskclos": 226, "maskfillhol": 226, "maskneg": 226, "maskunion": 226, "floatleaf": 226, "maskleaf": 226, "mpbl": [226, 229], "toeplitz_init": 226, "toeplitzinit": 226, "pip": 227, "rciric": 227, "gz": 227, "cuda": 227, "cudnn": 227, "underli": 227, "helper": 228, "lossappli": [228, 229], "lossargu": 228, "send": 228, "event": 228, "cours": 228, "tune": 228, "epoch": 228, "reducingloss": [228, 229], "qcfc": [228, 229], "hemisphericteth": [228, 229], "logdetcorr": 228, "detcorr": 228, "logdet": 228, "vectordispers": [228, 229], "softmaxentropi": [228, 229], "softmaxequilibrium": [228, 229], "hingeloss": [228, 229], "jsdiverg": [228, 229], "softmaxjsdiverg": [228, 229], "modularityloss": [228, 229], "multivariatekurtosi": [228, 229], "constraintviol": [228, 229], "secondmo": [228, 229], "secondmomentcentr": 228, "smoothnesspenalti": [228, 229], "symmetricbimod": [228, 229], "symmetricbimodalnorm": 228, "synthesi": [229, 230], "spdnois": [229, 231], "windowamplifi": [229, 231], "ohbm": 232, "unfortun": 232, "am": 232, "go": 232, "abl": 232, "invit": 232, "feel": 232, "free": 232, "reach": 232, "question": 232, "discuss": 232, "my": 232, "contact": 232, "email": 232, "post": 232, "arxiv": 232, "star": 232, "repositori": 232, "toward": 232, "alpha": 232, "releas": 232}, "objects": {"hypercoil": [[220, 0, 0, "-", "data"], [222, 0, 0, "-", "engine"], [223, 0, 0, "-", "eval"], [224, 0, 0, "-", "functional"], [226, 0, 0, "-", "init"], [228, 0, 0, "-", "loss"], [230, 0, 0, "-", "neuro"], [231, 0, 0, "-", "nn"]], "hypercoil.data": [[0, 0, 0, "-", "bids"], [6, 0, 0, "-", "collate"], [7, 0, 0, "-", "dataref"], [11, 0, 0, "-", "dataset"], [14, 0, 0, "-", "functional"], [24, 0, 0, "-", "hcp"]], "hypercoil.data.bids": [[1, 1, 1, "", "BIDSObjectFactory"], [2, 1, 1, "", "LightBIDSLayout"], [3, 1, 1, "", "LightBIDSObject"], [4, 1, 1, "", "fMRIPrepDataset"], [5, 3, 1, "", "fmriprep_references"]], "hypercoil.data.bids.fMRIPrepDataset": [[4, 2, 1, "", "add_data"]], "hypercoil.data.collate": [[6, 3, 1, "", "extend_and_bind"], [6, 3, 1, "", "gen_collate"]], "hypercoil.data.dataref": [[8, 1, 1, "", "DataQuery"], [9, 1, 1, "", "DataReference"], [10, 3, 1, "", "data_references"]], "hypercoil.data.dataref.DataQuery": [[8, 2, 1, "", "__call__"], [8, 2, 1, "", "variable_factory"]], "hypercoil.data.dataref.DataReference": [[9, 2, 1, "", "__call__"], [9, 2, 1, "", "__getattr__"], [9, 4, 1, "", "data"], [9, 2, 1, "", "get_var"], [9, 4, 1, "", "label"], [9, 4, 1, "", "outcome"], [9, 2, 1, "", "parse_ids"]], "hypercoil.data.dataset": [[12, 1, 1, "", "ReferencedDataLoader"], [13, 1, 1, "", "ReferencedDataset"]], "hypercoil.data.dataset.ReferencedDataLoader": [[12, 2, 1, "", "set_depth"]], "hypercoil.data.dataset.ReferencedDataset": [[13, 2, 1, "", "add_data"], [13, 2, 1, "", "set_depth"]], "hypercoil.data.functional": [[15, 3, 1, "", "apply_model_specs"], [17, 3, 1, "", "apply_to_select"], [17, 3, 1, "", "apply_transform"], [16, 3, 1, "", "change_extension"], [21, 3, 1, "", "consolidate_block"], [20, 3, 1, "", "cwb_cifti_header"], [18, 3, 1, "", "dump_data"], [21, 3, 1, "", "extend_to_max_size"], [21, 3, 1, "", "extend_to_size"], [19, 3, 1, "", "fillnan"], [15, 3, 1, "", "get_col"], [18, 3, 1, "", "get_metadata_variable"], [17, 3, 1, "", "get_path_from_var"], [17, 3, 1, "", "identity"], [19, 3, 1, "", "nanfill"], [20, 3, 1, "", "nifti_header"], [22, 3, 1, "", "normalise"], [22, 3, 1, "", "polynomial_detrend"], [22, 3, 1, "", "random_window"], [16, 3, 1, "", "read_data_frame"], [18, 3, 1, "", "read_json"], [20, 3, 1, "", "read_neuro_image"], [22, 3, 1, "", "standardise"], [21, 3, 1, "", "to_named_tensor"], [21, 3, 1, "", "to_tensor"], [17, 3, 1, "", "transform_block"], [17, 3, 1, "", "transpose"], [17, 3, 1, "", "unzip_blocked_dict"], [17, 3, 1, "", "vector_encode"], [22, 3, 1, "", "window"], [22, 3, 1, "", "window_map"]], "hypercoil.data.grabber": [[23, 1, 1, "", "LightGrabber"]], "hypercoil.data.grabber.LightGrabber": [[23, 2, 1, "", "find_files"], [23, 2, 1, "", "get"], [23, 2, 1, "", "getall"]], "hypercoil.data.hcp": [[25, 3, 1, "", "hcp_references"]], "hypercoil.data.neuro": [[26, 1, 1, "", "fMRIDataReference"]], "hypercoil.engine": [[27, 0, 0, "-", "accumulate"]], "hypercoil.engine.accumulate": [[28, 1, 1, "", "AccumulatingFunction"], [29, 1, 1, "", "Accumulator"]], "hypercoil.engine.accumulate.AccumulatingFunction": [[28, 2, 1, "", "apply"], [28, 2, 1, "", "backward"], [28, 2, 1, "", "forward"]], "hypercoil.engine.accumulate.Accumulator": [[29, 2, 1, "", "forward"], [29, 2, 1, "", "reset"], [29, 2, 1, "", "zero_grad"]], "hypercoil.functional": [[30, 0, 0, "-", "activation"], [34, 0, 0, "-", "cmass"], [39, 0, 0, "-", "cov"], [49, 0, 0, "-", "fourier"], [52, 0, 0, "-", "graph"], [57, 0, 0, "-", "interpolate"], [61, 0, 0, "-", "matrix"], [73, 0, 0, "-", "semidefinite"], [80, 0, 0, "-", "sphere"], [87, 0, 0, "-", "sylo"], [88, 0, 0, "-", "symmap"], [93, 0, 0, "-", "tsconv"], [99, 0, 0, "-", "utils"]], "hypercoil.functional.activation": [[31, 3, 1, "", "amplitude_atanh"], [32, 3, 1, "", "amplitude_tanh"], [33, 3, 1, "", "corrnorm"]], "hypercoil.functional.cmass": [[35, 3, 1, "", "cmass"], [36, 3, 1, "", "cmass_coor"], [37, 3, 1, "", "cmass_reference_displacement"], [37, 3, 1, "", "cmass_reference_displacement_grid"], [38, 3, 1, "", "diffuse"]], "hypercoil.functional.cov": [[40, 3, 1, "", "conditionalcorr"], [41, 3, 1, "", "conditionalcov"], [42, 3, 1, "", "corr"], [43, 3, 1, "", "cov"], [44, 3, 1, "", "pairedcorr"], [45, 3, 1, "", "pairedcov"], [46, 3, 1, "", "partialcorr"], [47, 3, 1, "", "partialcov"], [48, 3, 1, "", "precision"]], "hypercoil.functional.fourier": [[50, 3, 1, "", "product_filter"], [51, 3, 1, "", "product_filtfilt"]], "hypercoil.functional.graph": [[53, 3, 1, "", "coaffiliation"], [54, 3, 1, "", "girvan_newman_null"], [55, 3, 1, "", "modularity_matrix"], [56, 3, 1, "", "relaxed_modularity"]], "hypercoil.functional.interpolate": [[58, 3, 1, "", "hybrid_interpolate"], [59, 3, 1, "", "spectral_interpolate"], [60, 3, 1, "", "weighted_interpolate"]], "hypercoil.functional.matrix": [[62, 3, 1, "", "delete_diagonal"], [63, 3, 1, "", "expand_outer"], [64, 3, 1, "", "invert_spd"], [65, 3, 1, "", "recondition_eigenspaces"], [66, 3, 1, "", "spd"], [67, 3, 1, "", "squareform"], [68, 3, 1, "", "sym2vec"], [69, 3, 1, "", "symmetric"], [70, 3, 1, "", "toeplitz"], [71, 3, 1, "", "vec2sym"]], "hypercoil.functional.resid": [[72, 3, 1, "", "residualise"]], "hypercoil.functional.semidefinite": [[74, 3, 1, "", "cone_project_spd"], [75, 3, 1, "", "mean_euc_spd"], [76, 3, 1, "", "mean_geom_spd"], [77, 3, 1, "", "mean_harm_spd"], [78, 3, 1, "", "mean_logeuc_spd"], [79, 3, 1, "", "tangent_project_spd"]], "hypercoil.functional.sphere": [[81, 3, 1, "", "euclidean_conv"], [82, 3, 1, "", "spatial_conv"], [83, 3, 1, "", "sphere_to_latlong"], [84, 3, 1, "", "sphere_to_normals"], [85, 3, 1, "", "spherical_conv"], [86, 3, 1, "", "spherical_geodesic"]], "hypercoil.functional.sylo": [[87, 3, 1, "", "sylo"]], "hypercoil.functional.symmap": [[89, 3, 1, "", "symexp"], [90, 3, 1, "", "symlog"], [91, 3, 1, "", "symmap"], [92, 3, 1, "", "symsqrt"]], "hypercoil.functional.tsconv": [[94, 3, 1, "", "basischan"], [95, 3, 1, "", "basisconv2d"], [96, 3, 1, "", "polychan"], [97, 3, 1, "", "polyconv2d"], [98, 3, 1, "", "tsconv2d"]], "hypercoil.functional.utils": [[100, 3, 1, "", "apply_mask"], [101, 3, 1, "", "complex_decompose"], [102, 3, 1, "", "complex_recompose"], [103, 3, 1, "", "conform_mask"], [104, 3, 1, "", "wmean"]], "hypercoil.init": [[105, 0, 0, "-", "atlas"], [115, 0, 0, "-", "atlasmixins"], [116, 0, 0, "-", "base"], [123, 0, 0, "-", "deltaplus"], [124, 0, 0, "-", "dirichlet"], [125, 0, 0, "-", "domain"], [131, 0, 0, "-", "domainbase"], [139, 0, 0, "-", "freqfilter"], [143, 0, 0, "-", "iirfilter"], [144, 0, 0, "-", "laplace"], [146, 0, 0, "-", "mpbl"], [147, 0, 0, "-", "semidefinite"], [150, 0, 0, "-", "sylo"], [151, 0, 0, "-", "toeplitz"]], "hypercoil.init.atlas": [[106, 1, 1, "", "AtlasInit"], [107, 1, 1, "", "BaseAtlas"], [108, 1, 1, "", "CortexSubcortexCIfTIAtlas"], [109, 1, 1, "", "DirichletInitBaseAtlas"], [110, 1, 1, "", "DirichletInitSurfaceAtlas"], [111, 1, 1, "", "DirichletInitVolumetricAtlas"], [112, 1, 1, "", "DiscreteVolumetricAtlas"], [113, 1, 1, "", "MultiVolumetricAtlas"], [114, 1, 1, "", "MultifileVolumetricAtlas"]], "hypercoil.init.atlas.AtlasInit": [[106, 2, 1, "", "__call__"]], "hypercoil.init.atlas.BaseAtlas": [[107, 2, 1, "", "__call__"]], "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas": [[108, 2, 1, "", "__call__"], [108, 2, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitBaseAtlas": [[109, 2, 1, "", "__call__"]], "hypercoil.init.atlas.DirichletInitSurfaceAtlas": [[110, 2, 1, "", "__call__"], [110, 2, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitVolumetricAtlas": [[111, 2, 1, "", "__call__"]], "hypercoil.init.atlas.DiscreteVolumetricAtlas": [[112, 2, 1, "", "__call__"]], "hypercoil.init.atlas.MultiVolumetricAtlas": [[113, 2, 1, "", "__call__"]], "hypercoil.init.atlas.MultifileVolumetricAtlas": [[114, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins": [[145, 1, 1, "", "FloatLeaf"], [145, 1, 1, "", "MaskClosing"], [145, 1, 1, "", "MaskDilation"], [145, 1, 1, "", "MaskErosion"], [145, 1, 1, "", "MaskFillHoles"], [145, 1, 1, "", "MaskIntersection"], [145, 1, 1, "", "MaskLeaf"], [145, 1, 1, "", "MaskNegation"], [145, 1, 1, "", "MaskOpening"], [145, 1, 1, "", "MaskThreshold"], [145, 1, 1, "", "MaskUThreshold"], [145, 1, 1, "", "MaskUnion"], [115, 1, 1, "", "_CIfTIReferenceMixin"], [115, 1, 1, "", "_ContinuousLabelMixin"], [115, 1, 1, "", "_CortexSubcortexCIfTICompartmentMixin"], [115, 1, 1, "", "_CortexSubcortexCIfTIMaskMixin"], [115, 1, 1, "", "_DirichletLabelMixin"], [115, 1, 1, "", "_DiscreteLabelMixin"], [115, 1, 1, "", "_EvenlySampledConvMixin"], [115, 1, 1, "", "_FromNullMaskMixin"], [115, 1, 1, "", "_LogicMaskMixin"], [115, 1, 1, "", "_MultiCompartmentMixin"], [115, 1, 1, "", "_MultiReferenceMixin"], [115, 1, 1, "", "_ObjectReferenceMixin"], [115, 1, 1, "", "_PhantomReferenceMixin"], [115, 1, 1, "", "_SingleCompartmentMixin"], [115, 1, 1, "", "_SingleReferenceMixin"], [115, 1, 1, "", "_SpatialConvMixin"], [115, 1, 1, "", "_VertexCIfTIMeshMixin"], [115, 1, 1, "", "_VolumetricMeshMixin"]], "hypercoil.init.atlasmixins.FloatLeaf": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskClosing": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskDilation": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskErosion": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskFillHoles": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskIntersection": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskLeaf": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskNegation": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskOpening": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskThreshold": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskUThreshold": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskUnion": [[145, 2, 1, "", "__call__"]], "hypercoil.init.base": [[117, 3, 1, "", "ConstantInitialiser"], [118, 3, 1, "", "DistributionInitialiser"], [119, 1, 1, "", "DomainInitialiser"], [120, 3, 1, "", "constant_init_"], [121, 3, 1, "", "from_distr_init_"], [122, 3, 1, "", "identity_init_"]], "hypercoil.init.deltaplus": [[123, 1, 1, "", "DeltaPlusInit"], [123, 3, 1, "", "deltaplus_init_"]], "hypercoil.init.dirichlet": [[124, 1, 1, "", "DirichletInit"], [124, 3, 1, "", "dirichlet_init_"]], "hypercoil.init.domain": [[126, 1, 1, "", "AmplitudeAtanh"], [127, 1, 1, "", "AmplitudeMultiLogit"], [128, 1, 1, "", "Atanh"], [129, 1, 1, "", "Logit"], [130, 1, 1, "", "MultiLogit"]], "hypercoil.init.domain.AmplitudeAtanh": [[126, 2, 1, "", "handle_ood"], [126, 2, 1, "", "image"], [126, 2, 1, "", "preimage"], [126, 2, 1, "", "test"]], "hypercoil.init.domain.AmplitudeMultiLogit": [[127, 2, 1, "", "handle_ood"], [127, 2, 1, "", "image"], [127, 2, 1, "", "preimage"], [127, 2, 1, "", "test"]], "hypercoil.init.domain.Atanh": [[128, 2, 1, "", "handle_ood"], [128, 2, 1, "", "image"], [128, 2, 1, "", "preimage"], [128, 2, 1, "", "test"]], "hypercoil.init.domain.Logit": [[129, 2, 1, "", "handle_ood"], [129, 2, 1, "", "image"], [129, 2, 1, "", "preimage"], [129, 2, 1, "", "test"]], "hypercoil.init.domain.MultiLogit": [[130, 2, 1, "", "handle_ood"], [130, 2, 1, "", "image"], [130, 2, 1, "", "preimage"], [130, 2, 1, "", "test"]], "hypercoil.init.domainbase": [[132, 1, 1, "", "Affine"], [133, 1, 1, "", "Clip"], [134, 1, 1, "", "Identity"], [135, 1, 1, "", "Linear"], [136, 1, 1, "", "Normalise"], [137, 1, 1, "", "_Domain"], [138, 1, 1, "", "_PhaseAmplitudeDomain"]], "hypercoil.init.domainbase.Affine": [[132, 2, 1, "", "handle_ood"], [132, 2, 1, "", "image"], [132, 2, 1, "", "preimage"], [132, 2, 1, "", "test"]], "hypercoil.init.domainbase.Clip": [[133, 2, 1, "", "apply"], [133, 2, 1, "", "test"]], "hypercoil.init.domainbase.Identity": [[134, 2, 1, "", "handle_ood"], [134, 2, 1, "", "image"], [134, 2, 1, "", "preimage"], [134, 2, 1, "", "test"]], "hypercoil.init.domainbase.Linear": [[135, 2, 1, "", "handle_ood"], [135, 2, 1, "", "image"], [135, 2, 1, "", "preimage"], [135, 2, 1, "", "test"]], "hypercoil.init.domainbase.Normalise": [[136, 2, 1, "", "apply"], [136, 2, 1, "", "test"]], "hypercoil.init.domainbase._Domain": [[137, 2, 1, "", "handle_ood"], [137, 2, 1, "", "image"], [137, 2, 1, "", "preimage"], [137, 2, 1, "", "test"]], "hypercoil.init.domainbase._PhaseAmplitudeDomain": [[138, 2, 1, "", "handle_ood"], [138, 2, 1, "", "image"], [138, 2, 1, "", "preimage"], [138, 2, 1, "", "test"]], "hypercoil.init.freqfilter": [[140, 1, 1, "", "FreqFilterSpec"], [141, 3, 1, "", "clamp_init_"], [142, 3, 1, "", "freqfilter_init_"]], "hypercoil.init.freqfilter.FreqFilterSpec": [[140, 2, 1, "", "get_clamps"], [140, 2, 1, "", "initialise_spectrum"]], "hypercoil.init.iirfilter": [[143, 1, 1, "", "IIRFilterSpec"]], "hypercoil.init.iirfilter.IIRFilterSpec": [[143, 2, 1, "", "initialise_coefs"]], "hypercoil.init.laplace": [[144, 1, 1, "", "LaplaceInit"], [144, 3, 1, "", "laplace_init_"]], "hypercoil.init.mpbl": [[146, 1, 1, "", "BipartiteLatticeInit"]], "hypercoil.init.semidefinite": [[148, 1, 1, "", "SPDEuclideanMean"], [148, 1, 1, "", "SPDGeometricMean"], [148, 1, 1, "", "SPDHarmonicMean"], [148, 1, 1, "", "SPDLogEuclideanMean"], [149, 1, 1, "", "TangencyInit"], [149, 3, 1, "", "tangency_init_"]], "hypercoil.init.sylo": [[150, 3, 1, "", "sylo_init_"]], "hypercoil.init.toeplitz": [[151, 1, 1, "", "ToeplitzInit"], [151, 3, 1, "", "toeplitz_init_"]], "hypercoil.loss.base": [[152, 1, 1, "", "LossApply"], [153, 1, 1, "", "ReducingLoss"]], "hypercoil.loss.base.LossApply": [[152, 2, 1, "", "forward"], [152, 2, 1, "", "register_action"], [152, 2, 1, "", "register_sentry"]], "hypercoil.loss.base.ReducingLoss": [[153, 2, 1, "", "forward"], [153, 2, 1, "", "register_action"], [153, 2, 1, "", "register_sentry"]], "hypercoil.loss.batchcorr": [[154, 1, 1, "", "BatchCorrelation"], [155, 1, 1, "", "QCFC"], [156, 3, 1, "", "auto_tol"]], "hypercoil.loss.batchcorr.BatchCorrelation": [[154, 2, 1, "", "forward"], [154, 2, 1, "", "register_action"], [154, 2, 1, "", "register_sentry"]], "hypercoil.loss.batchcorr.QCFC": [[155, 2, 1, "", "forward"], [155, 2, 1, "", "register_action"], [155, 2, 1, "", "register_sentry"]], "hypercoil.loss.cmass": [[157, 1, 1, "", "Compactness"], [158, 1, 1, "", "HemisphericTether"]], "hypercoil.loss.cmass.Compactness": [[157, 2, 1, "", "forward"], [157, 2, 1, "", "register_action"], [157, 2, 1, "", "register_sentry"]], "hypercoil.loss.cmass.HemisphericTether": [[158, 2, 1, "", "forward"], [158, 2, 1, "", "register_action"], [158, 2, 1, "", "register_sentry"]], "hypercoil.loss": [[159, 0, 0, "-", "determinant"], [161, 0, 0, "-", "entropy"], [162, 0, 0, "-", "equilibrium"], [164, 0, 0, "-", "jsdiv"], [170, 0, 0, "-", "scheme"], [171, 0, 0, "-", "secondmoment"], [173, 0, 0, "-", "symbimodal"]], "hypercoil.loss.determinant": [[159, 1, 1, "", "DetCorr"], [159, 1, 1, "", "Determinant"], [159, 1, 1, "", "LogDet"], [159, 1, 1, "", "LogDetCorr"]], "hypercoil.loss.determinant.DetCorr": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.determinant.Determinant": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.determinant.LogDet": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.determinant.LogDetCorr": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.dispersion": [[160, 1, 1, "", "VectorDispersion"]], "hypercoil.loss.dispersion.VectorDispersion": [[160, 2, 1, "", "forward"], [160, 2, 1, "", "register_action"], [160, 2, 1, "", "register_sentry"]], "hypercoil.loss.entropy": [[161, 1, 1, "", "Entropy"], [161, 1, 1, "", "SoftmaxEntropy"]], "hypercoil.loss.entropy.Entropy": [[161, 2, 1, "", "forward"], [161, 2, 1, "", "register_action"], [161, 2, 1, "", "register_sentry"]], "hypercoil.loss.entropy.SoftmaxEntropy": [[161, 2, 1, "", "forward"], [161, 2, 1, "", "register_action"], [161, 2, 1, "", "register_sentry"]], "hypercoil.loss.equilibrium": [[162, 1, 1, "", "Equilibrium"], [162, 1, 1, "", "SoftmaxEquilibrium"]], "hypercoil.loss.equilibrium.Equilibrium": [[162, 2, 1, "", "forward"], [162, 2, 1, "", "register_action"], [162, 2, 1, "", "register_sentry"]], "hypercoil.loss.equilibrium.SoftmaxEquilibrium": [[162, 2, 1, "", "forward"], [162, 2, 1, "", "register_action"], [162, 2, 1, "", "register_sentry"]], "hypercoil.loss.hinge": [[163, 1, 1, "", "HingeLoss"]], "hypercoil.loss.hinge.HingeLoss": [[163, 2, 1, "", "forward"], [163, 2, 1, "", "register_action"], [163, 2, 1, "", "register_sentry"]], "hypercoil.loss.jsdiv": [[164, 1, 1, "", "JSDivergence"], [164, 1, 1, "", "SoftmaxJSDivergence"]], "hypercoil.loss.jsdiv.JSDivergence": [[164, 2, 1, "", "forward"], [164, 2, 1, "", "register_action"], [164, 2, 1, "", "register_sentry"]], "hypercoil.loss.jsdiv.SoftmaxJSDivergence": [[164, 2, 1, "", "forward"], [164, 2, 1, "", "register_action"], [164, 2, 1, "", "register_sentry"]], "hypercoil.loss.modularity": [[165, 1, 1, "", "ModularityLoss"]], "hypercoil.loss.modularity.ModularityLoss": [[165, 2, 1, "", "forward"], [165, 2, 1, "", "register_action"], [165, 2, 1, "", "register_sentry"]], "hypercoil.loss.mvkurtosis": [[166, 1, 1, "", "MultivariateKurtosis"]], "hypercoil.loss.mvkurtosis.MultivariateKurtosis": [[166, 2, 1, "", "forward"], [166, 2, 1, "", "register_action"], [166, 2, 1, "", "register_sentry"]], "hypercoil.loss.norm": [[167, 1, 1, "", "ConstraintViolation"], [168, 1, 1, "", "NormedLoss"], [169, 1, 1, "", "UnilateralNormedLoss"]], "hypercoil.loss.norm.ConstraintViolation": [[167, 2, 1, "", "forward"], [167, 2, 1, "", "register_action"], [167, 2, 1, "", "register_sentry"]], "hypercoil.loss.norm.NormedLoss": [[168, 2, 1, "", "forward"], [168, 2, 1, "", "register_action"], [168, 2, 1, "", "register_sentry"]], "hypercoil.loss.norm.UnilateralNormedLoss": [[169, 2, 1, "", "forward"], [169, 2, 1, "", "register_action"], [169, 2, 1, "", "register_sentry"]], "hypercoil.loss.scheme": [[170, 1, 1, "", "LossScheme"]], "hypercoil.loss.scheme.LossScheme": [[170, 2, 1, "", "forward"], [170, 2, 1, "", "register_action"], [170, 2, 1, "", "register_sentry"]], "hypercoil.loss.secondmoment": [[171, 1, 1, "", "SecondMoment"], [171, 1, 1, "", "SecondMomentCentred"]], "hypercoil.loss.secondmoment.SecondMoment": [[171, 2, 1, "", "forward"], [171, 2, 1, "", "register_action"], [171, 2, 1, "", "register_sentry"]], "hypercoil.loss.secondmoment.SecondMomentCentred": [[171, 2, 1, "", "forward"], [171, 2, 1, "", "register_action"], [171, 2, 1, "", "register_sentry"]], "hypercoil.loss.smoothness": [[172, 1, 1, "", "SmoothnessPenalty"]], "hypercoil.loss.smoothness.SmoothnessPenalty": [[172, 2, 1, "", "forward"], [172, 2, 1, "", "register_action"], [172, 2, 1, "", "register_sentry"]], "hypercoil.loss.symbimodal": [[173, 1, 1, "", "SymmetricBimodal"], [173, 1, 1, "", "SymmetricBimodalNorm"]], "hypercoil.loss.symbimodal.SymmetricBimodal": [[173, 2, 1, "", "forward"], [173, 2, 1, "", "register_action"], [173, 2, 1, "", "register_sentry"]], "hypercoil.loss.symbimodal.SymmetricBimodalNorm": [[173, 2, 1, "", "forward"], [173, 2, 1, "", "register_action"], [173, 2, 1, "", "register_sentry"]], "hypercoil.neuro": [[174, 0, 0, "-", "synth"]], "hypercoil.neuro.synth": [[175, 3, 1, "", "match_cov_and_spectrum"], [176, 3, 1, "", "match_covariance"], [177, 3, 1, "", "match_reference"], [178, 3, 1, "", "match_spectra"], [179, 3, 1, "", "synthesise_from_cov_and_spectrum"], [180, 3, 1, "", "synthesise_matched"]], "hypercoil.nn": [[181, 0, 0, "-", "activation"], [183, 0, 0, "-", "atlas"], [186, 0, 0, "-", "cov"], [195, 0, 0, "-", "iirfilter"], [196, 0, 0, "-", "interpolate"], [200, 0, 0, "-", "recombinator"], [204, 0, 0, "-", "select"], [208, 0, 0, "-", "semidefinite"], [213, 0, 0, "-", "sylo"], [216, 0, 0, "-", "vertcom"]], "hypercoil.nn.activation": [[182, 1, 1, "", "CorrelationNorm"]], "hypercoil.nn.atlas": [[184, 1, 1, "", "AtlasAccumuline"], [185, 1, 1, "", "AtlasLinear"]], "hypercoil.nn.cov": [[187, 1, 1, "", "BinaryCovariance"], [188, 1, 1, "", "BinaryCovarianceTW"], [189, 1, 1, "", "BinaryCovarianceUW"], [190, 1, 1, "", "UnaryCovariance"], [191, 1, 1, "", "UnaryCovarianceTW"], [192, 1, 1, "", "UnaryCovarianceUW"], [193, 1, 1, "", "_Cov"]], "hypercoil.nn.freqfilter": [[194, 1, 1, "", "FrequencyDomainFilter"]], "hypercoil.nn.iirfilter": [[195, 1, 1, "", "IIRFiltFilt"], [195, 1, 1, "", "IIRFilter"]], "hypercoil.nn.interpolate": [[197, 1, 1, "", "HybridInterpolate"], [198, 1, 1, "", "SpectralInterpolate"], [199, 1, 1, "", "WeightedInterpolate"]], "hypercoil.nn.recombinator": [[201, 3, 1, "", "QueryEncoder"], [202, 3, 1, "", "Recombinator"]], "hypercoil.nn.resid": [[203, 0, 0, "-", "Residualise"]], "hypercoil.nn.select": [[205, 1, 1, "", "EliminationSelector"], [206, 1, 1, "", "LinearCombinationSelector"], [207, 1, 1, "", "ResponseFunctionLinearSelector"]], "hypercoil.nn.semidefinite": [[209, 3, 1, "", "BatchTangentProject"], [210, 3, 1, "", "TangentProject"]], "hypercoil.nn.spdnoise": [[211, 1, 1, "", "SPDNoise"]], "hypercoil.nn.svm": [[212, 1, 1, "", "SVM"]], "hypercoil.nn.sylo": [[214, 1, 1, "", "Sylo"], [215, 3, 1, "", "SyloResNet"]], "hypercoil.nn.vertcom": [[217, 3, 1, "", "VerticalCompression"], [218, 3, 1, "", "vertical_compression"]], "hypercoil.nn.window": [[219, 1, 1, "", "WindowAmplifier"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"bid": 0, "interfac": [0, 24], "content": [0, 7, 11, 24, 27, 105, 220, 225, 226], "bidsobjectfactori": 1, "lightbidslayout": 2, "lightbidsobject": 3, "fmriprepdataset": 4, "fmriprep_refer": 5, "collat": 6, "batch": 6, "function": [6, 14, 30, 87, 181, 224], "dataref": 7, "data": [7, 14, 15, 174, 220, 230], "refer": [7, 37, 229], "dataqueri": 8, "datarefer": 9, "data_refer": 10, "dataset": [11, 20], "referenc": 11, "referenceddataload": 12, "referenceddataset": 13, "transform": 14, "categori": 14, "frame": 15, "get_col": 15, "apply_model_spec": 15, "read_data_fram": [15, 16], "i": 16, "o": 16, "filesystem": 16, "read_neuro_imag": [16, 20], "read_json": [16, 18], "change_extens": 16, "gener": 17, "us": 17, "ident": [17, 134], "get_path_from_var": 17, "apply_transform": 17, "apply_to_select": 17, "transform_block": 17, "unzip_blocked_dict": 17, "transpos": 17, "vector_encod": 17, "metadata": 18, "dump_data": 18, "get_metadata_vari": 18, "miss": 19, "valu": 19, "nanfil": 19, "fillnan": 19, "extend_to_max_s": [19, 21], "neuroimag": 20, "nifti_head": 20, "cwb_cifti_head": 20, "tensor": 21, "cast": 21, "bind": 21, "to_tensor": 21, "to_named_tensor": 21, "consolidate_block": 21, "extend_to_s": 21, "time": [22, 93], "seri": [22, 93], "polynomial_detrend": 22, "standardis": 22, "normalis": [22, 136, 182], "window": 22, "random_window": 22, "window_map": 22, "lightgrabb": 23, "hcp": 24, "hcp_refer": 25, "fmridatarefer": 26, "accumul": [27, 29, 184], "local": 27, "gradient": 27, "accumulatingfunct": 28, "activ": [30, 181], "amplitude_atanh": 31, "amplitude_tanh": 32, "corrnorm": 33, "cmass": [34, 35], "centr": [34, 35, 36, 37, 38], "mass": [34, 35, 36, 37, 38], "arrai": 35, "coordin": [35, 36, 80], "cmass_coor": 36, "ani": 36, "displac": 37, "from": 37, "diffus": 38, "around": 38, "cov": [39, 43, 186], "covari": [39, 41, 43, 45, 47, 48, 186, 193], "correl": [39, 40, 42, 44, 46, 182], "conditionalcorr": 40, "condit": [40, 41], "conditionalcov": 41, "corr": [42, 159], "pearson": 42, "pairedcorr": 44, "pair": [44, 45], "pairedcov": 45, "partialcorr": 46, "partial": [46, 47], "partialcov": 47, "precis": 48, "invers": 48, "fourier": 49, "frequenc": [49, 139, 194], "domain": [49, 125, 131, 194], "filter": [49, 51, 143, 194, 195], "product_filt": 50, "product_filtfilt": 51, "zero": 51, "phase": 51, "graph": 52, "network": [52, 231], "coaffili": 53, "commun": 53, "girvan_newman_nul": 54, "modularity_matrix": 55, "relaxed_modular": 56, "interpol": [57, 58, 196], "imput": 57, "hybrid_interpol": 58, "weight": 58, "spectral": 58, "spectral_interpol": 59, "weighted_interpol": 60, "matrix": [61, 88], "oper": 61, "delete_diagon": 62, "expand_out": 63, "invert_spd": 64, "recondition_eigenspac": 65, "spd": 66, "squareform": 67, "sym2vec": 68, "symmetr": [69, 88], "toeplitz": [70, 151], "vec2sym": 71, "residualis": [72, 203], "semidefinit": [73, 147, 208], "posit": 73, "cone": 73, "cone_project_spd": 74, "mean_euc_spd": 75, "mean_geom_spd": 76, "mean_harm_spd": 77, "mean_logeuc_spd": 78, "tangent_project_spd": 79, "sphere": 80, "spheric": 80, "euclidean_conv": 81, "spatial_conv": 82, "sphere_to_latlong": 83, "sphere_to_norm": 84, "spherical_conv": 85, "spherical_geodes": 86, "sylo": [87, 150, 213, 214], "symmap": [88, 91], "map": [88, 225], "symexp": 89, "symlog": 90, "symsqrt": 92, "tsconv": 93, "convolut": 93, "basischan": 94, "basisconv2d": 95, "polychan": 96, "polyconv2d": 97, "tsconv2d": 98, "util": [99, 230], "miscellan": 99, "apply_mask": 100, "complex_decompos": 101, "complex_recompos": 102, "conform_mask": 103, "wmean": 104, "atla": [105, 115, 183, 184, 185], "initialis": [105, 116, 226], "atlasinit": 106, "baseatla": 107, "cortexsubcortexciftiatla": 108, "dirichletinitbaseatla": 109, "dirichletinitsurfaceatla": 110, "dirichletinitvolumetricatla": 111, "discretevolumetricatla": 112, "multivolumetricatla": 113, "multifilevolumetricatla": 114, "atlasmixin": 115, "mixin": 115, "referencemixin": 115, "maskmixin": 115, "compartmentmixin": 115, "labelmixin": 115, "meshmixin": 115, "convmixin": 115, "base": [116, 131, 159, 171, 193], "constantinitialis": 117, "distributioninitialis": 118, "domaininitialis": 119, "constant_init_": 120, "from_distr_init_": 121, "identity_init_": 122, "deltaplu": 123, "deltaplus_init": 123, "deltaplusinit": 123, "dirichlet": 124, "dirichlet_init": 124, "dirichletinit": 124, "mapper": [125, 131], "amplitudeatanh": 126, "amplitudemultilogit": 127, "atanh": 128, "logit": 129, "multilogit": 130, "domainbas": 131, "class": [131, 193], "affin": 132, "clip": 133, "ood": [133, 136], "handler": [133, 136], "linear": [135, 184, 185], "_domain": 137, "_phaseamplitudedomain": 138, "freqfilt": [139, 194], "band": 139, "init": [139, 143, 226], "freqfilterspec": 140, "clamp_init_": 141, "freqfilter_init_": 142, "iirfilt": [143, 195], "iir": [143, 195], "iirfilterspec": 143, "laplac": 144, "laplace_init": 144, "laplaceinit": 144, "mask": 145, "logic": 145, "maskthreshold": 145, "maskuthreshold": 145, "maskdil": 145, "maskeros": 145, "maskopen": 145, "maskclos": 145, "maskfillhol": 145, "maskneg": 145, "maskunion": 145, "maskintersect": 145, "floatleaf": 145, "maskleaf": 145, "mpbl": 146, "semidefinitemean": 148, "spdeuclideanmean": 148, "spdharmonicmean": 148, "spdlogeuclideanmean": 148, "spdgeometricmean": 148, "tangencyinit": 149, "tangency_init_": 149, "toeplitz_init": 151, "toeplitzinit": 151, "lossappli": 152, "reducingloss": 153, "batchcorrel": 154, "qcfc": 155, "auto_tol": 156, "compact": 157, "hemisphericteth": 158, "hemispher": 158, "tether": 158, "determin": 159, "log": 159, "loss": [159, 171, 228], "det": 159, "logdetcorr": 159, "detcorr": 159, "logdet": 159, "vectordispers": 160, "vector": 160, "dispers": 160, "entropi": 161, "softmaxentropi": 161, "equilibrium": 162, "softmaxequilibrium": 162, "hingeloss": 163, "jsdiverg": 164, "softmaxjsdiverg": 164, "modularityloss": 165, "girvan": 165, "newman": 165, "modular": 165, "relax": 165, "multivariatekurtosi": 166, "constraintviol": 167, "normedloss": 168, "unilateralnormedloss": 169, "lossschem": 170, "secondmo": 171, "second": 171, "moment": 171, "secondmomentcentr": 171, "smoothnesspenalti": 172, "symmetricbimod": 173, "symmetricbimodalnorm": 173, "synth": 174, "synthesi": 174, "match_cov_and_spectrum": 175, "match_covari": 176, "match_refer": 177, "match_spectra": 178, "synthesise_from_cov_and_spectrum": 179, "synthesise_match": 180, "modul": [181, 186, 231], "correlationnorm": 182, "layer": [183, 185, 194, 195, 196], "atlasaccumulin": 184, "atlaslinear": 185, "binarycovari": 187, "binarycovariancetw": 188, "binarycovarianceuw": 189, "unarycovari": 190, "unarycovariancetw": 191, "unarycovarianceuw": 192, "_cov": 193, "hybridinterpol": 197, "spectralinterpol": 198, "weightedinterpol": 199, "recombin": [200, 202], "queryencod": 201, "select": 204, "model": 204, "eliminationselector": 205, "linearcombinationselector": 206, "responsefunctionlinearselector": 207, "batchtangentproject": 209, "tangentproject": 210, "spdnois": 211, "svm": 212, "syloresnet": 215, "vertcom": 216, "vertex": 216, "compress": 216, "verticalcompress": 217, "vertical_compress": 218, "windowamplifi": 219, "engin": [220, 222], "framework": 221, "differenti": [222, 225], "eval": 223, "benchmark": 223, "evalu": 223, "program": 225, "brain": 225, "indic": 225, "tabl": 225, "scheme": 226, "instal": 227, "regularis": 228, "api": 229, "neuro": 230, "neurosci": 230, "nn": 231, "neural": 231, "poster": 232, "land": 232, "page": 232, "viz": 233, "visualis": 233}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})