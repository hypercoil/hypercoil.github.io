Search.setIndex({"docnames": ["api/hypercoil.data.bids", "api/hypercoil.data.bids.BIDSObjectFactory", "api/hypercoil.data.bids.LightBIDSLayout", "api/hypercoil.data.bids.LightBIDSObject", "api/hypercoil.data.bids.fMRIPrepDataset", "api/hypercoil.data.bids.fmriprep_references", "api/hypercoil.data.collate", "api/hypercoil.data.dataref", "api/hypercoil.data.dataref.DataQuery", "api/hypercoil.data.dataref.DataReference", "api/hypercoil.data.dataref.data_references", "api/hypercoil.data.dataset", "api/hypercoil.data.dataset.ReferencedDataLoader", "api/hypercoil.data.dataset.ReferencedDataset", "api/hypercoil.data.functional", "api/hypercoil.data.functional.dataframe", "api/hypercoil.data.functional.filesystem", "api/hypercoil.data.functional.general", "api/hypercoil.data.functional.metadata", "api/hypercoil.data.functional.missing", "api/hypercoil.data.functional.neuroimage", "api/hypercoil.data.functional.tensor", "api/hypercoil.data.functional.timeseries", "api/hypercoil.data.grabber.LightGrabber", "api/hypercoil.data.hcp", "api/hypercoil.data.hcp.hcp_references", "api/hypercoil.data.neuro.fMRIDataReference", "api/hypercoil.engine.accumulate", "api/hypercoil.engine.accumulate.AccumulatingFunction", "api/hypercoil.engine.accumulate.Accumulator", "api/hypercoil.functional.activation", "api/hypercoil.functional.activation.amplitude_atanh", "api/hypercoil.functional.activation.amplitude_tanh", "api/hypercoil.functional.activation.corrnorm", "api/hypercoil.functional.cmass", "api/hypercoil.functional.cmass.cmass", "api/hypercoil.functional.cmass.cmass_coor", "api/hypercoil.functional.cmass.cmass_reference", "api/hypercoil.functional.cmass.diffuse", "api/hypercoil.functional.cov", "api/hypercoil.functional.cov.conditionalcorr", "api/hypercoil.functional.cov.conditionalcov", "api/hypercoil.functional.cov.corr", "api/hypercoil.functional.cov.cov", "api/hypercoil.functional.cov.pairedcorr", "api/hypercoil.functional.cov.pairedcov", "api/hypercoil.functional.cov.partialcorr", "api/hypercoil.functional.cov.partialcov", "api/hypercoil.functional.cov.precision", "api/hypercoil.functional.fourier", "api/hypercoil.functional.fourier.product_filter", "api/hypercoil.functional.fourier.product_filtfilt", "api/hypercoil.functional.graph", "api/hypercoil.functional.graph.coaffiliation", "api/hypercoil.functional.graph.girvan_newman_null", "api/hypercoil.functional.graph.modularity_matrix", "api/hypercoil.functional.graph.relaxed_modularity", "api/hypercoil.functional.interpolate", "api/hypercoil.functional.interpolate.hybrid_interpolate", "api/hypercoil.functional.interpolate.spectral_interpolate", "api/hypercoil.functional.interpolate.weighted_interpolate", "api/hypercoil.functional.matrix", "api/hypercoil.functional.matrix.delete_diagonal", "api/hypercoil.functional.matrix.expand_outer", "api/hypercoil.functional.matrix.invert_spd", "api/hypercoil.functional.matrix.recondition_eigenspaces", "api/hypercoil.functional.matrix.spd", "api/hypercoil.functional.matrix.squareform", "api/hypercoil.functional.matrix.sym2vec", "api/hypercoil.functional.matrix.symmetric", "api/hypercoil.functional.matrix.toeplitz", "api/hypercoil.functional.matrix.vec2sym", "api/hypercoil.functional.resid.residualise", "api/hypercoil.functional.semidefinite", "api/hypercoil.functional.semidefinite.cone_project_spd", "api/hypercoil.functional.semidefinite.mean_euc_spd", "api/hypercoil.functional.semidefinite.mean_geom_spd", "api/hypercoil.functional.semidefinite.mean_harm_spd", "api/hypercoil.functional.semidefinite.mean_logeuc_spd", "api/hypercoil.functional.semidefinite.tangent_project_spd", "api/hypercoil.functional.sphere", "api/hypercoil.functional.sphere.euclidean_conv", "api/hypercoil.functional.sphere.spatial_conv", "api/hypercoil.functional.sphere.sphere_to_latlong", "api/hypercoil.functional.sphere.sphere_to_normals", "api/hypercoil.functional.sphere.spherical_conv", "api/hypercoil.functional.sphere.spherical_geodesic", "api/hypercoil.functional.sylo", "api/hypercoil.functional.symmap", "api/hypercoil.functional.symmap.symexp", "api/hypercoil.functional.symmap.symlog", "api/hypercoil.functional.symmap.symmap", "api/hypercoil.functional.symmap.symsqrt", "api/hypercoil.functional.tsconv", "api/hypercoil.functional.tsconv.basischan", "api/hypercoil.functional.tsconv.basisconv2d", "api/hypercoil.functional.tsconv.polychan", "api/hypercoil.functional.tsconv.polyconv2d", "api/hypercoil.functional.tsconv.tsconv2d", "api/hypercoil.functional.utils", "api/hypercoil.functional.utils.apply_mask", "api/hypercoil.functional.utils.complex_decompose", "api/hypercoil.functional.utils.complex_recompose", "api/hypercoil.functional.utils.conform_mask", "api/hypercoil.functional.utils.wmean", "api/hypercoil.init.atlas", "api/hypercoil.init.atlas.AtlasInit", "api/hypercoil.init.atlas.BaseAtlas", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas", "api/hypercoil.init.atlas.DirichletInitBaseAtlas", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas", "api/hypercoil.init.atlas.MultiVolumetricAtlas", "api/hypercoil.init.atlas.MultifileVolumetricAtlas", "api/hypercoil.init.atlasmixins", "api/hypercoil.init.base", "api/hypercoil.init.base.ConstantInitialiser", "api/hypercoil.init.base.DistributionInitialiser", "api/hypercoil.init.base.DomainInitialiser", "api/hypercoil.init.base.constant_init_", "api/hypercoil.init.base.from_distr_init_", "api/hypercoil.init.base.identity_init_", "api/hypercoil.init.deltaplus", "api/hypercoil.init.dirichlet", "api/hypercoil.init.domain", "api/hypercoil.init.domain.AmplitudeAtanh", "api/hypercoil.init.domain.AmplitudeMultiLogit", "api/hypercoil.init.domain.Atanh", "api/hypercoil.init.domain.Logit", "api/hypercoil.init.domain.MultiLogit", "api/hypercoil.init.domainbase", "api/hypercoil.init.domainbase.Affine", "api/hypercoil.init.domainbase.Clip", "api/hypercoil.init.domainbase.Identity", "api/hypercoil.init.domainbase.Linear", "api/hypercoil.init.domainbase.Normalise", "api/hypercoil.init.domainbase._Domain", "api/hypercoil.init.domainbase._PhaseAmplitudeDomain", "api/hypercoil.init.freqfilter", "api/hypercoil.init.freqfilter.FreqFilterSpec", "api/hypercoil.init.freqfilter.clamp_init_", "api/hypercoil.init.freqfilter.freqfilter_init_", "api/hypercoil.init.iirfilter", "api/hypercoil.init.laplace", "api/hypercoil.init.masklogic", "api/hypercoil.init.mpbl", "api/hypercoil.init.semidefinite", "api/hypercoil.init.semidefinite.SemidefiniteMean", "api/hypercoil.init.semidefinite.TangencyInit", "api/hypercoil.init.sylo", "api/hypercoil.init.toeplitz", "api/hypercoil.loss.base.LossApply", "api/hypercoil.loss.base.ReducingLoss", "api/hypercoil.loss.batchcorr.BatchCorrelation", "api/hypercoil.loss.batchcorr.QCFC", "api/hypercoil.loss.batchcorr.auto_tol", "api/hypercoil.loss.cmass.Compactness", "api/hypercoil.loss.cmass.HemisphericTether", "api/hypercoil.loss.determinant", "api/hypercoil.loss.dispersion.VectorDispersion", "api/hypercoil.loss.entropy", "api/hypercoil.loss.equilibrium", "api/hypercoil.loss.hinge.HingeLoss", "api/hypercoil.loss.jsdiv", "api/hypercoil.loss.modularity.ModularityLoss", "api/hypercoil.loss.mvkurtosis.MultivariateKurtosis", "api/hypercoil.loss.norm.NormedLoss", "api/hypercoil.loss.norm.UnilateralNormedLoss", "api/hypercoil.loss.scheme.LossScheme", "api/hypercoil.loss.secondmoment", "api/hypercoil.loss.smoothness.SmoothnessPenalty", "api/hypercoil.loss.symbimodal", "api/hypercoil.nn.activation", "api/hypercoil.nn.activation.CorrelationNorm", "api/hypercoil.nn.atlas", "api/hypercoil.nn.atlas.AtlasAccumuline", "api/hypercoil.nn.atlas.AtlasLinear", "api/hypercoil.nn.cov", "api/hypercoil.nn.cov.BinaryCovariance", "api/hypercoil.nn.cov.BinaryCovarianceTW", "api/hypercoil.nn.cov.BinaryCovarianceUW", "api/hypercoil.nn.cov.UnaryCovariance", "api/hypercoil.nn.cov.UnaryCovarianceTW", "api/hypercoil.nn.cov.UnaryCovarianceUW", "api/hypercoil.nn.cov._Cov", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter", "api/hypercoil.nn.iirfilter", "api/hypercoil.nn.interpolate", "api/hypercoil.nn.interpolate.HybridInterpolate", "api/hypercoil.nn.interpolate.SpectralInterpolate", "api/hypercoil.nn.interpolate.WeightedInterpolate", "api/hypercoil.nn.recombinator", "api/hypercoil.nn.recombinator.QueryEncoder", "api/hypercoil.nn.recombinator.Recombinator", "api/hypercoil.nn.resid.Residualise", "api/hypercoil.nn.select", "api/hypercoil.nn.select.EliminationSelector", "api/hypercoil.nn.select.LinearCombinationSelector", "api/hypercoil.nn.select.ResponseFunctionLinearSelector", "api/hypercoil.nn.semidefinite", "api/hypercoil.nn.semidefinite.BatchTangentProject", "api/hypercoil.nn.semidefinite.TangentProject", "api/hypercoil.nn.spdnoise.SPDNoise", "api/hypercoil.nn.svm.SVM", "api/hypercoil.nn.sylo", "api/hypercoil.nn.sylo.Sylo", "api/hypercoil.nn.sylo.SyloResNet", "api/hypercoil.nn.vertcom", "api/hypercoil.nn.vertcom.VerticalCompression", "api/hypercoil.nn.vertcom.vertical_compression", "api/hypercoil.nn.window.WindowAmplifier", "data", "diffprog", "engine", "eval", "functional", "index", "init", "installation", "loss", "modules", "nn", "portal", "viz"], "filenames": ["api/hypercoil.data.bids.rst", "api/hypercoil.data.bids.BIDSObjectFactory.rst", "api/hypercoil.data.bids.LightBIDSLayout.rst", "api/hypercoil.data.bids.LightBIDSObject.rst", "api/hypercoil.data.bids.fMRIPrepDataset.rst", "api/hypercoil.data.bids.fmriprep_references.rst", "api/hypercoil.data.collate.rst", "api/hypercoil.data.dataref.rst", "api/hypercoil.data.dataref.DataQuery.rst", "api/hypercoil.data.dataref.DataReference.rst", "api/hypercoil.data.dataref.data_references.rst", "api/hypercoil.data.dataset.rst", "api/hypercoil.data.dataset.ReferencedDataLoader.rst", "api/hypercoil.data.dataset.ReferencedDataset.rst", "api/hypercoil.data.functional.rst", "api/hypercoil.data.functional.dataframe.rst", "api/hypercoil.data.functional.filesystem.rst", "api/hypercoil.data.functional.general.rst", "api/hypercoil.data.functional.metadata.rst", "api/hypercoil.data.functional.missing.rst", "api/hypercoil.data.functional.neuroimage.rst", "api/hypercoil.data.functional.tensor.rst", "api/hypercoil.data.functional.timeseries.rst", "api/hypercoil.data.grabber.LightGrabber.rst", "api/hypercoil.data.hcp.rst", "api/hypercoil.data.hcp.hcp_references.rst", "api/hypercoil.data.neuro.fMRIDataReference.rst", "api/hypercoil.engine.accumulate.rst", "api/hypercoil.engine.accumulate.AccumulatingFunction.rst", "api/hypercoil.engine.accumulate.Accumulator.rst", "api/hypercoil.functional.activation.rst", "api/hypercoil.functional.activation.amplitude_atanh.rst", "api/hypercoil.functional.activation.amplitude_tanh.rst", "api/hypercoil.functional.activation.corrnorm.rst", "api/hypercoil.functional.cmass.rst", "api/hypercoil.functional.cmass.cmass.rst", "api/hypercoil.functional.cmass.cmass_coor.rst", "api/hypercoil.functional.cmass.cmass_reference.rst", "api/hypercoil.functional.cmass.diffuse.rst", "api/hypercoil.functional.cov.rst", "api/hypercoil.functional.cov.conditionalcorr.rst", "api/hypercoil.functional.cov.conditionalcov.rst", "api/hypercoil.functional.cov.corr.rst", "api/hypercoil.functional.cov.cov.rst", "api/hypercoil.functional.cov.pairedcorr.rst", "api/hypercoil.functional.cov.pairedcov.rst", "api/hypercoil.functional.cov.partialcorr.rst", "api/hypercoil.functional.cov.partialcov.rst", "api/hypercoil.functional.cov.precision.rst", "api/hypercoil.functional.fourier.rst", "api/hypercoil.functional.fourier.product_filter.rst", "api/hypercoil.functional.fourier.product_filtfilt.rst", "api/hypercoil.functional.graph.rst", "api/hypercoil.functional.graph.coaffiliation.rst", "api/hypercoil.functional.graph.girvan_newman_null.rst", "api/hypercoil.functional.graph.modularity_matrix.rst", "api/hypercoil.functional.graph.relaxed_modularity.rst", "api/hypercoil.functional.interpolate.rst", "api/hypercoil.functional.interpolate.hybrid_interpolate.rst", "api/hypercoil.functional.interpolate.spectral_interpolate.rst", "api/hypercoil.functional.interpolate.weighted_interpolate.rst", "api/hypercoil.functional.matrix.rst", "api/hypercoil.functional.matrix.delete_diagonal.rst", "api/hypercoil.functional.matrix.expand_outer.rst", "api/hypercoil.functional.matrix.invert_spd.rst", "api/hypercoil.functional.matrix.recondition_eigenspaces.rst", "api/hypercoil.functional.matrix.spd.rst", "api/hypercoil.functional.matrix.squareform.rst", "api/hypercoil.functional.matrix.sym2vec.rst", "api/hypercoil.functional.matrix.symmetric.rst", "api/hypercoil.functional.matrix.toeplitz.rst", "api/hypercoil.functional.matrix.vec2sym.rst", "api/hypercoil.functional.resid.residualise.rst", "api/hypercoil.functional.semidefinite.rst", "api/hypercoil.functional.semidefinite.cone_project_spd.rst", "api/hypercoil.functional.semidefinite.mean_euc_spd.rst", "api/hypercoil.functional.semidefinite.mean_geom_spd.rst", "api/hypercoil.functional.semidefinite.mean_harm_spd.rst", "api/hypercoil.functional.semidefinite.mean_logeuc_spd.rst", "api/hypercoil.functional.semidefinite.tangent_project_spd.rst", "api/hypercoil.functional.sphere.rst", "api/hypercoil.functional.sphere.euclidean_conv.rst", "api/hypercoil.functional.sphere.spatial_conv.rst", "api/hypercoil.functional.sphere.sphere_to_latlong.rst", "api/hypercoil.functional.sphere.sphere_to_normals.rst", "api/hypercoil.functional.sphere.spherical_conv.rst", "api/hypercoil.functional.sphere.spherical_geodesic.rst", "api/hypercoil.functional.sylo.rst", "api/hypercoil.functional.symmap.rst", "api/hypercoil.functional.symmap.symexp.rst", "api/hypercoil.functional.symmap.symlog.rst", "api/hypercoil.functional.symmap.symmap.rst", "api/hypercoil.functional.symmap.symsqrt.rst", "api/hypercoil.functional.tsconv.rst", "api/hypercoil.functional.tsconv.basischan.rst", "api/hypercoil.functional.tsconv.basisconv2d.rst", "api/hypercoil.functional.tsconv.polychan.rst", "api/hypercoil.functional.tsconv.polyconv2d.rst", "api/hypercoil.functional.tsconv.tsconv2d.rst", "api/hypercoil.functional.utils.rst", "api/hypercoil.functional.utils.apply_mask.rst", "api/hypercoil.functional.utils.complex_decompose.rst", "api/hypercoil.functional.utils.complex_recompose.rst", "api/hypercoil.functional.utils.conform_mask.rst", "api/hypercoil.functional.utils.wmean.rst", "api/hypercoil.init.atlas.rst", "api/hypercoil.init.atlas.AtlasInit.rst", "api/hypercoil.init.atlas.BaseAtlas.rst", "api/hypercoil.init.atlas.CortexSubcortexCIfTIAtlas.rst", "api/hypercoil.init.atlas.DirichletInitBaseAtlas.rst", "api/hypercoil.init.atlas.DirichletInitSurfaceAtlas.rst", "api/hypercoil.init.atlas.DirichletInitVolumetricAtlas.rst", "api/hypercoil.init.atlas.DiscreteVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultiVolumetricAtlas.rst", "api/hypercoil.init.atlas.MultifileVolumetricAtlas.rst", "api/hypercoil.init.atlasmixins.rst", "api/hypercoil.init.base.rst", "api/hypercoil.init.base.ConstantInitialiser.rst", "api/hypercoil.init.base.DistributionInitialiser.rst", "api/hypercoil.init.base.DomainInitialiser.rst", "api/hypercoil.init.base.constant_init_.rst", "api/hypercoil.init.base.from_distr_init_.rst", "api/hypercoil.init.base.identity_init_.rst", "api/hypercoil.init.deltaplus.rst", "api/hypercoil.init.dirichlet.rst", "api/hypercoil.init.domain.rst", "api/hypercoil.init.domain.AmplitudeAtanh.rst", "api/hypercoil.init.domain.AmplitudeMultiLogit.rst", "api/hypercoil.init.domain.Atanh.rst", "api/hypercoil.init.domain.Logit.rst", "api/hypercoil.init.domain.MultiLogit.rst", "api/hypercoil.init.domainbase.rst", "api/hypercoil.init.domainbase.Affine.rst", "api/hypercoil.init.domainbase.Clip.rst", "api/hypercoil.init.domainbase.Identity.rst", "api/hypercoil.init.domainbase.Linear.rst", "api/hypercoil.init.domainbase.Normalise.rst", "api/hypercoil.init.domainbase._Domain.rst", "api/hypercoil.init.domainbase._PhaseAmplitudeDomain.rst", "api/hypercoil.init.freqfilter.rst", "api/hypercoil.init.freqfilter.FreqFilterSpec.rst", "api/hypercoil.init.freqfilter.clamp_init_.rst", "api/hypercoil.init.freqfilter.freqfilter_init_.rst", "api/hypercoil.init.iirfilter.rst", "api/hypercoil.init.laplace.rst", "api/hypercoil.init.masklogic.rst", "api/hypercoil.init.mpbl.rst", "api/hypercoil.init.semidefinite.rst", "api/hypercoil.init.semidefinite.SemidefiniteMean.rst", "api/hypercoil.init.semidefinite.TangencyInit.rst", "api/hypercoil.init.sylo.rst", "api/hypercoil.init.toeplitz.rst", "api/hypercoil.loss.base.LossApply.rst", "api/hypercoil.loss.base.ReducingLoss.rst", "api/hypercoil.loss.batchcorr.BatchCorrelation.rst", "api/hypercoil.loss.batchcorr.QCFC.rst", "api/hypercoil.loss.batchcorr.auto_tol.rst", "api/hypercoil.loss.cmass.Compactness.rst", "api/hypercoil.loss.cmass.HemisphericTether.rst", "api/hypercoil.loss.determinant.rst", "api/hypercoil.loss.dispersion.VectorDispersion.rst", "api/hypercoil.loss.entropy.rst", "api/hypercoil.loss.equilibrium.rst", "api/hypercoil.loss.hinge.HingeLoss.rst", "api/hypercoil.loss.jsdiv.rst", "api/hypercoil.loss.modularity.ModularityLoss.rst", "api/hypercoil.loss.mvkurtosis.MultivariateKurtosis.rst", "api/hypercoil.loss.norm.NormedLoss.rst", "api/hypercoil.loss.norm.UnilateralNormedLoss.rst", "api/hypercoil.loss.scheme.LossScheme.rst", "api/hypercoil.loss.secondmoment.rst", "api/hypercoil.loss.smoothness.SmoothnessPenalty.rst", "api/hypercoil.loss.symbimodal.rst", "api/hypercoil.nn.activation.rst", "api/hypercoil.nn.activation.CorrelationNorm.rst", "api/hypercoil.nn.atlas.rst", "api/hypercoil.nn.atlas.AtlasAccumuline.rst", "api/hypercoil.nn.atlas.AtlasLinear.rst", "api/hypercoil.nn.cov.rst", "api/hypercoil.nn.cov.BinaryCovariance.rst", "api/hypercoil.nn.cov.BinaryCovarianceTW.rst", "api/hypercoil.nn.cov.BinaryCovarianceUW.rst", "api/hypercoil.nn.cov.UnaryCovariance.rst", "api/hypercoil.nn.cov.UnaryCovarianceTW.rst", "api/hypercoil.nn.cov.UnaryCovarianceUW.rst", "api/hypercoil.nn.cov._Cov.rst", "api/hypercoil.nn.freqfilter.FrequencyDomainFilter.rst", "api/hypercoil.nn.iirfilter.rst", "api/hypercoil.nn.interpolate.rst", "api/hypercoil.nn.interpolate.HybridInterpolate.rst", "api/hypercoil.nn.interpolate.SpectralInterpolate.rst", "api/hypercoil.nn.interpolate.WeightedInterpolate.rst", "api/hypercoil.nn.recombinator.rst", "api/hypercoil.nn.recombinator.QueryEncoder.rst", "api/hypercoil.nn.recombinator.Recombinator.rst", "api/hypercoil.nn.resid.Residualise.rst", "api/hypercoil.nn.select.rst", "api/hypercoil.nn.select.EliminationSelector.rst", "api/hypercoil.nn.select.LinearCombinationSelector.rst", "api/hypercoil.nn.select.ResponseFunctionLinearSelector.rst", "api/hypercoil.nn.semidefinite.rst", "api/hypercoil.nn.semidefinite.BatchTangentProject.rst", "api/hypercoil.nn.semidefinite.TangentProject.rst", "api/hypercoil.nn.spdnoise.SPDNoise.rst", "api/hypercoil.nn.svm.SVM.rst", "api/hypercoil.nn.sylo.rst", "api/hypercoil.nn.sylo.Sylo.rst", "api/hypercoil.nn.sylo.SyloResNet.rst", "api/hypercoil.nn.vertcom.rst", "api/hypercoil.nn.vertcom.VerticalCompression.rst", "api/hypercoil.nn.vertcom.vertical_compression.rst", "api/hypercoil.nn.window.WindowAmplifier.rst", "data.rst", "diffprog.rst", "engine.rst", "eval.rst", "functional.rst", "index.rst", "init.rst", "installation.rst", "loss.rst", "modules.rst", "nn.rst", "portal.rst", "viz.rst"], "titles": ["<code class=\"docutils literal notranslate\"><span class=\"pre\">bids</span></code>: BIDS interfaces", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BIDSObjectFactory</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LightBIDSLayout</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LightBIDSObject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fMRIPrepDataset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fmriprep_references</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">collate</span></code>: Batch collation functionality", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dataref</span></code>: Data references", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DataQuery</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DataReference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">data_references</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dataset</span></code>: Referenced datasets", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReferencedDataLoader</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReferencedDataset</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">functional</span></code>: Data transform functions", "Data frames", "I/O and filesystem", "General use", "Metadata", "Missing values", "Neuroimaging datasets", "Tensor casting and binding", "Time series", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LightGrabber</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hcp</span></code>: HCP interfaces", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hcp_references</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fMRIDataReference</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">accumulate</span></code>: Local gradient accumulation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AccumulatingFunction</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Accumulator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">amplitude_tanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corrnorm</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass</span></code>: Centre of mass, array coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cmass_coor</span></code>: Centre of mass, any coordinates", "Displacement from a reference centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">diffuse</span></code>: Diffuseness around centre of mass", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariances and correlations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcorr</span></code>: Conditional correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conditionalcov</span></code>: Conditional covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">corr</span></code>: Pearson correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcorr</span></code>: Paired correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pairedcov</span></code>: Paired covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcorr</span></code>: Partial correlation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">partialcov</span></code>: Partial covariance", "<code class=\"docutils literal notranslate\"><span class=\"pre\">precision</span></code>: Inverse covariance (precision)", "<code class=\"docutils literal notranslate\"><span class=\"pre\">fourier</span></code>: Frequency-domain filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filter</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">product_filtfilt</span></code>: Zero-phase filter", "<code class=\"docutils literal notranslate\"><span class=\"pre\">graph</span></code>: Graphs and networks", "<code class=\"docutils literal notranslate\"><span class=\"pre\">coaffiliation</span></code>: Community coaffiliation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">girvan_newman_null</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">modularity_matrix</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">relaxed_modularity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation and imputation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">hybrid_interpolate</span></code>: Weighted + spectral interpolation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spectral_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">weighted_interpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">matrix</span></code>: Matrix operations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">delete_diagonal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">expand_outer</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">invert_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recondition_eigenspaces</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">squareform</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sym2vec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmetric</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vec2sym</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>: Positive semidefinite cone", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cone_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_euc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_geom_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_harm_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mean_logeuc_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tangent_project_spd</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere</span></code>: Spherical coordinates", "<code class=\"docutils literal notranslate\"><span class=\"pre\">euclidean_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spatial_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_latlong</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sphere_to_normals</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_conv</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">spherical_geodesic</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>: Sylo function", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>: Symmetric matrix maps", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symexp</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symlog</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symmap</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">symsqrt</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv</span></code>: Time series convolution", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basischan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">basisconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polychan</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">polyconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">tsconv2d</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">utils</span></code>: Miscellaneous", "<code class=\"docutils literal notranslate\"><span class=\"pre\">apply_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_decompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">complex_recompose</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">conform_mask</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">wmean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas initialisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasInit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CortexSubcortexCIfTIAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitBaseAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitSurfaceAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DirichletInitVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DiscreteVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultifileVolumetricAtlas</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlasmixins</span></code>: Atlas mixins", "<code class=\"docutils literal notranslate\"><span class=\"pre\">base</span></code>: Base initialisations", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ConstantInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DistributionInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">DomainInitialiser</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">constant_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">from_distr_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">identity_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">deltaplus</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">dirichlet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domain</span></code>: Domain mappers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeAtanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AmplitudeMultiLogit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Atanh</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Logit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultiLogit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">domainbase</span></code>: Domain mapper base classes", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Affine</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Clip</span></code>: OOD handler", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Identity</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Linear</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Normalise</span></code>: OOD handler", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_Domain</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_PhaseAmplitudeDomain</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency band init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">FreqFilterSpec</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">clamp_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter_init_</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter init", "<code class=\"docutils literal notranslate\"><span class=\"pre\">laplace</span></code>", "Mask logic", "<code class=\"docutils literal notranslate\"><span class=\"pre\">mpbl</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SemidefiniteMean</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangencyInit</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">toeplitz</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossApply</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ReducingLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchCorrelation</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">QCFC</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">auto_tol</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Compactness</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HemisphericTether</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">determinant</span></code>: Log determinant-based losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VectorDispersion</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Entropy</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxEntropy</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Equilibrium</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxEquilibrium</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HingeLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">JSDivergence</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">SoftmaxJSDivergence</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ModularityLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MultivariateKurtosis</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">NormedLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnilateralNormedLoss</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LossScheme</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">secondmoment</span></code>: Second moment-based losses", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SmoothnessPenalty</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SymmetricBimodal</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">activation</span></code>: Activation functions as modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">CorrelationNorm</span></code>: Correlation normalisation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">atlas</span></code>: Atlas layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasAccumuline</span></code>: Linear atlas accumulator", "<code class=\"docutils literal notranslate\"><span class=\"pre\">AtlasLinear</span></code>: Linear atlas layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">cov</span></code>: Covariance modules", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BinaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovariance</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceTW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">UnaryCovarianceUW</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">_Cov</span></code>: Covariance base class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">freqfilter</span></code>: Frequency-domain filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">iirfilter</span></code>: IIR filter layer", "<code class=\"docutils literal notranslate\"><span class=\"pre\">interpolate</span></code>: Interpolation layers", "<code class=\"docutils literal notranslate\"><span class=\"pre\">HybridInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SpectralInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">WeightedInterpolate</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">QueryEncoder</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Recombinator</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Residualise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">select</span></code>: Model Selection", "<code class=\"docutils literal notranslate\"><span class=\"pre\">EliminationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">LinearCombinationSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ResponseFunctionLinearSelector</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">semidefinite</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">BatchTangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">TangentProject</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SPDNoise</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SVM</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Sylo</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">SyloResNet</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertcom</span></code>: Vertex compression", "<code class=\"docutils literal notranslate\"><span class=\"pre\">VerticalCompression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">vertical_compression</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">WindowAmplifier</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">data</span></code>: Data engineering", "Framework", "<code class=\"docutils literal notranslate\"><span class=\"pre\">engine</span></code>: Differentiable engine", "<code class=\"docutils literal notranslate\"><span class=\"pre\">eval</span></code>: Benchmarks and evaluation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">functional</span></code>: Functions and functionals", "Differentiable programming for brain mapping", "<code class=\"docutils literal notranslate\"><span class=\"pre\">init</span></code>: Initialisation schemes", "Installation", "<code class=\"docutils literal notranslate\"><span class=\"pre\">loss</span></code>: Loss and regularisation", "API reference", "<code class=\"docutils literal notranslate\"><span class=\"pre\">nn</span></code>: Neural network modules", "Poster landing page", "<code class=\"docutils literal notranslate\"><span class=\"pre\">viz</span></code>: Visualisation"], "terms": {"load": [0, 11, 15, 16, 18, 20, 24, 27, 82, 105, 107, 108, 110, 112, 113, 114, 115, 145, 170], "conform": [0, 8, 21, 45, 67, 70, 94, 103, 151, 165, 186], "neuroimag": [0, 4, 5, 6, 7, 14, 16, 24, 25, 26, 105, 177, 212, 218], "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 43, 45, 50, 51, 58, 59, 60, 70, 72, 81, 82, 85, 87, 93, 94, 95, 96, 97, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 123, 124, 136, 144, 145, 151, 154, 172, 179, 180, 181, 182, 183, 184, 185, 186, 200, 201, 202, 217, 221], "The": [0, 9, 11, 15, 17, 24, 26, 27, 28, 29, 31, 32, 35, 38, 40, 41, 42, 44, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 60, 63, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 82, 85, 87, 95, 97, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 120, 123, 124, 126, 127, 128, 129, 130, 136, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 172, 179, 180, 181, 182, 183, 184, 186, 194, 197, 201, 203, 204, 206, 212, 217, 218, 220], "refer": [0, 4, 5, 9, 10, 11, 12, 13, 24, 25, 26, 34, 74, 79, 87, 105, 107, 108, 110, 111, 112, 113, 114, 115, 201, 202, 206, 212, 216, 217], "retriev": [0, 24, 28, 212], "util": [0, 6, 24, 100, 101, 102, 103, 104, 216, 221], "written": 0, "assumpt": [0, 160], "input": [0, 5, 6, 9, 10, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 104, 105, 115, 123, 124, 127, 130, 133, 134, 136, 141, 142, 144, 146, 148, 149, 151, 152, 157, 159, 161, 162, 165, 167, 168, 169, 170, 171, 177, 179, 180, 181, 182, 183, 184, 186, 194, 197, 198, 201, 202, 203, 204, 206, 210, 218, 220], "path": [0, 2, 4, 5, 8, 10, 15, 16, 17, 18, 20, 25, 107, 108, 110, 112, 113, 114, 115, 212, 218], "deriv": [0, 28, 29, 39, 185, 202, 204, 206], "dataset": [0, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 23, 25, 26, 27, 58, 60, 82, 94, 95, 96, 97, 136, 149, 170, 186, 202, 204, 206, 212, 221], "creat": [0, 4, 5, 6, 10, 17, 19, 21, 24, 25, 26, 28, 58, 60, 70, 87, 94, 96, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 145, 151, 212], "fmriprep": [0, 4, 5, 24], "recommend": [0, 5, 17, 24, 25, 89, 161, 212, 219], "us": [0, 5, 6, 8, 9, 10, 11, 13, 14, 15, 19, 20, 24, 25, 26, 28, 29, 33, 35, 38, 43, 50, 51, 55, 56, 58, 59, 60, 63, 66, 70, 72, 74, 76, 79, 81, 82, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 136, 137, 138, 140, 142, 143, 144, 145, 146, 148, 149, 151, 152, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 172, 177, 179, 180, 181, 182, 183, 184, 186, 187, 195, 197, 201, 202, 204, 206, 212, 217, 218, 219, 220], "first": [0, 6, 16, 24, 27, 28, 29, 41, 51, 59, 60, 66, 70, 71, 87, 95, 97, 126, 127, 128, 129, 130, 136, 137, 138, 140, 141, 143, 146, 150, 151, 159, 161, 197, 206, 212, 223], "through": [0, 24, 27, 28, 33, 56, 65, 91, 107, 119, 124, 158, 159, 165, 177, 197, 201, 202, 204, 218, 220], "fmriprep_refer": [0, 10, 212], "function": [0, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 144, 146, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 183, 184, 186, 194, 197, 204, 206, 207, 212, 217, 218, 220, 221, 222, 223], "call": [0, 4, 6, 9, 19, 21, 24, 26, 28, 29, 106, 115, 119, 140, 145, 169, 204, 207, 212, 220], "pass": [0, 4, 9, 13, 24, 26, 27, 28, 29, 50, 51, 55, 56, 63, 73, 87, 95, 97, 115, 119, 140, 143, 153, 157, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 172, 194, 197, 204, 206, 212, 220], "make_wd": [0, 24, 212], "A": [0, 4, 5, 8, 9, 13, 24, 25, 26, 33, 38, 54, 55, 56, 58, 60, 62, 64, 65, 74, 76, 79, 90, 91, 92, 94, 96, 99, 119, 140, 141, 142, 148, 157, 159, 161, 162, 165, 170, 177, 179, 180, 181, 182, 183, 184, 186, 192, 201, 202, 204, 206, 209], "fmriprepdataset": [0, 212], "class": [0, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 23, 26, 28, 29, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 197, 198, 199, 203, 204, 206, 207, 211, 218, 221, 222], "also": [0, 6, 9, 20, 26, 28, 29, 33, 48, 63, 87, 107, 115, 160, 165, 170, 194, 203, 204, 206, 207, 218, 220, 223], "exist": [0, 8, 27, 99, 105, 106, 111, 115, 165, 218], "port": [0, 217], "webdataset": [0, 5, 6, 11, 25, 212], "yield": [0, 54, 140, 142, 177, 186], "far": [0, 28, 29], "superior": 0, "perform": [0, 28, 29, 39, 43, 45, 51, 82, 95, 97, 115, 169, 179, 180, 181, 182, 183, 184, 188, 204], "gener": [0, 4, 5, 10, 14, 24, 25, 27, 41, 43, 45, 63, 87, 89, 105, 109, 136, 172, 177, 180, 183, 204, 206, 212, 218], "ciftifi": 0, "compat": [0, 28, 33, 123, 124, 144, 151, 172, 212, 218], "like": [0, 2, 11, 13, 24, 25, 27, 39, 85, 87, 105, 115, 150, 159, 161, 204, 206, 212, 223], "absent": 0, "thi": [0, 4, 5, 6, 8, 9, 10, 14, 17, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 41, 43, 45, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 97, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 124, 127, 130, 136, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 197, 201, 202, 203, 204, 206, 207, 209, 210, 212, 217, 218, 220, 223], "should": [0, 4, 5, 6, 8, 9, 10, 20, 25, 26, 28, 29, 43, 50, 51, 55, 56, 58, 59, 65, 68, 69, 70, 71, 74, 79, 87, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 133, 136, 140, 141, 143, 144, 146, 151, 156, 157, 159, 161, 162, 165, 169, 172, 177, 179, 180, 181, 182, 183, 184, 186, 194, 203, 204, 206, 207, 210], "develop": [0, 14, 217], "prioriti": 0, "given": [0, 15, 28, 40, 42, 44, 53, 55, 56, 59, 74, 79, 94, 124, 154, 157, 170, 201, 202], "great": [0, 27, 82, 86], "deal": 0, "ha": [0, 12, 13, 28, 35, 45, 51, 65, 70, 76, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 127, 128, 129, 130, 148, 151, 159, 161, 162, 166, 177, 219], "oper": [0, 19, 20, 27, 28, 29, 33, 34, 51, 59, 64, 65, 72, 73, 76, 80, 87, 91, 115, 140, 141, 145, 148, 150, 152, 153, 159, 162, 165, 167, 168, 170, 195, 201, 202, 205, 216, 221], "under": [0, 27, 29, 53, 56, 115, 119, 126, 127, 128, 129, 130, 132, 135, 137, 138, 165, 179, 180, 182, 183], "cifti": [0, 20, 105, 108, 110, 115], "current": [0, 4, 5, 8, 9, 10, 24, 25, 26, 27, 28, 29, 58, 60, 64, 73, 82, 95, 97, 105, 115, 122, 124, 140, 146, 150, 158, 160, 167, 180, 183, 187, 201, 204, 212, 217, 219], "we": [0, 6, 20, 27, 28, 29, 41, 72, 86, 105, 119, 127, 130, 150, 162, 165, 170, 195, 197, 204, 212, 223], "acquir": 0, "an": [0, 6, 9, 15, 17, 18, 23, 26, 27, 28, 29, 36, 38, 41, 43, 45, 55, 58, 63, 66, 74, 76, 79, 82, 85, 87, 91, 100, 105, 106, 107, 108, 109, 110, 111, 115, 119, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 148, 150, 151, 153, 157, 158, 159, 161, 165, 170, 177, 179, 180, 181, 182, 183, 184, 186, 187, 197, 201, 202, 206, 207, 209, 212, 218, 223], "intern": [0, 13, 28, 29, 119, 159, 170, 179, 180, 182, 183, 185, 197, 218], "lightgrabb": 0, "d": [0, 36, 38, 64, 74, 75, 76, 77, 78, 79, 82, 85, 89, 90, 91, 92, 105, 157, 160, 166, 177, 186, 204, 223], "eventu": [0, 8, 105, 217, 218], "actual": [0, 106, 119, 120, 140, 170, 185, 212], "bidslayout": 0, "from": [0, 2, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 25, 26, 28, 29, 33, 34, 35, 41, 58, 59, 62, 63, 66, 68, 70, 71, 72, 73, 74, 79, 83, 84, 86, 87, 90, 91, 92, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 123, 124, 140, 141, 142, 144, 146, 149, 150, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 177, 179, 180, 181, 182, 183, 184, 186, 197, 201, 202, 203, 206, 216, 217, 219, 220, 223], "pybid": [0, 212], "robust": [0, 105, 177, 201], "lightbidslayout": [0, 212], "bidsobjectfactori": [0, 212], "lightbidsobject": [0, 1, 212], "hypercoil": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 210, 211, 216, 217, 219], "bid": [1, 2, 3, 4, 5, 10, 212, 221], "factori": [1, 8, 9, 26], "produc": [1, 8, 9, 10, 15, 21, 26, 63, 119, 167, 168, 179, 180, 181, 182, 183, 184, 198, 203], "thin": [1, 3, 155, 198], "wrapper": [1, 3, 152, 153, 155, 161, 198, 220], "around": [1, 3, 34, 155, 157, 198, 216], "variablefactori": [1, 9, 26], "consult": [1, 3, 40, 41, 42, 44, 45, 46, 47, 48, 140, 143, 185, 186], "further": [1, 3, 9, 27, 28, 72, 123, 124, 144, 151, 186, 223], "document": [1, 3, 4, 8, 9, 12, 13, 23, 28, 29, 40, 41, 42, 44, 45, 46, 47, 48, 72, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 140, 143, 144, 151, 157, 158, 159, 160, 161, 162, 164, 165, 170, 172, 185, 186, 217, 223], "root": [2, 23, 33, 74, 79, 88, 92, 150, 203], "queri": [2, 8, 9, 10, 26, 193], "lightweight": 2, "minim": [2, 127, 130, 217], "datagrabb": 2, "inspir": [2, 59, 212], "paramet": [2, 4, 5, 8, 9, 10, 13, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 186, 194, 197, 198, 201, 202, 203, 204, 206, 207, 210, 218], "str": [2, 4, 5, 8, 10, 16, 18, 21, 23, 25, 33, 72, 107, 108, 110, 111, 112, 113, 114, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172], "directori": [2, 4, 5, 8, 9, 10, 23, 25, 26], "file": [2, 4, 5, 10, 16, 18, 20, 23, 24, 25, 105, 108, 110, 112, 113, 114, 115, 212], "system": [2, 16, 80, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 157], "pattern": [2, 4, 8, 23, 185, 212], "list": [2, 4, 5, 8, 9, 10, 13, 17, 19, 21, 23, 25, 26, 29, 82, 94, 140, 141, 142, 144, 149, 186, 201, 202, 204], "string": [2, 4, 5, 17, 19, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172], "constrain": [2, 5, 25, 119, 123, 124, 126, 128, 129, 137, 138, 140, 142, 144, 146, 151, 161, 162, 165, 177, 179, 180, 182, 183, 186, 206, 218], "scope": 2, "layout": [2, 8, 9, 10, 23, 26, 212], "If": [2, 8, 9, 12, 13, 17, 19, 20, 21, 26, 28, 33, 35, 36, 38, 43, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 66, 67, 70, 72, 74, 76, 79, 82, 85, 86, 87, 90, 92, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 122, 123, 124, 136, 140, 143, 144, 145, 146, 148, 150, 151, 154, 157, 165, 167, 168, 177, 179, 180, 181, 182, 183, 184, 186, 187, 194, 197, 201, 202, 204, 206, 210, 218, 223], "ar": [2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 26, 27, 28, 29, 32, 35, 36, 38, 48, 53, 54, 55, 56, 58, 59, 60, 66, 70, 72, 74, 76, 79, 82, 85, 86, 87, 90, 91, 92, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 144, 146, 148, 149, 150, 151, 152, 154, 155, 157, 159, 160, 161, 162, 165, 168, 170, 177, 179, 180, 181, 182, 183, 184, 186, 195, 197, 201, 202, 204, 206, 210, 212, 216, 217, 218, 223], "provid": [2, 8, 9, 15, 17, 26, 28, 33, 35, 50, 51, 56, 59, 63, 82, 86, 87, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 140, 141, 142, 143, 146, 165, 179, 180, 181, 182, 183, 185, 186, 204, 218, 220], "includ": [2, 4, 5, 6, 9, 10, 13, 23, 25, 26, 45, 58, 60, 68, 71, 82, 85, 94, 95, 96, 97, 105, 107, 115, 126, 127, 128, 129, 130, 142, 153, 159, 162, 177, 179, 180, 181, 182, 183, 184, 212, 217], "ani": [2, 4, 5, 9, 10, 15, 16, 19, 20, 21, 23, 25, 26, 28, 29, 34, 35, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 58, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 123, 124, 126, 127, 128, 129, 130, 136, 137, 138, 140, 144, 145, 146, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 186, 197, 198, 201, 202, 203, 216, 218], "do": [2, 20, 28, 91, 103, 105, 119, 140, 150, 177, 180, 183, 204], "match": [2, 8, 10, 21, 23, 140, 144, 212], "least": [2, 66, 72, 146, 195], "one": [2, 6, 13, 17, 27, 28, 29, 41, 65, 105, 140, 143, 146, 149, 154, 158, 160, 162, 165, 169, 179, 180, 181, 197, 202, 204], "dataqueri": [2, 7, 10, 212], "object": [2, 5, 6, 8, 9, 10, 11, 13, 17, 21, 23, 25, 26, 28, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119, 121, 123, 124, 126, 127, 128, 129, 130, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 186, 201, 202, 212, 220], "defin": [2, 27, 28, 29, 35, 38, 40, 41, 42, 44, 54, 55, 56, 60, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 157, 158, 159, 160, 161, 162, 165, 167, 168, 169, 171, 206, 212], "variabl": [2, 4, 5, 8, 9, 10, 17, 25, 26, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 72, 94, 95, 96, 97, 166, 179, 180, 181, 182, 183, 184, 186, 197, 204, 207, 212], "extract": [2, 27, 177], "via": [2, 4, 5, 9, 10, 19, 21, 25, 40, 42, 44, 46, 47, 49, 50, 51, 66, 72, 74, 76, 79, 87, 95, 97, 148, 170, 177, 186], "name": [3, 8, 9, 10, 15, 16, 21, 23, 26, 29, 107, 108, 109, 110, 111, 112, 113, 114, 115, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 192, 212], "regex": 3, "metadata": [3, 14, 15, 16, 20, 24, 212], "none": [3, 4, 5, 6, 8, 9, 10, 15, 17, 19, 21, 25, 26, 28, 29, 33, 35, 36, 37, 38, 43, 45, 53, 55, 56, 58, 60, 63, 70, 81, 82, 85, 86, 87, 95, 97, 98, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 193, 194, 197, 198, 199, 201, 202, 204, 206, 207, 209, 210], "metadata_glob": 3, "metadata_loc": 3, "datapathvari": 3, "fmriprep_dir": [4, 5], "space": [4, 5, 36, 38, 76, 82, 85, 105, 107, 115, 127, 130, 148, 157, 158, 179, 180, 181, 182, 183, 184, 201, 202], "additional_t": [4, 5, 10, 25], "ignor": [4, 5, 10, 25, 29, 70, 151, 169, 179, 180, 181, 182, 183, 184], "label": [4, 5, 9, 10, 15, 25, 26, 58, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 177], "subject": [4, 5, 10, 11, 23, 25, 26, 27, 87, 218], "outcom": [4, 5, 9, 10, 25, 26, 161], "model": [4, 5, 10, 15, 24, 25, 27, 28, 29, 54, 55, 56, 108, 110, 115, 158, 165, 179, 180, 181, 182, 183, 184, 197, 198, 199, 201, 204, 207, 218, 219, 220, 221, 222], "tmask": [4, 5, 25, 59], "observ": [4, 5, 6, 9, 10, 25, 26, 41, 43, 45, 46, 47, 50, 51, 58, 59, 60, 72, 82, 85, 94, 95, 96, 97, 136, 148, 156, 160, 165, 170, 179, 180, 181, 182, 183, 184, 186, 197, 198, 204, 212], "level": [4, 5, 8, 9, 10, 11, 12, 13, 17, 25, 26, 27, 154, 156], "session": [4, 5, 10, 11, 25], "run": [4, 5, 10, 23, 25, 26, 27, 29, 76, 82, 85, 146, 148, 169], "task": [4, 5, 6, 10, 25], "depth": [4, 9, 11, 12, 13, 26], "0": [4, 5, 6, 13, 22, 25, 28, 38, 43, 45, 58, 59, 65, 68, 70, 71, 74, 75, 76, 77, 78, 79, 90, 91, 92, 109, 110, 111, 112, 115, 119, 120, 123, 127, 129, 130, 132, 134, 137, 138, 140, 142, 143, 144, 146, 148, 149, 150, 151, 154, 155, 156, 157, 159, 162, 165, 166, 172, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 193, 197, 199, 201, 202, 204, 206, 207, 211], "base": [4, 6, 12, 13, 16, 17, 23, 26, 59, 105, 107, 108, 109, 111, 115, 117, 118, 119, 120, 121, 122, 150, 152, 153, 156, 167, 171, 172, 178, 204, 207, 218, 220, 221, 222], "referenceddataset": [4, 11, 12, 26, 212], "referenc": [4, 5, 13, 212, 221], "output": [4, 10, 14, 15, 21, 27, 28, 29, 31, 32, 33, 35, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 66, 69, 70, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 140, 142, 144, 145, 146, 150, 152, 153, 157, 167, 168, 170, 179, 180, 181, 182, 183, 184, 186, 194, 197, 198, 201, 202, 203, 206, 220], "top": [4, 5, 10, 25, 26], "contain": [4, 5, 8, 9, 10, 15, 16, 18, 19, 20, 21, 25, 26, 28, 29, 35, 36, 41, 43, 45, 72, 82, 83, 84, 85, 86, 94, 96, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 141, 154, 155, 160, 161, 162, 177, 179, 180, 181, 182, 183, 184, 186, 207, 212, 218], "all": [4, 5, 6, 8, 9, 10, 14, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 35, 41, 45, 46, 47, 53, 54, 56, 58, 59, 65, 66, 73, 74, 76, 79, 90, 91, 92, 95, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 144, 145, 148, 159, 161, 162, 165, 169, 186, 201, 202, 204, 206, 207, 216, 218, 220], "preprocess": [4, 5], "default": [4, 5, 8, 10, 13, 15, 16, 19, 21, 25, 29, 33, 35, 36, 38, 43, 53, 55, 56, 58, 59, 60, 63, 68, 69, 70, 71, 72, 82, 84, 85, 86, 87, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 123, 124, 126, 127, 128, 129, 130, 140, 142, 143, 144, 145, 146, 148, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 186, 194, 197, 204, 206, 218], "indic": [4, 5, 10, 13, 16, 17, 19, 25, 28, 34, 38, 43, 53, 55, 56, 58, 59, 60, 69, 72, 83, 84, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 133, 136, 140, 144, 165, 177, 179, 180, 181, 182, 183, 184, 203, 204], "stereotax": [4, 5], "coordin": [4, 5, 34, 37, 38, 82, 83, 84, 85, 86, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 144, 157, 160, 177, 216, 221], "which": [4, 5, 6, 11, 12, 13, 25, 27, 28, 29, 33, 35, 38, 53, 54, 55, 56, 58, 59, 66, 69, 74, 75, 76, 77, 78, 79, 82, 85, 91, 95, 97, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 121, 123, 124, 127, 130, 140, 144, 148, 149, 150, 151, 153, 154, 155, 156, 159, 161, 162, 165, 167, 168, 170, 171, 177, 186, 201, 202, 204, 212], "imag": [4, 5, 105, 106, 107, 109, 112, 113, 114, 115, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 145, 177], "addit": [4, 5, 6, 8, 10, 13, 15, 16, 20, 24, 25, 27, 29, 30, 50, 51, 55, 56, 70, 91, 95, 97, 115, 119, 150, 151, 165, 169, 179, 180, 181, 182, 183, 184, 203], "each": [4, 5, 6, 9, 10, 13, 15, 17, 19, 21, 25, 26, 27, 28, 29, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 66, 68, 70, 72, 74, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 142, 144, 146, 149, 151, 154, 155, 157, 158, 159, 161, 162, 164, 165, 170, 177, 179, 180, 181, 182, 183, 184, 186, 201, 202, 203, 204, 206, 212, 220], "index": [4, 5, 9, 10, 15, 17, 25, 26, 162, 186], "column": [4, 5, 9, 10, 15, 25, 26, 36, 38, 63, 64, 70, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 151, 157, 162, 170, 180, 183, 206, 210, 218], "correspond": [4, 5, 9, 10, 12, 13, 15, 25, 26, 28, 29, 33, 34, 36, 38, 41, 43, 45, 50, 51, 54, 55, 60, 63, 70, 82, 95, 96, 97, 105, 108, 110, 112, 119, 140, 148, 151, 157, 158, 159, 161, 162, 167, 168, 170, 171, 172, 179, 180, 181, 182, 183, 184, 197, 212], "identifi": [4, 5, 8, 9, 10, 23, 25, 26, 66, 105, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172], "present": [4, 5, 9, 10, 25, 26, 107, 115, 218, 223], "e": [4, 5, 10, 11, 23, 25, 28, 29, 36, 38, 43, 95, 97, 115, 126, 128, 129, 144, 155, 157, 162, 165, 170, 179, 180, 181, 182, 183, 184, 212], "g": [4, 5, 10, 11, 23, 25, 28, 36, 38, 155, 162, 170, 179, 180, 181, 182, 183, 184, 212], "etc": [4, 5, 10, 25, 167, 168, 171, 172, 179, 180, 182, 183, 207], "dict": [4, 5, 8, 9, 10, 16, 18, 20, 25, 26, 29, 106, 107, 108, 109, 110, 111, 112, 113, 114, 140, 194, 206], "dictionari": [4, 5, 8, 9, 10, 15, 16, 17, 18, 20, 25, 26, 29, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 194, 206], "doesn": [4, 5, 10, 25, 120], "t": [4, 5, 8, 10, 15, 16, 20, 25, 28, 86, 120, 146, 150, 156, 170, 186, 197, 198, 201], "support": [4, 5, 10, 25, 28, 56, 80, 93, 131, 140, 165, 178, 181, 184, 196, 204, 219], "logic": [4, 5, 10, 25, 115, 218, 221], "composit": [4, 5, 10, 25], "take": [4, 5, 8, 10, 23, 25, 28, 29, 34, 82, 87, 105, 115, 119, 150, 159, 169, 179, 182, 186, 197, 212], "OR": [4, 5, 10, 25], "over": [4, 5, 10, 11, 25, 27, 28, 29, 59, 60, 75, 76, 77, 78, 89, 94, 95, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 148, 149, 154, 157, 159, 161, 162, 165, 167, 168, 171, 177, 186, 218, 220], "specif": [4, 5, 10, 15, 21, 24, 25, 26, 35, 37, 39, 58, 95, 97, 140, 141, 142, 143, 149, 185, 186, 202], "In": [4, 5, 6, 9, 10, 24, 25, 26, 27, 43, 72, 76, 82, 87, 91, 105, 136, 146, 148, 157, 159, 170, 179, 180, 181, 182, 183, 184, 195, 202, 212, 218, 223], "other": [4, 5, 9, 10, 25, 28, 41, 46, 47, 63, 82, 87, 93, 111, 122, 152, 157, 158, 160, 162, 168, 206, 207, 220], "word": [4, 5, 10, 25], "thei": [4, 5, 9, 10, 11, 19, 20, 21, 25, 28, 58, 59, 60, 66, 99, 177, 218], "satisfi": [4, 5, 10, 25, 177, 204, 206], "criteria": [4, 5, 10, 25], "tupl": [4, 5, 9, 10, 25, 26, 28, 69, 70, 83, 84, 95, 97, 123, 140, 143, 146, 172, 206], "categor": [4, 5, 9, 10, 17, 25, 26, 110, 111, 124, 161], "These": [4, 5, 10, 11, 25, 105, 115, 140, 162, 180, 183, 186, 220], "can": [4, 5, 6, 9, 10, 13, 15, 17, 19, 20, 21, 25, 26, 27, 28, 29, 33, 35, 41, 43, 46, 47, 50, 51, 59, 63, 70, 72, 74, 76, 79, 82, 85, 87, 90, 91, 92, 95, 97, 99, 105, 106, 107, 115, 119, 122, 123, 124, 136, 140, 141, 142, 144, 148, 149, 150, 151, 152, 157, 158, 159, 160, 161, 162, 165, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 186, 201, 202, 204, 206, 207, 210, 212, 218, 220], "taken": [4, 5, 10, 25], "either": [4, 5, 10, 25, 28, 59, 60, 67, 76, 105, 115, 137, 138, 148, 162, 172, 179, 180, 181, 186, 204, 206, 210, 218], "tabl": [4, 5, 10, 25], "becom": [4, 5, 10, 25, 76, 148, 159, 161, 204], "avail": [4, 5, 10, 20, 25, 34, 48, 107, 115, 159, 170, 179, 180, 181, 182, 183, 184, 204, 206, 217, 218], "predict": [4, 5, 10, 25], "target": [4, 5, 10, 25, 201, 202], "classif": [4, 5, 10, 25, 204], "By": [4, 5, 13, 25, 29, 43, 55, 56, 58, 60, 68, 69, 71, 107, 108, 110, 112, 113, 114, 140, 159, 161, 165, 179, 180, 181, 182, 183, 184, 186, 204], "continu": [4, 5, 9, 10, 25, 26, 105, 107, 113, 114, 115, 145], "regress": [4, 5, 10, 25, 179, 180, 181, 196], "formula": [4, 5, 25, 28], "express": [4, 5, 25, 86, 115, 157], "repres": [4, 5, 8, 10, 17, 25, 28, 74, 79, 142, 161, 165, 170, 177, 207], "confound": [4, 5, 24, 25, 41, 179, 180, 181, 196, 212], "For": [4, 5, 6, 8, 11, 25, 26, 27, 28, 29, 43, 54, 55, 88, 91, 95, 97, 105, 110, 111, 115, 119, 123, 124, 130, 140, 142, 144, 151, 159, 161, 162, 165, 172, 179, 180, 181, 182, 183, 184, 206, 209, 218, 219, 220], "exampl": [4, 5, 9, 25, 27, 119, 153, 162, 207, 217, 218, 219], "36": [4, 5, 25], "expand": [4, 5, 25, 63, 87, 94, 96, 97, 150, 206, 223], "specifi": [4, 5, 8, 9, 10, 13, 15, 16, 17, 20, 21, 22, 23, 25, 26, 28, 29, 33, 35, 36, 38, 43, 58, 60, 63, 66, 69, 70, 76, 87, 90, 91, 92, 94, 95, 96, 97, 102, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 133, 136, 140, 142, 143, 144, 145, 146, 148, 149, 151, 156, 157, 161, 162, 167, 168, 170, 171, 177, 179, 180, 181, 182, 183, 184, 186, 204, 206, 216], "dd1": [4, 5, 25], "rp": [4, 5, 25, 140, 143], "wm": [4, 5, 25], "csf": [4, 5, 25], "gsr": [4, 5, 25], "2": [4, 5, 25, 27, 28, 29, 35, 38, 43, 50, 51, 63, 65, 68, 69, 70, 71, 74, 79, 83, 84, 85, 86, 87, 95, 96, 97, 123, 140, 146, 150, 156, 157, 158, 162, 166, 167, 168, 170, 171, 172, 179, 180, 181, 182, 183, 184, 197, 201, 202, 206], "tempor": [4, 5, 6, 25, 43, 177, 179, 180, 181, 182, 183, 184], "mask": [4, 5, 6, 25, 58, 60, 100, 103, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 141, 177, 179, 180, 181, 182, 183, 184, 186, 218, 221], "instanc": [4, 5, 6, 25, 26, 29, 43, 55, 56, 63, 70, 74, 79, 87, 91, 105, 106, 107, 113, 114, 115, 123, 124, 136, 140, 144, 146, 151, 155, 160, 165, 169, 172, 177, 179, 180, 181, 182, 183, 184, 206, 210, 218, 220], "uthr0": [4, 5, 25], "5": [4, 5, 25, 129, 140, 197, 207], "fd": [4, 5, 25], "uthr1": [4, 5, 25], "dv": [4, 5, 25], "result": [4, 5, 8, 9, 25, 26, 54, 55, 56, 59, 66, 72, 86, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 130, 133, 136, 144, 146, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 177, 194, 195, 197, 203], "time": [4, 5, 6, 14, 20, 25, 39, 40, 42, 43, 44, 50, 51, 53, 54, 56, 58, 59, 60, 87, 95, 97, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 146, 159, 162, 165, 170, 177, 179, 180, 181, 182, 183, 184, 186, 194, 197, 198, 204, 209, 210, 212, 216, 221, 223], "point": [4, 5, 6, 25, 37, 38, 39, 59, 60, 74, 76, 79, 82, 83, 84, 85, 86, 107, 108, 109, 110, 111, 112, 113, 114, 133, 140, 141, 144, 145, 148, 149, 157, 162, 177, 179, 180, 181, 182, 183, 184, 186, 197, 198, 201, 202, 218, 220], "less": [4, 5, 25, 58, 59, 76, 133, 145, 148], "than": [4, 5, 9, 21, 25, 26, 27, 38, 58, 59, 66, 76, 115, 119, 133, 136, 145, 148, 160, 161, 167, 168, 179, 180, 181, 182, 183, 184, 197], "framewis": [4, 5, 25], "displac": [4, 5, 25, 34, 157, 158, 216], "1": [4, 5, 22, 25, 27, 28, 29, 35, 38, 41, 43, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 68, 69, 71, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 90, 91, 92, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 119, 122, 123, 124, 126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 140, 142, 143, 144, 145, 146, 148, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 197, 201, 202, 203, 204, 206, 207, 211], "standardis": [4, 5, 14, 25, 170, 212], "dvar": [4, 5, 25], "whose": [4, 5, 8, 9, 10, 17, 25, 26, 31, 32, 35, 36, 41, 58, 59, 70, 83, 95, 97, 105, 107, 108, 110, 111, 112, 113, 114, 115, 119, 133, 136, 140, 142, 146, 155, 159, 160, 162, 165, 167, 168, 170, 202, 206, 212], "packag": [4, 5, 9, 10, 25, 26, 204, 212, 220], "separ": [4, 5, 10, 25, 26, 35, 41, 59, 82, 85, 105, 115, 140, 159, 160, 161, 197], "have": [4, 5, 6, 8, 10, 20, 25, 27, 28, 56, 65, 72, 119, 120, 124, 127, 130, 140, 142, 153, 154, 155, 157, 159, 165, 170, 195, 204, 206, 207, 223], "same": [4, 5, 6, 10, 25, 31, 32, 33, 53, 54, 55, 56, 58, 59, 63, 66, 70, 76, 87, 94, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 119, 140, 143, 148, 149, 151, 158, 165, 170, 181, 184, 201, 202, 210], "valu": [4, 5, 6, 9, 10, 14, 17, 18, 21, 23, 25, 26, 28, 31, 32, 35, 43, 53, 55, 56, 58, 59, 60, 65, 66, 70, 74, 76, 79, 82, 83, 84, 90, 91, 92, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 133, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 151, 154, 156, 157, 159, 165, 166, 167, 171, 172, 177, 179, 180, 181, 182, 183, 184, 186, 197, 201, 202, 204, 206, 212, 220], "sublevel": [4, 5, 10, 25], "permit": [4, 5, 10, 25, 95, 97, 133, 136, 179, 180, 182, 183], "easier": [4, 5, 10, 25], "augment": [4, 5, 10, 25, 179, 180, 181, 182, 183, 184, 199, 201], "pool": [4, 5, 10, 25], "across": [4, 5, 10, 25, 26, 27, 35, 58, 59, 63, 69, 94, 95, 96, 97, 113, 114, 115, 144, 162, 177, 186, 197], "int": [4, 13, 21, 43, 58, 60, 68, 69, 70, 71, 75, 76, 77, 78, 82, 85, 96, 107, 108, 109, 110, 111, 112, 113, 114, 124, 127, 130, 140, 143, 146, 148, 156, 161, 162, 167, 168, 171, 177, 179, 180, 181, 182, 183, 184, 186, 194, 197, 198, 204, 206], "sampl": [4, 5, 12, 13, 25, 26, 27, 28, 41, 43, 45, 59, 74, 79, 90, 91, 92, 105, 109, 110, 111, 115, 121, 123, 124, 140, 143, 144, 177, 197, 202, 203], "nest": [4, 12, 13, 23, 26, 115, 207], "hierarch": [4, 13], "minibatch": [4, 13], "highest": [4, 13], "method": [4, 6, 8, 9, 10, 12, 13, 23, 26, 28, 29, 57, 58, 59, 66, 85, 91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 145, 146, 148, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 164, 165, 167, 169, 170, 172, 174, 176, 177, 185, 186, 187, 189, 190, 191, 197, 198, 199, 203, 204, 206, 211], "add_data": [4, 13], "add": [4, 13, 43, 150, 154, 155, 179, 180, 181, 182, 183, 184, 194, 204, 206], "anoth": [4, 6, 41, 105, 107, 108, 109, 110, 111, 112, 113, 114, 149, 165, 177, 192, 202], "follow": [4, 10, 28, 29, 33, 47, 58, 65, 68, 71, 82, 107, 119, 140, 142, 166, 179, 180, 182, 183, 186, 187, 203, 212, 223], "constructor": [4, 115, 204], "dtype": [5, 21, 25, 70, 107, 108, 109, 110, 111, 112, 113, 114, 141, 156, 177, 179, 180, 181, 182, 183, 184, 186, 187, 193, 194, 197, 198, 199, 202, 206, 209], "devic": [5, 17, 21, 25, 70, 107, 108, 109, 110, 111, 112, 113, 114, 156, 177, 179, 180, 181, 182, 183, 184, 186, 187, 193, 194, 197, 198, 199, 202, 206, 209], "obtain": [5, 9, 10, 13, 15, 18, 20, 25, 40, 42, 43, 44, 46, 47, 82, 166, 179, 180, 181, 182, 183, 184], "process": [5, 24, 28, 29, 166, 186, 212], "torch": [5, 6, 21, 25, 27, 28, 29, 39, 50, 51, 72, 89, 91, 95, 97, 124, 141, 154, 157, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 195, 198, 207, 219], "datatyp": [5, 21, 25, 107, 108, 109, 110, 111, 112, 113, 114, 142], "datarefer": [5, 7, 10, 11, 13, 25, 26, 212], "creation": [5, 25, 107, 108, 112, 113, 114], "note": [5, 9, 17, 20, 25, 27, 51, 56, 66, 83, 84, 87, 90, 91, 92, 106, 115, 126, 127, 130, 136, 140, 142, 150, 154, 155, 160, 165, 167, 179, 180, 182, 183, 197, 204, 206, 219], "you": [5, 20, 25, 28, 82, 85, 91, 136, 154, 155, 186, 187, 204, 207, 223], "train": [5, 25, 177, 185, 204, 207, 212, 220], "strongli": [5, 11, 25], "type": [5, 6, 8, 9, 21, 25, 26, 28, 38, 107, 108, 110, 111, 112, 113, 114, 140, 143, 179, 180, 181, 182, 183, 184], "return": [5, 8, 9, 10, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 29, 31, 32, 33, 35, 36, 38, 41, 43, 50, 51, 53, 54, 55, 56, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 97, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 133, 134, 136, 140, 141, 142, 144, 145, 146, 149, 151, 153, 154, 155, 157, 159, 160, 161, 164, 165, 166, 167, 168, 170, 172, 195, 204, 207], "data_ref": [5, 10, 13, 25], "fmridatarefer": [5, 9, 25], "found": [5, 10, 25, 72, 149, 170, 195, 223], "patch": 6, "pytorch": [6, 21, 43, 121, 219], "s": [6, 8, 9, 12, 13, 15, 19, 20, 26, 27, 28, 29, 34, 35, 36, 38, 53, 56, 87, 94, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 126, 127, 128, 129, 130, 137, 138, 140, 141, 150, 154, 155, 157, 159, 162, 165, 177, 186, 197, 201, 212, 218, 223], "default_col": 6, "associ": [6, 82, 85, 115, 156, 157, 160, 165], "enabl": [6, 9, 24, 26, 27, 107, 108, 109, 110, 111, 112, 113, 114, 140, 206, 218, 220], "argument": [6, 8, 9, 15, 16, 20, 21, 26, 28, 29, 31, 32, 33, 34, 51, 58, 59, 60, 70, 74, 79, 105, 115, 117, 118, 119, 123, 126, 144, 149, 151, 171, 186], "typic": [6, 39, 58, 82, 88, 115], "when": [6, 9, 20, 26, 28, 56, 58, 59, 72, 76, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 124, 126, 127, 128, 129, 130, 140, 148, 158, 159, 161, 162, 165, 166, 170, 177, 195, 204, 206, 207, 212, 218], "tensor": [6, 14, 17, 19, 22, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 186, 194, 198, 201, 202, 203, 204, 206, 210, 212, 220], "form": [6, 8, 67, 68, 71, 74, 79, 102, 105, 198, 204, 212], "our": [6, 27, 28, 29, 170, 212, 213, 223], "gen_col": 6, "modifi": [6, 65, 66], "make": [6, 28, 51, 119, 159, 204], "itself": [6, 31, 32, 87, 105, 126, 128, 129, 159, 203], "set": [6, 8, 20, 28, 29, 33, 35, 41, 43, 45, 53, 54, 55, 56, 58, 59, 60, 68, 71, 86, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 122, 123, 140, 144, 145, 146, 154, 156, 157, 159, 160, 161, 165, 166, 168, 169, 170, 177, 179, 180, 181, 182, 183, 184, 186, 197, 201, 202, 204, 206, 212, 218], "stack": [6, 70, 87, 151, 206, 210, 217], "along": [6, 19, 21, 35, 41, 43, 45, 50, 51, 68, 70, 71, 76, 91, 100, 124, 127, 130, 144, 148, 161, 162, 165, 170, 171, 179, 180, 182, 183, 203], "new": [6, 8, 15, 16, 19, 21, 28, 76, 94, 96, 105, 146, 148, 201, 203, 204], "prepend": [6, 171], "axi": [6, 19, 21, 22, 34, 36, 41, 43, 45, 50, 51, 62, 70, 72, 75, 76, 77, 78, 95, 97, 100, 103, 108, 110, 124, 127, 130, 136, 144, 148, 151, 158, 161, 162, 165, 167, 168, 171, 179, 180, 181, 182, 183, 184], "With": [6, 115], "altern": [6, 26, 201, 202, 204], "extend_and_bind": 6, "design": [6, 87, 105, 115, 146, 157, 162, 212], "handl": [6, 35, 105, 126, 127, 128, 129, 130, 133, 137, 138, 212], "case": [6, 11, 15, 26, 27, 28, 29, 43, 55, 56, 72, 90, 91, 92, 105, 122, 146, 152, 157, 159, 162, 165, 170, 172, 179, 180, 181, 182, 183, 184, 195, 201, 202, 206, 212, 217, 218], "being": [6, 28, 68, 74, 79, 120, 159, 177], "might": [6, 9, 15, 26, 59, 82, 85, 91, 105, 119, 153, 159, 162, 170, 197, 201], "size": [6, 19, 21, 27, 41, 43, 45, 50, 51, 54, 55, 56, 58, 60, 70, 72, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 94, 95, 96, 97, 146, 150, 154, 165, 179, 180, 181, 182, 183, 184, 186, 201, 202, 203], "commonli": 6, "occur": [6, 58, 74, 79, 91, 159, 162], "differ": [6, 10, 21, 34, 50, 51, 53, 55, 56, 59, 70, 76, 97, 107, 108, 109, 110, 111, 112, 113, 114, 136, 146, 148, 149, 151, 152, 159, 165, 170, 171, 181, 184, 201, 202, 206], "acquisit": 6, "durat": [6, 166], "termin": [6, 28, 76, 148], "earli": 6, "pad": [6, 21, 95, 97, 98], "miss": [6, 14, 21, 58, 59, 60, 212], "until": [6, 19, 21, 60, 70, 177], "concaten": [6, 70, 151, 177], "them": [6, 9, 26, 29, 41, 58, 59, 60, 133, 159, 161, 165, 169, 185, 197, 207, 220], "wai": [6, 17, 27, 85, 87, 103, 119, 204, 207], "prefix": 6, "random": [6, 28, 29, 105, 110, 111, 123, 144, 146, 177, 203, 218], "window": [6, 14, 58, 60, 95, 97, 211, 212], "selector": [6, 152, 197], "transform": [6, 8, 9, 15, 17, 26, 31, 32, 58, 59, 74, 79, 87, 89, 90, 91, 92, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 124, 126, 127, 128, 129, 130, 132, 135, 137, 138, 140, 142, 144, 145, 146, 151, 161, 165, 167, 168, 177, 179, 180, 182, 183, 186, 209, 212, 218, 221], "sure": [6, 150], "appropri": [6, 72, 94, 119, 124, 177], "would": [6, 27, 105, 160, 204, 212, 223], "sens": [6, 28, 51], "replac": [6, 11, 16, 19, 35, 59, 63, 74, 76, 79, 87, 90, 91, 92, 148, 201, 202], "signal": [6, 39, 49, 50, 51, 140, 143, 175, 177, 218], "exclud": [6, 108, 110, 115, 144, 165, 168], "keep": 6, "code": [6, 115], "sync": 6, "could": [6, 51, 82, 86, 95, 97, 146, 155, 162], "failur": 6, "concat": 6, "built": 6, "concat_axi": 6, "basic": [6, 217], "stolen": 6, "adapt": [6, 187], "_util": 6, "py": 6, "out": [6, 20, 27, 28, 29, 31, 32, 41, 50, 51, 53, 54, 56, 63, 70, 82, 85, 87, 95, 96, 97, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 150, 165, 186, 194, 209, 210, 223], "interfac": [7, 28, 212, 216, 221], "between": [7, 27, 39, 41, 44, 45, 46, 47, 53, 54, 55, 56, 63, 67, 76, 82, 86, 87, 119, 126, 127, 128, 129, 130, 136, 140, 148, 149, 158, 159, 160, 165, 171, 179, 180, 181, 185, 200, 201, 202, 206], "loader": [7, 12, 115], "data_refer": [7, 9, 13, 26, 212], "dataref": [8, 9, 10, 212, 221], "templat": [8, 23, 63, 87, 109, 110, 150, 206], "filter": [8, 10, 23, 50, 59, 87, 139, 140, 141, 142, 152, 216, 218, 221, 222], "grabber": [8, 23, 212], "represent": [8, 107, 115, 119, 177, 206, 212], "filesystem": [8, 9, 14, 17, 26, 115, 212], "within": [8, 29, 35, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 157, 160, 169], "search": [8, 13, 106, 217], "subsequ": 8, "substanti": [8, 107, 108, 109, 110, 111, 112, 113, 114, 115, 217], "narrow": 8, "acceler": [8, 219], "variablefactoryfactori": 8, "child": [8, 145, 207], "datasetvari": [8, 9, 26], "suitabl": [8, 55, 56, 74, 76, 79, 90, 91, 92, 148, 165, 201, 202], "store": [8, 17, 28, 29, 102, 105, 112, 113, 114, 119, 177, 179, 180, 181, 185, 212, 218], "doe": [8, 19, 28, 29, 45, 67, 123, 127, 130, 142, 144, 151, 181, 184], "noth": [8, 19, 29, 111], "overrid": [8, 43, 179, 180, 181, 182, 183, 184], "now": [8, 20, 28, 29, 76, 82, 83, 84, 85, 99, 146, 148], "just": [8, 28, 86, 206], "write": [8, 212, 217], "ones": [8, 152], "don": [8, 20, 86, 150], "keyword": [8, 115], "onli": [8, 9, 16, 17, 18, 21, 27, 28, 29, 31, 32, 83, 84, 86, 107, 108, 109, 110, 111, 112, 113, 114, 140, 142, 143, 146, 152, 153, 154, 158, 177, 179, 180, 182, 183, 194, 197, 201, 204], "those": [8, 9, 27, 41, 59, 60, 70, 154, 155, 159, 179, 180, 181], "summari": [8, 9, 23, 87], "__call__": [8, 9, 106, 107, 108, 109, 110, 111, 112, 113, 114, 145], "param": [8, 28, 40, 41, 42, 44, 46, 47, 48, 50, 51, 55, 56, 95, 97, 98, 165], "submit": 8, "It": [8, 10, 20, 27, 28, 29, 39, 41, 46, 47, 56, 59, 60, 74, 76, 79, 82, 112, 115, 119, 148, 150, 159, 160, 162, 165, 186, 194, 204, 220], "must": [8, 10, 19, 28, 29, 43, 59, 87, 94, 102, 107, 113, 114, 119, 124, 140, 157, 177, 179, 180, 181, 182, 183, 184, 186, 187, 204, 206, 207], "implement": [8, 9, 10, 26, 27, 29, 43, 67, 73, 81, 85, 105, 107, 115, 140, 141, 142, 170, 177, 185, 186, 187, 204, 212, 220], "get": [8, 9, 10, 23, 86], "entri": [8, 9, 10, 17, 19, 21, 26, 33, 40, 42, 43, 44, 46, 47, 53, 56, 70, 101, 106, 115, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 151, 152, 155, 157, 165, 171, 179, 180, 181, 182, 183, 184, 203], "combin": [8, 10, 58, 74, 76, 79, 91, 105, 107, 108, 109, 110, 111, 112, 113, 114, 148, 152, 159, 198, 199, 201, 202, 212, 218], "initialis": [8, 9, 26, 76, 106, 109, 110, 111, 115, 117, 118, 119, 120, 121, 122, 123, 124, 130, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 177, 179, 180, 182, 183, 185, 186, 194, 197, 201, 202, 206, 212, 217, 221], "collis": 8, "preced": [8, 36, 38, 53, 63, 64, 197, 198, 201, 202, 203], "variable_factori": 8, "assign": [8, 9, 18, 21, 26, 38, 53, 55, 56, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 161, 162, 165, 207], "idx": [9, 26], "level_nam": [9, 26], "singl": [9, 21, 26, 35, 70, 94, 95, 96, 97, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 136, 140, 146, 151, 161, 162, 165, 177, 179, 180, 182, 183, 184, 204, 212, 220], "multivari": [9, 26, 41, 43, 45, 50, 51, 166, 179, 180, 181, 182, 183, 184], "sub": [9, 26], "recurs": [9, 17, 26, 140, 143, 145], "subref": [9, 26], "field": [9, 26, 111, 145, 150, 157, 177], "parent": [9, 13, 26, 124, 207], "dataload": [9, 12], "travers": [9, 26], "see": [9, 29, 37, 72, 81, 85, 95, 97, 105, 109, 117, 118, 123, 136, 144, 149, 151, 154, 204, 213], "datafram": [9, 15, 21, 26], "panda": [9, 21], "assum": [9, 20, 23, 26, 29, 53, 56, 112, 165, 210], "iter": [9, 17, 21, 26, 28, 29, 33, 35, 60, 76, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 144, 145, 146, 148, 167, 168], "togeth": [9, 26, 28, 35, 58, 60, 82, 85, 95, 97, 105, 107, 108, 109, 110, 111, 112, 113, 114, 130, 159, 185, 203], "furthermor": [9, 26], "slice": [9, 26, 29, 35, 41, 43, 45, 53, 56, 66, 68, 69, 122, 124, 127, 130, 165, 167, 168, 170, 171, 179, 180, 181, 182, 183, 184], "here": [9, 26, 28, 70, 73, 85, 111, 127, 130, 142, 150, 201, 204, 218], "futur": [9, 11, 24, 26, 95, 97, 122], "comput": [9, 26, 28, 29, 33, 34, 35, 36, 38, 41, 43, 45, 46, 47, 53, 54, 55, 56, 64, 75, 76, 77, 78, 82, 85, 86, 87, 88, 89, 90, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 126, 128, 129, 142, 144, 147, 148, 150, 154, 156, 157, 159, 161, 164, 165, 166, 167, 168, 169, 170, 171, 177, 179, 180, 181, 182, 183, 184, 201, 203, 204, 206, 216], "automat": [9, 13, 26, 27, 28, 43, 108, 115, 156, 170, 179, 180, 181, 182, 183, 184, 204, 219], "rather": [9, 20, 26, 27, 115, 119, 161, 167, 179, 180, 181, 182, 183, 184], "themselv": [9, 26], "subrefer": [9, 26], "eas": [9, 26], "without": [9, 26, 115, 157, 161, 170, 181, 184], "overwrit": [9, 26], "categoricalvari": [9, 26], "continuousvari": [9, 26], "addition": [9, 26, 27, 105, 115, 220, 223], "access": [9, 26, 27, 29, 115], "attribut": [9, 26, 28, 29, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 140, 154, 155, 177, 179, 180, 181, 182, 183, 184, 185, 186, 194, 197, 198, 201, 202, 203, 206, 207], "fulli": [9, 26, 204, 217], "vfactori": [9, 26], "lfactori": [9, 26], "ofactori": [9, 26], "were": [9, 19, 21, 26, 28, 66, 177], "thu": [9, 26, 28, 29, 48, 66, 76, 105, 148, 159, 160, 161, 170, 177, 179, 182, 203], "id": [9, 26, 85], "direct": [9, 21, 46, 47, 56, 58, 60, 165, 219], "kei": [9, 17, 18, 22, 29, 105, 115, 140], "pair": [9, 33, 39, 46, 47, 54, 82, 86, 115, 140, 157, 158, 159, 165, 170, 179, 180, 181, 216, 218], "its": [9, 13, 15, 16, 21, 29, 35, 38, 50, 51, 63, 65, 69, 87, 102, 105, 106, 115, 119, 122, 126, 127, 128, 129, 130, 132, 135, 137, 138, 142, 144, 153, 157, 159, 161, 165, 167, 177, 186, 206, 219], "__getattr__": 9, "request": 9, "so": [9, 10, 19, 20, 28, 35, 59, 66, 105, 106, 119, 126, 136, 141, 150, 152, 159, 167, 186, 209, 212], "multipl": [9, 28, 29, 49, 50, 51, 113, 114, 115, 126, 128, 129, 140, 146, 170, 179, 181, 182, 183, 184, 186, 220], "entir": [9, 11, 31, 115], "otherwis": [9, 21, 58, 60, 63, 70, 87, 140, 151, 162, 179, 180, 182, 183, 204], "get_var": 9, "parse_id": 9, "popul": [9, 19, 21, 35, 70, 71, 121, 140, 151], "order": [9, 22, 35, 36, 50, 51, 68, 71, 140, 143, 146, 167, 168, 171, 172, 204], "ident": [9, 14, 53, 56, 66, 74, 76, 79, 86, 91, 106, 107, 108, 110, 111, 112, 113, 114, 119, 122, 123, 131, 140, 142, 144, 148, 150, 151, 159, 165, 177, 186, 201, 202, 206, 212, 218], "map": [9, 15, 28, 29, 31, 32, 33, 53, 82, 87, 91, 94, 95, 96, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 119, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 150, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 172, 175, 177, 185, 186, 192, 194, 209, 212, 216, 220, 221], "data_dir": 10, "getal": [10, 23], "i": [10, 14, 28, 29, 43, 53, 54, 55, 56, 65, 74, 75, 76, 77, 78, 79, 90, 91, 92, 95, 97, 105, 115, 126, 128, 129, 140, 143, 148, 150, 157, 160, 162, 165, 179, 180, 181, 182, 183, 184, 197, 198, 201, 202, 204, 212, 223], "entiti": [10, 23], "subclass": [10, 11, 27, 28, 29, 105, 106, 149, 169, 177, 207], "locat": [10, 19, 34, 36, 38, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 123, 177, 212], "uniqu": [10, 23, 105, 127, 130, 146, 204], "select": [10, 15, 17, 107, 108, 109, 110, 111, 112, 113, 114, 146, 197, 198, 199, 201, 202, 204, 220, 221, 222], "long": [10, 20, 107, 108, 109, 110, 111, 112, 113, 114, 120, 204], "format": [10, 16, 18, 24, 83, 84, 86, 212], "hcp_refer": [10, 24, 212], "hcp": [10, 25, 212, 221], "compos": [11, 152, 153, 216], "encourag": 11, "remain": [11, 53, 56, 106, 124, 144, 165, 167, 168, 177, 179, 180, 181, 182, 183, 184, 203, 212], "chang": [11, 14, 16, 17, 21, 140, 143, 177, 218, 220], "switch": 11, "deprec": 11, "advis": [11, 14, 59, 115], "anyth": 11, "import": [11, 43, 142, 179, 180, 181, 182, 183, 184, 207], "referenceddataload": [11, 212], "kwarg": [12, 15, 16, 20, 28, 29, 107, 109, 111, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172], "set_depth": [12, 13], "adjust": [12, 13, 21, 140, 204], "append": [13, 28, 171], "collat": [13, 28, 212, 221], "variou": [14, 140, 220], "modal": 14, "moment": [14, 27, 159, 220, 221], "larg": [14, 17, 20, 27, 55, 56, 70, 144, 157, 165, 170, 204, 212], "undocu": 14, "untest": [14, 176, 177, 212], "dure": [14, 28, 107, 108, 109, 110, 111, 112, 113, 114, 157, 177, 197, 201, 204], "come": [14, 20, 150], "round": [14, 91, 92], "howev": [14, 27, 28, 159, 206, 223], "interim": 14, "user": [14, 29, 59, 105, 107, 115], "verifi": [14, 67, 72, 195], "expect": [14, 27, 54, 59, 136, 162, 165, 166, 212], "get_path_from_var": [14, 212], "apply_transform": [14, 212], "apply_to_select": [14, 212], "transform_block": [14, 212], "unzip_blocked_dict": [14, 212], "transpos": [14, 29, 43, 63, 69, 72, 87, 165, 179, 180, 181, 182, 183, 184, 206, 212], "vector_encod": [14, 212], "o": [14, 53, 54, 55, 56, 179, 180, 181, 182, 183, 184, 198, 212], "read_data_fram": [14, 212], "read_neuro_imag": [14, 212], "read_json": [14, 212], "change_extens": [14, 212], "cast": [14, 17, 212], "bind": [14, 212], "to_tensor": [14, 212], "to_named_tensor": [14, 212], "consolidate_block": [14, 212], "extend_to_s": [14, 212], "extend_to_max_s": [14, 212], "frame": [14, 57, 58, 59, 60, 95, 97, 204, 212], "get_col": [14, 212], "apply_model_spec": [14, 212], "nifti_head": [14, 212], "cwb_cifti_head": [14, 212], "dump_data": [14, 212], "get_metadata_vari": [14, 212], "nanfil": [14, 21, 212], "fillnan": [14, 212], "seri": [14, 39, 43, 50, 51, 58, 59, 60, 95, 97, 98, 105, 150, 159, 170, 177, 179, 180, 181, 182, 183, 184, 186, 212, 216, 221], "polynomial_detrend": [14, 212], "normalis": [14, 33, 40, 41, 42, 43, 44, 46, 53, 55, 56, 106, 107, 108, 109, 110, 111, 112, 113, 114, 131, 140, 143, 144, 159, 162, 165, 166, 170, 173, 177, 179, 180, 181, 182, 183, 184, 203, 212, 218, 222], "random_window": [14, 212], "window_map": [14, 212], "df": [15, 26], "accord": [15, 27, 31, 32, 35, 40, 42, 44, 50, 51, 58, 63, 87, 140, 154, 155, 179, 182], "collect": [15, 26, 28, 220], "subset": [15, 106, 177, 179, 180, 181, 182, 183, 184, 220], "therebi": [15, 26, 27, 66, 140, 142, 179, 180, 181, 182, 183, 184, 186, 212], "option": [15, 33, 87, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 140, 179, 180, 181, 182, 183, 184, 203, 206], "guid": 15, "some": [15, 20, 24, 29, 39, 72, 74, 79, 85, 95, 97, 115, 119, 126, 128, 129, 137, 138, 160, 161, 162, 165, 172, 177, 179, 180, 181, 182, 183, 184, 195, 201, 204, 218], "compulsori": 15, "sep": [15, 16], "tabular": [15, 16], "tsv": [15, 16], "forward": [15, 16, 20, 27, 28, 29, 51, 58, 60, 73, 119, 127, 130, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 197, 204, 207], "pd": [15, 16], "read_csv": [15, 16], "nibabel": [16, 20, 145], "json": [16, 18], "python": [16, 18, 20, 119, 219], "new_ext": 16, "mode": [16, 27, 28, 150, 172, 185, 207], "edit": [16, 136], "extens": [16, 19, 21, 170], "last": [16, 29, 34, 35, 36, 41, 43, 45, 50, 51, 68, 69, 72, 95, 97, 122, 179, 180, 181, 182, 183, 184], "everyth": 16, "after": [16, 29, 41, 58, 66, 107, 108, 109, 110, 111, 112, 113, 114, 115, 146, 154, 155, 177, 179, 180, 181, 182, 183, 184, 203], "period": [16, 59], "treat": [16, 66, 177], "old": 16, "text": 16, "final": [16, 50, 51, 58, 60, 62, 68, 95, 97, 146, 179, 180, 181, 182, 183, 184, 198, 212], "new_path": 16, "var": [17, 123, 144], "ensur": [17, 65, 66, 74, 76, 79, 86, 90, 91, 92, 124, 126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 148, 149, 159, 162, 177, 179, 180, 181, 182, 183, 184, 186, 201, 202, 204, 219], "appli": [17, 22, 28, 29, 31, 32, 33, 50, 51, 58, 91, 95, 97, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145, 151, 152, 157, 159, 164, 169, 170, 177, 186, 209, 218, 220], "potenti": [17, 19, 50, 51, 87, 92, 115, 146, 179, 180, 181, 182, 183, 184, 207], "block": [17, 18, 21, 27, 28, 33, 54, 55, 56, 62, 65, 66, 67, 68, 69, 70, 71, 72, 87, 147, 151, 154, 155, 162, 165, 207, 212], "encod": [17, 28, 53, 56, 105, 107, 115, 124, 165, 193, 201, 202], "vector": [17, 35, 54, 63, 66, 67, 68, 71, 72, 83, 84, 86, 87, 154, 155, 159, 161, 162, 164, 166, 167, 172, 197, 198, 203, 204, 206], "matrix": [17, 28, 29, 33, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 82, 87, 89, 90, 91, 92, 122, 146, 148, 149, 151, 159, 160, 165, 166, 167, 179, 180, 181, 182, 183, 184, 194, 201, 202, 203, 204, 206, 209, 210, 216, 218, 221], "dimens": [17, 20, 21, 27, 29, 31, 32, 33, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 59, 62, 63, 64, 65, 68, 70, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 101, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 140, 141, 142, 146, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 179, 180, 181, 182, 183, 184, 186, 197, 198, 201, 202, 203, 210], "equal": [17, 19, 21, 27, 53, 56, 68, 70, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 157, 162, 165, 170, 206], "number": [17, 20, 28, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 58, 59, 63, 64, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 124, 140, 141, 142, 146, 148, 150, 156, 157, 158, 165, 168, 170, 177, 179, 180, 181, 182, 183, 184, 186, 194, 197, 198, 201, 202, 203, 204, 206], "hot": 17, "endod": 17, "becaus": [17, 27, 58, 59, 64, 86, 107, 108, 109, 110, 111, 112, 113, 114, 136, 140, 150, 157, 159, 165, 170, 203, 217, 223], "expens": 17, "mani": [17, 27, 28, 29, 55, 56, 115, 146, 165, 212], "dataobj": 18, "dataobjectvari": 18, "fill": [19, 70, 145, 151], "invalid": 19, "np": 19, "ndarrai": [19, 107, 108, 110, 112, 113, 114], "denot": [19, 21, 35, 36, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 66, 70, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 102, 140, 141, 142, 158, 161, 165, 177, 179, 180, 181, 182, 183, 184, 186, 197, 198, 201, 202, 203], "nan": [19, 21, 35, 137, 138], "float": [19, 35, 36, 38, 43, 55, 56, 58, 59, 65, 66, 70, 74, 76, 79, 82, 84, 85, 86, 90, 91, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 126, 127, 128, 129, 130, 133, 136, 140, 143, 144, 145, 146, 148, 149, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 197, 201, 202, 203, 204, 206], "broadcast": [19, 50, 51, 102, 120, 144, 170], "against": [19, 90, 91, 92], "part": [19, 107, 108, 109, 110, 111, 112, 113, 114, 142], "mean": [19, 20, 29, 58, 60, 74, 75, 76, 77, 78, 79, 104, 140, 147, 148, 149, 153, 154, 157, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 177, 201, 202, 223], "everi": [19, 29, 58, 60, 82, 86, 107, 108, 109, 110, 111, 112, 113, 114, 162, 169, 197, 204], "non": [19, 27, 28, 33, 56, 58, 59, 90, 105, 107, 108, 109, 110, 111, 112, 113, 114, 165, 177, 179, 180, 181, 182, 183, 184], "nanmask": 19, "boolean": [19, 28, 58, 59, 60, 107, 108, 109, 110, 111, 112, 113, 114, 115, 133, 136, 140, 145, 177, 179, 182, 186, 207], "cell": 19, "where": [19, 55, 56, 68, 71, 72, 74, 79, 90, 91, 92, 105, 126, 127, 128, 129, 130, 146, 158, 161, 162, 165, 170, 179, 182, 185, 186, 218], "previous": [19, 28, 105, 106], "restor": 19, "later": [19, 212], "desir": [19, 55, 56, 115, 161, 162, 165, 218, 219], "tensor_list": [19, 21], "extend": [19, 21, 70, 151], "largest": [19, 21, 144, 167, 204], "mark": [19, 21, 27, 60, 115], "chain": [19, 21], "most": [20, 28, 39, 136, 142, 170, 172, 217, 218], "essenti": [20, 165], "tm": 20, "nifti": [20, 112, 113, 114, 115, 145], "header": 20, "right": [20, 38, 50, 51, 55, 56, 63, 65, 66, 77, 78, 87, 105, 107, 108, 110, 115, 146, 148, 150, 157, 158, 160, 161, 162, 165, 170, 206, 209], "tr": 20, "smart": 20, "enough": [20, 105], "figur": [20, 150], "unit": [20, 31, 32, 140, 143], "re": [20, 28, 136, 179, 180, 181, 182, 183, 184, 223], "fourth": 20, "repetit": 20, "probabl": [20, 53, 56, 91, 106, 115, 124, 127, 130, 161, 162, 164, 165, 177, 218, 223], "need": [20, 27, 28, 29, 150, 169, 179, 180, 181, 182, 183, 184], "anywai": [20, 146], "slow": [20, 204, 212], "pars": 20, "To": [20, 28, 29, 58, 59, 90, 92, 95, 97, 140, 143, 145, 165, 168, 186], "limit": [20, 27, 41, 63, 126, 128, 129, 134, 137, 138, 212], "connectom": 20, "workbench": 20, "inform": [20, 146, 220], "isn": [20, 146], "generalis": [20, 167], "more": [20, 27, 29, 41, 43, 45, 58, 85, 89, 105, 122, 130, 136, 157, 161, 218], "effici": [20, 46, 85, 212], "dim": [21, 70, 104, 151, 179, 180, 181, 182, 183, 184, 185, 186, 206], "auto": [21, 154, 204], "minimum": [21, 66, 76, 126, 128, 129, 133, 136, 148, 159, 161, 162, 172, 177], "made": [21, 28, 66, 122, 204, 207], "singleton": 21, "ad": [21, 28, 66, 87, 91, 106, 123, 149, 177, 202, 203, 217], "greater": [21, 115, 133, 145, 162, 197], "consolid": 21, "smaller": [21, 55, 56, 66, 145, 161, 165, 204], "befor": [21, 50, 51, 59, 76, 87, 107, 108, 109, 110, 111, 112, 113, 114, 126, 127, 128, 129, 130, 148, 171, 177, 207, 218], "posit": [21, 43, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 107, 108, 110, 111, 112, 113, 114, 147, 148, 149, 159, 177, 179, 180, 181, 182, 183, 184, 194, 200, 201, 202, 203, 204, 206, 216, 221], "polynomi": [22, 94, 95, 96, 97, 204], "detrend": 22, "window_length": 22, "window_start": 22, "lightgrabberbas": 23, "_indexquerymixin": 23, "find_fil": 23, "find": [23, 106, 159, 197, 204], "particular": [23, 24, 27, 136, 140, 186, 202], "enumer": 23, "requir": [24, 27, 28, 76, 85, 91, 94, 115, 119, 145, 148, 157, 170, 202, 203, 204], "cannot": [24, 27, 58, 140, 142, 204], "download": 24, "directli": [24, 28, 33, 39], "script": 24, "share": [24, 59, 63], "hcp_dir": 25, "cpu": 25, "neuro": 26, "magnet": 26, "reson": 26, "behaviour": [26, 33, 56, 58, 87, 124, 140, 165], "suffici": [26, 27, 212], "aris": [26, 27], "split": [26, 206, 212], "throughput": [27, 176], "control": [27, 41, 58, 59, 179, 180, 181], "convey": 27, "atla": [27, 36, 38, 106, 107, 108, 109, 110, 111, 112, 113, 114, 158, 218, 221, 222], "layer": [27, 30, 87, 119, 140, 142, 143, 176, 192, 194, 197, 204, 206, 208, 209, 218, 221, 222], "voxel": [27, 36, 38, 105, 106, 107, 115, 162, 177], "wise": [27, 75, 76, 77, 78, 148, 154], "vertex": [27, 53, 56, 105, 108, 110, 146, 165, 221, 222], "necessit": 27, "memori": [27, 82, 85, 107, 108, 109, 110, 111, 112, 113, 114, 157, 170], "footprint": [27, 157, 170], "On": 27, "consum": 27, "grade": 27, "gpu": [27, 170, 219], "fewer": [27, 177], "10": [27, 28, 76, 146, 148, 199, 204], "reason": [27, 28, 72, 146, 161, 162, 165, 195, 204, 218], "fit": [27, 58, 59, 72, 170, 195, 204], "pose": 27, "signific": [27, 154, 156], "problem": [27, 146, 161, 204], "downstream": [27, 206], "modul": [27, 29, 63, 87, 105, 116, 123, 124, 144, 146, 150, 151, 167, 169, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 196, 197, 200, 201, 202, 204, 206, 207, 216, 217, 218, 221], "impos": [27, 63, 66, 69, 87, 160, 161, 206], "penalti": [27, 157, 161, 162, 197, 206], "relationship": [27, 39, 43, 46, 47, 72, 179, 180, 181, 182, 183, 184], "featur": [27, 150, 162, 170, 192, 194, 206, 212], "nuisanc": [27, 41], "measur": [27, 38, 39, 46, 47, 52, 87, 95, 97, 149, 154, 155, 157, 159, 160, 170, 179, 180, 181, 182, 183, 184, 185, 201, 202, 220], "connect": [27, 39, 53, 54, 55, 56, 146, 155, 165, 217], "estim": [27, 39, 43, 48, 58, 59, 76, 127, 130, 148, 149, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185], "movement": 27, "accur": 27, "stabli": 27, "pearson": [27, 33, 39, 40, 41, 43, 44, 46, 159, 179, 180, 181, 182, 183, 184, 216], "correl": [27, 33, 41, 43, 45, 72, 154, 155, 156, 159, 173, 179, 180, 181, 182, 183, 184, 216, 221, 222], "batch": [27, 29, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 59, 64, 72, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 94, 95, 96, 97, 103, 148, 154, 156, 162, 179, 180, 181, 182, 183, 184, 186, 201, 212, 221], "attain": [27, 76, 126, 128, 129, 148, 159, 161, 162], "constraint": [27, 63, 87, 123, 144, 151, 161, 179, 180, 182, 183, 206], "circumv": 27, "ineffici": [27, 204], "usual": 27, "There": [27, 87, 103], "principl": 27, "appear": 27, "interact": [27, 212, 218], "autograd": [27, 28], "work": [27, 59, 76, 82, 83, 84, 85, 86, 87, 136, 148, 158, 170, 176, 187, 223], "streamlin": 27, "approach": [27, 58, 59, 63, 87, 146], "perhap": [27, 177], "involv": [27, 159, 170, 204], "autodifferenti": 27, "alreadi": [27, 56, 115, 161, 162, 165], "better": [27, 103, 115, 150, 170, 218], "solut": [27, 165, 204], "fragment": 27, "high": [27, 50, 51, 59, 140, 143, 201], "demand": 27, "onc": [27, 95, 97, 150], "accumulatingfunct": [27, 29, 214], "cach": [27, 28], "averag": [27, 29, 58, 60, 63, 69, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 157, 206], "respect": [27, 28, 29, 41, 72, 106, 146, 177, 212], "backward": [27, 28, 29, 33, 51, 58, 60, 73, 172, 204, 220], "save": [27, 28, 108, 110, 212], "factor": [27, 33, 43, 53, 56, 74, 76, 79, 90, 91, 92, 126, 128, 129, 146, 148, 174, 179, 180, 181, 182, 183, 184, 201, 202, 204, 212], "ratio": 27, "differenti": [27, 28, 34, 35, 36, 39, 65, 73, 88, 91, 140, 142, 149, 159, 165, 187, 202, 204, 212, 216, 218, 219, 220, 221], "backpropag": [27, 28], "compartmentalis": [27, 105], "environ": 27, "possibl": [27, 39, 66, 85, 95, 97, 150, 161, 186, 194, 197, 204, 206], "per": [27, 41, 43, 45, 50, 51, 72, 82, 85, 94, 95, 96, 97, 154, 179, 180, 181, 182, 183, 184, 186, 197, 198, 207], "outsid": [27, 126, 127, 128, 129, 130, 136, 137, 138], "insid": 27, "histori": [27, 28, 201], "track": [27, 28, 29], "therefor": [27, 74, 76, 79, 90, 92, 113, 114, 124, 140, 142, 148, 201, 202], "inact": 27, "introduc": [27, 59, 204], "second": [27, 34, 36, 41, 86, 87, 95, 97, 115, 140, 141, 143, 146, 159, 179, 180, 181, 206, 220, 221], "challeng": 27, "often": [27, 39, 58, 59, 115, 119, 162, 170], "want": [27, 29, 154, 155], "loss": [27, 28, 104, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 202, 217, 221], "stage": [27, 58, 60, 170, 212, 217], "littl": 27, "chanc": [27, 150, 177], "full": [27, 140, 170, 179, 182, 193, 197], "again": [27, 43, 51, 66, 179, 180, 181, 182, 183, 184], "two": [27, 29, 44, 45, 58, 68, 82, 86, 95, 97, 122, 126, 127, 128, 129, 130, 141, 146, 150, 158, 159, 165, 172, 179, 180, 181, 204], "parallel": 27, "wrap": [27, 220], "accumulin": [27, 28, 29, 176], "engin": [28, 29, 217, 221], "accumul": [28, 175, 214, 221, 222], "arg": [28, 29, 55, 56, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "local": [28, 29, 87, 176, 214, 221], "gradient": [28, 29, 33, 76, 126, 127, 128, 129, 130, 142, 148, 149, 159, 176, 202, 204, 214, 218, 221], "instead": [28, 29, 58, 64, 72, 106, 113, 114, 115, 140, 143, 144, 157, 161, 162, 169, 186, 195], "begin": [28, 68, 71, 146, 197], "acc": [28, 29], "model_grad": [28, 29], "retain_dim": [28, 29], "operationalis": [28, 39, 82, 157], "back": [28, 76, 148, 154, 155, 186, 204], "propag": [28, 70], "node": [28, 53, 54, 56, 115, 145, 162, 165], "ii": [28, 33, 40, 42, 44, 140, 143], "ve": [28, 170, 223], "def": [28, 29, 207], "accbwd": 28, "grad_output": 28, "grad_loc": 28, "ll": 28, "quick": 28, "argmap": [28, 176], "lambda": [28, 29, 119], "x": [28, 29, 31, 32, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 65, 66, 67, 69, 72, 74, 75, 76, 77, 78, 79, 83, 84, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 144, 148, 150, 159, 198, 201, 202, 206, 207], "matric": [28, 53, 54, 55, 56, 62, 64, 66, 67, 68, 70, 71, 74, 75, 76, 77, 78, 79, 87, 88, 89, 90, 91, 92, 105, 106, 146, 151, 155, 159, 162, 165, 201, 202, 203, 204, 206, 210], "multipli": [28, 29, 63, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 186, 203, 220], "w": [28, 29, 36, 38, 63, 87, 150, 179, 180, 181, 182, 183, 184, 206], "t0": [28, 29], "rand": [28, 29], "4": [28, 29, 129], "100": [28, 29, 109, 110, 111, 158], "accfwd": 28, "passmap": 28, "fals": [28, 29, 35, 37, 43, 45, 53, 55, 56, 58, 59, 60, 69, 72, 87, 91, 94, 95, 96, 97, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 145, 146, 150, 165, 166, 170, 176, 177, 179, 180, 181, 182, 183, 184, 185, 193, 194, 204, 206, 210, 211], "t1": [28, 29], "6": [28, 29], "shape": [28, 29, 31, 32, 33, 87, 101, 102, 115, 140, 194, 198, 206], "abov": [28, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 95, 97, 154, 157, 203, 207], "bwd": 28, "true": [28, 29, 43, 45, 53, 56, 58, 59, 60, 64, 72, 91, 107, 108, 109, 110, 111, 112, 113, 114, 133, 136, 140, 142, 145, 146, 165, 166, 169, 177, 179, 180, 181, 182, 183, 184, 185, 194, 199, 203, 206, 207, 209, 210], "clear": [28, 72, 107, 108, 112, 113, 114, 195, 212], "capabl": 28, "receiv": [28, 53, 54, 55, 56, 146, 149, 157, 202, 218, 220, 223], "partial": [28, 39, 43, 94, 119, 179, 182, 183, 184, 216], "simplifi": 28, "usag": [28, 217], "callabl": [28, 29, 55, 56, 58, 60, 82, 91, 94, 107, 108, 109, 110, 111, 112, 113, 114, 119, 152, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 172, 179, 180, 181, 182, 183, 184, 186, 197, 204], "bool": [28, 29, 43, 53, 55, 56, 69, 72, 91, 94, 95, 96, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 141, 146, 165, 166, 177, 179, 180, 181, 182, 183, 184, 194, 203, 204, 206, 207], "graph": [28, 33, 53, 54, 55, 56, 87, 162, 165, 170, 206, 209, 216, 221], "retain": [28, 172], "accordingli": [28, 59, 106, 157, 159, 162, 170, 220], "unseen": [28, 57, 58, 60], "static": 28, "ctx": 28, "overridden": [28, 29, 169], "accept": [28, 34, 179, 180, 181, 182, 183, 184, 204], "context": [28, 29, 51, 220], "arbitrari": [28, 153, 157, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 220], "though": [28, 66, 177, 181, 184], "enforc": [28, 63, 87, 95, 97, 158, 179, 180, 182, 183, 204, 206], "save_for_backward": 28, "intend": 28, "equival": [28, 41, 53, 56, 63, 87, 95, 97, 165, 170, 179, 180, 181, 182, 183, 206, 219], "vjp": 28, "save_for_forward": 28, "jvp": 28, "alia": [28, 187], "r": [28, 40, 42, 44, 53, 54, 56, 63, 70, 84, 85, 86, 87, 95, 97, 150, 151, 165, 206], "grad": [28, 29], "needs_input_grad": 28, "whether": [28, 58, 59, 60, 69, 95, 97, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 207], "reduce_dim": 29, "autouse_domain_gradi": 29, "model_output": 29, "model_param": 29, "let": 29, "next": [29, 60, 66, 146], "interest": [29, 41, 162, 220, 223], "reduc": [29, 59, 104, 105, 159, 161, 162, 165, 177], "explicitli": [29, 33, 34, 95, 97, 109, 119, 216], "protect": 29, "declar": [29, 186], "out0": 29, "out1": 29, "sum": [29, 56, 66, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 144, 153, 160, 162, 165, 170, 177], "overal": [29, 107, 109, 111, 115, 146, 150, 167, 168, 212], "weight": [29, 34, 35, 36, 37, 38, 41, 43, 45, 50, 51, 53, 54, 55, 56, 57, 59, 60, 82, 87, 95, 97, 98, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 119, 124, 140, 149, 150, 152, 153, 154, 155, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 177, 179, 180, 181, 182, 183, 184, 185, 186, 191, 194, 197, 198, 201, 202, 204, 206, 216, 218], "16": 29, "22": 29, "acc_weight": 29, "reset": 29, "zero_grad": 29, "still": [29, 58, 87, 115, 217], "respons": [29, 140, 142], "facilit": [29, 115, 220], "correct": [29, 72, 195], "reduct": [29, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 176, 177], "ax": [29, 35, 37, 68, 69, 70, 75, 76, 77, 78, 115, 122, 144, 148, 167, 168, 170, 179, 180, 181], "unus": [29, 66], "total": [29, 53, 54, 55, 56, 140, 141, 142, 146, 162, 165, 186], "although": [29, 72, 86, 115, 169, 195], "recip": [29, 169], "afterward": [29, 169], "sinc": [29, 169], "former": [29, 169], "care": [29, 169], "regist": [29, 169, 207], "hook": [29, 169], "while": [29, 31, 32, 43, 53, 55, 56, 58, 59, 60, 95, 97, 108, 110, 136, 140, 142, 159, 160, 165, 169, 177, 179, 180, 181, 182, 183, 184, 186, 204], "latter": [29, 169], "silent": [29, 169], "set_to_non": 29, "zero": [29, 35, 49, 59, 65, 70, 84, 91, 126, 145, 177, 179, 180, 181, 182, 183, 184, 186, 201, 216], "similar": [29, 33, 87, 141, 159, 165, 170, 179, 180, 181, 182, 183, 184, 194, 206], "optim": 29, "detail": [29, 33, 44, 72, 81, 85, 95, 97, 105, 109, 117, 118, 123, 140, 143, 144, 149, 151, 186, 213, 217], "neural": [30, 150, 207, 216, 217, 218, 221], "network": [30, 56, 150, 162, 165, 192, 204, 207, 216, 217, 218, 221], "amplitude_tanh": [30, 216], "amplitude_atanh": [30, 216], "corrnorm": [30, 216], "activ": [31, 32, 33, 123, 124, 144, 146, 151, 174, 206, 216, 221, 222], "invers": [31, 39, 43, 46, 47, 64, 74, 77, 79, 126, 127, 128, 129, 130, 140, 142, 148, 150, 179, 180, 181, 182, 183, 184, 186, 216], "hyperbol": [31, 32, 126, 128], "tangent": [31, 32, 73, 74, 76, 79, 126, 128, 148, 149, 179, 180, 181, 182, 183, 184, 200, 201, 202], "arctang": 31, "amplitud": [31, 32, 51, 101, 102, 126, 127, 138, 140, 142, 186], "absolut": [31, 32, 66, 154, 155, 172], "mathrm": [31, 32, 33, 65, 95, 97, 159, 160], "arctanh": 31, "phase": [31, 32, 49, 101, 102, 138, 140, 143, 186, 216], "complex": [31, 32, 101, 102, 126, 127, 138, 142, 186], "preserv": [31, 32, 136, 203], "open": [31, 32, 145, 218], "disc": [31, 32], "plane": [31, 32], "origin": [31, 32, 50, 51, 58, 59, 60, 74, 76, 79, 83, 90, 91, 92, 136, 144, 148, 154, 155, 170, 176, 179, 180, 182, 183, 201, 202], "circumfer": [31, 32], "infin": [31, 126, 127, 128, 129, 130, 146], "As": [31, 32, 33, 41, 43, 45, 50, 51, 53, 54, 55, 56, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 86, 87, 89, 90, 91, 92, 95, 97, 203, 207], "elementwis": [31, 32, 33, 56, 103, 127, 130, 153, 161, 165, 170, 203], "conserv": [31, 32, 33, 91], "tanh": [32, 123, 140, 142, 144, 151, 177, 186], "distant": 32, "region": [32, 36, 38, 107, 108, 110, 111, 112, 113, 114, 115, 157, 158, 162, 177], "gradpath": 33, "both": [33, 73, 102, 151, 174, 179, 180, 181, 186, 197, 204], "divid": [33, 58, 144, 146, 166], "a_": 33, "ij": [33, 40, 42, 44, 53, 56, 165], "product": [33, 56, 63, 82, 86, 87, 140, 142, 143, 150, 165, 203, 206], "sign": [33, 55, 56, 66, 146, 165, 206, 210], "squar": [33, 43, 62, 67, 68, 69, 72, 74, 79, 88, 92, 150, 170, 179, 180, 181, 182, 183, 184, 195, 201, 202, 203], "diagon": [33, 43, 46, 47, 62, 63, 66, 68, 70, 71, 87, 91, 151, 165, 179, 180, 181, 182, 183, 184, 203, 204, 206], "bar": [33, 75, 76, 77, 78, 201], "_": [33, 38, 40, 42, 44, 53, 56, 157, 165], "frac": [33, 38, 40, 42, 44, 50, 51, 54, 55, 63, 65, 75, 77, 78, 87, 148, 156, 157, 165, 170, 206], "sgn": 33, "jj": [33, 40, 42, 44], "sqrt": [33, 40, 42, 44, 92, 156], "epsilon": 33, "covari": [33, 40, 42, 44, 46, 59, 72, 140, 159, 179, 180, 181, 182, 183, 184, 216, 221, 222], "overriden": 33, "below": [33, 170, 204], "version": [33, 37, 162, 164, 168], "laplacian": 33, "divis": [33, 43, 170, 179, 180, 181, 182, 183, 184], "mostli": [33, 70], "outer": [33, 63, 87, 203, 206], "flow": 33, "intrins": 34, "mesh": [34, 108, 110, 115], "grid": [34, 37], "cmass_reference_displacement_grid": [34, 37], "cmass_coor": [34, 37, 216], "diffus": [34, 216], "cmass_reference_displac": [34, 37], "arrai": [34, 82, 85, 102, 123, 144, 145, 146, 216], "na_rm": [35, 37], "regularis": [35, 43, 157, 165, 166, 169, 170, 172, 179, 180, 181, 182, 183, 184, 185, 201, 204, 217, 221], "close": [35, 105, 127, 130, 145, 157, 159, 160, 187, 197, 212], "k_1": 35, "k_2": 35, "k_n": 35, "interven": [35, 41, 43, 45, 50, 51, 54, 55, 56, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 179, 180, 181, 182, 183, 184, 186], "k_i": [35, 54], "n": [35, 40, 41, 42, 43, 44, 45, 50, 51, 54, 55, 56, 71, 72, 74, 75, 76, 77, 78, 79, 82, 85, 87, 89, 90, 91, 92, 94, 95, 96, 97, 140, 141, 142, 143, 148, 156, 179, 180, 181, 182, 183, 184, 186, 201, 202, 203, 204, 206, 210], "3": [35, 58, 83, 84, 86, 126, 127, 128, 130, 140, 189, 204, 206], "dimension": [35, 43, 157, 179, 180, 181, 182, 183, 184], "span": [35, 72], "three": [35, 108, 110, 157, 212], "undefin": [35, 159], "how": [35, 150, 212], "left": [35, 38, 50, 51, 55, 56, 63, 65, 66, 77, 78, 87, 105, 107, 108, 110, 115, 148, 150, 157, 158, 160, 161, 162, 165, 170, 206, 209], "intact": 35, "cmass": [36, 37, 38, 157, 158, 216, 221], "coor": [36, 37, 38, 81, 82, 83, 84, 85, 107, 108, 110, 111, 112, 113, 114, 157, 177], "radiu": [36, 37, 38, 84, 85, 86, 157, 158], "l": [36, 38, 53, 56, 63, 87, 165, 177, 180, 183, 206], "embed": [36, 38, 82, 85, 203], "project": [36, 59, 72, 73, 74, 76, 79, 148, 149, 157, 161, 179, 180, 181, 182, 183, 184, 200, 201, 202, 217], "onto": [36, 59, 157, 161, 170], "sphere": [36, 38, 81, 82, 83, 84, 85, 86, 157, 216, 221], "row": [36, 63, 64, 70, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 107, 108, 110, 111, 112, 113, 114, 140, 151, 157, 162, 170, 180, 183, 209, 210], "ref": [37, 107, 108, 110, 111, 112, 113, 114], "explicit": [37, 63, 87], "norm": [38, 76, 82, 140, 143, 144, 148, 153, 157, 158, 160, 167, 168, 171, 172, 203, 206], "floor": [38, 157], "compact": [38, 160, 220, 221], "score": [38, 157], "mathbf": [38, 54, 56, 65, 157, 161, 162, 165, 170], "interc": [38, 41, 53, 54, 56, 63, 87, 89, 90, 92, 157, 161, 162, 165, 206, 209], "circ": [38, 56, 157, 161, 162, 165, 170], "c": [38, 43, 53, 56, 63, 70, 82, 85, 87, 94, 95, 96, 97, 151, 157, 165, 182, 183, 184, 186, 201, 202, 204, 210], "ac": [38, 157], "col": [38, 157, 209], "distanc": [38, 82, 85, 86, 106, 107, 108, 109, 110, 111, 112, 113, 114, 136, 157, 160, 172], "closer": [38, 197], "about": [38, 170, 186, 220], "statist": [39, 179, 180, 181, 182, 183, 184], "localis": 39, "At": [39, 202, 217], "whatev": 39, "deleg": 39, "corrcoef": 39, "remov": [39, 41, 72, 177], "alias": 39, "improv": [39, 45, 162, 212], "corr": [39, 43, 179, 182, 183, 184, 216], "partialcov": [39, 216], "partialcorr": [39, 41, 43, 179, 182, 183, 184, 216], "pairedcov": [39, 44, 179, 180, 181, 216], "pairedcorr": [39, 179, 180, 181, 216], "conditionalcov": [39, 40, 179, 180, 181, 216], "condit": [39, 46, 47, 72, 74, 76, 79, 90, 91, 92, 115, 148, 179, 180, 181, 201, 202, 216], "conditionalcorr": [39, 41, 179, 180, 181, 216], "precis": [39, 43, 166, 179, 182, 183, 184, 216], "cov": [40, 41, 42, 44, 45, 46, 47, 48, 179, 180, 181, 182, 183, 184, 185, 216, 221, 222], "y": [40, 41, 44, 45, 72, 83, 84, 86], "complet": [40, 41, 42, 43, 44, 45, 46, 47, 48, 82, 85, 107, 108, 110, 112, 113, 114], "characterist": [40, 41, 42, 45, 46, 47, 48], "hat": [40, 42, 44, 74, 76, 79, 148, 201, 202], "sigma": [40, 41, 42, 43, 44, 106, 107, 108, 109, 110, 111, 112, 113, 114], "mathbb": [40, 42, 44, 53, 54, 56, 165], "r_": [40, 42, 44, 156], "sigma_": 41, "xx": 41, "yy": 41, "xy": 41, "schur": [41, 203], "complement": [41, 179, 182, 197], "residualis": [41, 146, 216, 221, 222], "plu": [41, 71, 123], "intercept": [41, 94, 95, 96, 97, 179, 180, 181], "term": [41, 43, 54, 63, 87, 94, 95, 96, 97, 150, 159, 165, 179, 180, 181, 182, 183, 184, 204, 206], "interpret": [41, 46, 47, 115, 140, 143, 159, 165, 177, 179, 180, 181, 182, 183, 184, 218], "effect": [41, 45, 51, 70, 126, 151, 162, 166, 177, 179, 180, 181], "c_x": [41, 45, 72], "ob": [41, 43, 45, 50, 51, 72, 94, 95, 96, 97], "channel": [41, 43, 45, 50, 51, 70, 72, 82, 85, 87, 94, 95, 96, 97, 149, 150, 151, 166, 179, 180, 181, 182, 183, 184, 186, 194, 201, 202, 206], "c_y": [41, 45, 72], "influenc": [41, 177], "wish": [41, 91, 119], "penultim": [41, 43, 45, 72, 95, 97, 179, 180, 181, 182, 183, 184], "rowvar": [41, 43, 45, 72, 179, 180, 181, 182, 183, 184, 185], "bia": [41, 43, 45, 87, 95, 97, 98, 179, 180, 181, 182, 183, 184, 185, 194, 204, 206], "ddof": [41, 43, 45, 179, 180, 181, 182, 183, 184, 185], "l2": [41, 43, 45, 81, 82, 166, 167, 168, 171, 172, 179, 180, 181, 182, 183, 184, 185], "empir": [41, 43, 44, 45, 48, 150, 179, 180, 181, 182, 183, 184], "thank": [43, 115], "http": [43, 85, 187, 204, 219], "github": [43, 187, 219, 223], "com": [43, 187, 204, 219], "issu": [43, 218], "19037": 43, "bias": [43, 87, 179, 180, 181, 182, 183, 184], "unweight": [43, 179, 180, 181, 182, 183, 184], "unbias": [43, 105, 179, 180, 181, 182, 183, 184], "degre": [43, 54, 55, 56, 94, 95, 96, 97, 159, 165, 179, 180, 181, 182, 183, 184, 204], "freedom": [43, 179, 180, 181, 182, 183, 184], "determin": [43, 58, 59, 95, 97, 146, 157, 165, 166, 179, 180, 181, 182, 183, 184, 186, 204, 220, 221], "coupl": [43, 53, 63, 87, 124, 165, 179, 180, 181, 182, 183, 184, 206], "symmetr": [43, 61, 63, 64, 66, 67, 68, 71, 74, 79, 87, 89, 90, 91, 92, 150, 151, 165, 172, 179, 180, 181, 182, 183, 184, 201, 202, 203, 205, 206, 216, 221], "semidefinit": [43, 63, 65, 66, 74, 75, 76, 77, 78, 79, 87, 88, 91, 148, 149, 159, 179, 180, 181, 182, 183, 184, 201, 202, 203, 204, 206, 216, 218, 221, 222], "rel": [43, 45, 130, 136, 140, 143, 155, 159, 179, 180, 181, 182, 183, 184, 201], "off": [43, 46, 47, 70, 151, 179, 180, 181, 182, 183, 184], "band": [43, 70, 140, 143, 151, 179, 180, 181, 182, 183, 184, 218, 221], "multi": [43, 115, 157, 161, 162, 179, 180, 181, 182, 183, 184, 204, 218], "inter": [43, 53, 165, 179, 180, 181, 182, 183, 184], "nonneg": [43, 55, 56, 76, 91, 127, 130, 148, 154, 157, 159, 165, 177, 179, 180, 181, 182, 183, 184, 203, 204, 206], "maximum": [43, 55, 56, 58, 59, 60, 63, 66, 76, 82, 85, 87, 95, 96, 97, 107, 108, 109, 110, 111, 112, 113, 114, 126, 128, 129, 133, 136, 140, 144, 146, 148, 157, 159, 161, 165, 179, 180, 181, 182, 183, 184, 204], "likelihood": [43, 159, 179, 180, 181, 182, 183, 184], "intermedi": [43, 157, 170, 179, 180, 181, 182, 183, 184], "offer": 45, "success": 46, "accompani": 46, "negat": [46, 47, 128, 145, 159], "convolv": [49, 50, 82, 85, 95, 97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115], "product_filt": [49, 51, 216], "product_filtfilt": [49, 186, 216], "fourier": [50, 51, 58, 59, 216, 221], "frequenc": [50, 51, 58, 59, 140, 141, 142, 143, 162, 216, 218, 221, 222], "domain": [50, 51, 74, 76, 79, 90, 92, 106, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 148, 149, 151, 157, 161, 162, 177, 180, 183, 201, 202, 216, 218, 221, 222], "lfloor": [50, 51], "rfloor": [50, 51], "analogu": [50, 51], "gain": [50, 51, 140, 142, 186], "bin": [50, 51, 58, 59, 140, 141, 142, 162, 186], "spectrum": [50, 51, 59, 140, 142, 186], "low": [50, 51, 63, 87, 140, 143, 205, 206], "rule": [50, 51], "fft": [50, 51], "rfft": [50, 51], "irfft": [50, 51], "digit": 51, "revers": [51, 60, 186], "copi": [51, 133, 136], "quadrat": [51, 150], "strictli": [51, 53, 56, 140, 142, 165, 201], "real": [51, 102, 142], "delai": [51, 140, 143], "compon": [51, 101, 146, 217], "simpli": [51, 162], "depend": [51, 140, 143, 179, 180, 181, 182, 183, 184], "girvan_newman_nul": [52, 55, 56, 165, 216], "modularity_matrix": [52, 216], "coaffili": [52, 56, 165, 216], "commun": [52, 55, 56, 146, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 216], "relaxed_modular": [52, 55, 216], "c_i": 53, "c_o": [53, 56, 95, 97, 165], "exclude_diag": [53, 56, 165], "vertic": [53, 54, 55, 56, 105, 108, 110, 146, 162, 165, 206, 208, 209, 210], "structur": [53, 55, 56, 59, 70, 145, 151, 165, 179, 180, 182, 183, 207], "affili": [53, 56, 162, 165], "sourc": [53, 54, 55, 56, 107, 109, 111, 115, 165, 179, 180, 181, 182, 183, 184, 203], "sink": [53, 54, 55, 56, 165], "coeffici": [53, 63, 87, 143, 204], "omega": [53, 74, 79, 201, 202], "h": [53, 56, 63, 87, 150, 165, 206], "propos": [53, 56, 165], "partit": [53, 55, 56, 165], "emit": [53, 54, 55, 56], "edg": [53, 54, 55, 56, 146, 155, 165], "uncertainti": [53, 56, 165], "jk": [53, 56, 165], "j": [53, 56, 160, 162, 165], "k": [53, 56, 94, 95, 96, 97, 141, 162, 165], "binari": [53, 56, 145, 165, 179, 180, 181], "reflect": [53, 56, 165], "determinist": [53, 56, 146, 161, 162, 165], "l_": [53, 56, 105, 165], "assort": [53, 56, 165], "preferenti": [53, 56, 165], "disaffili": [53, 56, 165], "self": [53, 56, 106, 165, 207], "link": [53, 56, 223], "max": [53, 55, 56, 126, 128, 129, 133, 136, 144, 165], "girvan": [54, 55, 56], "newman": [54, 55, 56], "null": [54, 55, 56, 115, 158, 165], "cut": [54, 165], "stub": 54, "randomli": [54, 140, 146, 165, 177, 179, 180, 181, 182, 183, 184, 197], "rewir": [54, 165], "k_o": 54, "2m": [54, 55], "p_": [54, 165], "gn": [54, 165], "adjac": [54, 55, 56, 165, 171, 209], "p": [54, 55, 157, 165, 167, 168, 171, 172], "compris": [54, 55, 115, 212], "gamma": [55, 56, 165, 204], "modular": [55, 56], "b": [55, 56, 165, 187], "resolut": [55, 56, 165], "larger": [55, 56, 58, 59, 82, 136, 145, 165], "small": [55, 56, 91, 165], "mai": [55, 56, 72, 153, 165], "necessari": [55, 56, 115, 165, 185, 204], "consid": [55, 56, 58, 59, 90, 91, 92, 136, 165, 168], "normalise_modular": [56, 165], "normalise_coaffili": [56, 165], "relax": 56, "linkag": [56, 165], "revert": [56, 165], "standard": [56, 81, 106, 140, 149, 165, 177, 202, 203], "hadamard": [56, 165], "q": 56, "renormalis": [56, 165, 203, 209, 210], "unnecessari": [56, 165], "been": [56, 76, 148, 165, 204], "softmax": [56, 106, 124, 127, 130, 146, 161, 162, 165, 199, 218], "extrapol": 57, "censor": 57, "hybrid_interpol": [57, 216], "spectral": [57, 59, 190, 216], "weighted_interpol": [57, 216], "spectral_interpol": [57, 216], "max_weighted_stag": [58, 189], "map_to_kernel": [58, 60, 189, 191], "oversampling_frequ": [58, 59, 189, 190], "8": [58, 59, 189, 190], "maximum_frequ": [58, 59, 189, 190], "frequency_thresh": [58, 189], "handle_fail": [58, 59], "orig": 58, "hybrid": [58, 189], "awai": [58, 107, 108, 112, 113, 114, 161], "seen": [58, 60, 95, 97, 106, 119, 123, 124, 144, 151, 179, 180, 181, 182, 183, 184, 185, 186], "successfulli": 58, "imput": [58, 60, 216, 221], "kernel": [58, 60, 81, 82, 85, 87, 95, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 177, 204, 205], "proce": [58, 60, 82, 107, 203, 212], "group": [58, 85, 99, 212], "good": [58, 59, 60, 150, 204], "bad": [58, 59, 60, 201], "flag": [58, 59, 60, 107, 108, 109, 110, 111, 112, 113, 114], "govern": [58, 60], "boxcar": [58, 60], "integ": [58, 60, 105, 115], "convolut": [58, 59, 60, 81, 87, 95, 97, 106, 150, 186, 194, 199, 216, 221], "neighbour": [58, 60], "sine": [58, 59], "cosin": [58, 59], "spectra": [58, 59, 140], "oversampl": [58, 59], "fraction": [58, 59, 206], "nyquist": [58, 59, 140, 143], "orthogon": [58, 59, 72, 159], "basi": [58, 59, 87, 94, 95, 96, 97, 159], "spuriou": [58, 59], "varianc": [58, 59, 72, 95, 97, 123, 136, 144], "captur": [58, 59], "thresh": [58, 59, 190], "rais": [58, 59, 94, 96, 97], "fail": [58, 64], "except": 58, "interpol": [59, 60, 144, 189, 190, 191, 216, 221, 222], "sampling_period": [59, 190], "corrupt": 59, "proxi": 59, "reconstruct": [59, 66, 146], "previou": [59, 76, 148, 201], "anish": 59, "mitra": 59, "jonathan": 59, "power": [59, 94, 96, 97], "turn": [59, 159], "lomb": 59, "scargl": 59, "periodogram": 59, "temporarili": 59, "omiss": 59, "due": [59, 91, 92], "artefact": 59, "content": [59, 115], "disrupt": 59, "autocorrel": 59, "artefactu": 59, "outlier": [59, 136], "arguabl": 59, "linearli": [59, 198], "relev": [59, 106, 152], "plai": 59, "role": 59, "easili": [59, 218], "your": [59, 161, 162, 207, 219], "unsqueez": 59, "consecut": 59, "procedur": [59, 136, 146, 159, 212], "start_stag": [60, 191], "max_stag": [60, 191], "progress": 60, "longer": [60, 150], "initi": [60, 63, 87], "special": 61, "invert_spd": [61, 216], "spd": [61, 91, 216], "expand_out": [61, 216], "recondition_eigenspac": [61, 216], "delete_diagon": [61, 206, 216], "toeplitz": [61, 179, 180, 182, 183, 216, 218, 221], "sym2vec": [61, 216], "vec2sym": [61, 216], "squareform": [61, 216], "delet": [62, 206], "infer": [62, 115], "symmetri": [63, 69, 87, 150, 158, 179, 180, 182, 183, 206, 210], "rank": [63, 87, 150, 193, 203, 205, 206], "inner": 63, "height": [63, 87, 123], "width": [63, 87, 106, 107, 108, 109, 110, 111, 112, 113, 114, 144, 177], "expans": [63, 87, 206], "toggl": [63, 87, 185, 204], "neg": [63, 66, 87, 92, 126, 159, 165, 177, 206], "cross": [63, 86, 87, 206], "skew": [63, 69, 87, 206], "subtract": [63, 87], "guarante": [63, 66, 74, 76, 79, 87, 90, 92, 148, 201, 202, 203], "force_invert_singular": 64, "invert": [64, 179, 180, 181, 182, 183, 184], "definit": [64, 66, 74, 76, 79, 87, 89, 90, 91, 92, 148, 153, 159, 201, 202, 203, 206], "choleski": 64, "decomposit": [64, 65, 66, 91, 159], "recompos": [64, 89, 90, 92], "singular": [64, 65, 66, 90, 92, 159, 167, 179, 180, 181, 182, 183, 184, 204], "moor": 64, "penros": 64, "pseudoinvers": 64, "ainv": 64, "psi": [65, 74, 76, 79, 90, 91, 92, 148, 159, 201, 202], "xi": [65, 90, 91, 92, 159], "recondit": [65, 74, 76, 79, 90, 91, 92, 159, 201, 202, 204], "eigenvalu": [65, 66, 74, 76, 79, 89, 90, 91, 92, 148, 159, 201, 202, 204], "eigenspac": [65, 91], "help": [65, 146, 201, 212], "stabilis": 65, "x_i": 65, "sim": 65, "uniform": [65, 119, 150, 197], "foral": 65, "nonzero": [65, 154, 155, 157, 159, 177, 179, 180, 182, 183], "nondegener": [65, 90, 92, 159], "ep": [66, 76, 148], "1e": [66, 76, 127, 130, 148], "06": [66, 76, 148], "eig": 66, "symmetris": [66, 69, 71, 87], "decompos": [66, 101], "diagonalis": [66, 89, 90, 92], "svd": [66, 91, 146, 159, 207], "smallest": 66, "scale": [66, 81, 85, 107, 108, 109, 110, 111, 112, 113, 114, 122, 123, 126, 128, 129, 132, 134, 135, 136, 137, 138, 144, 150, 151, 165, 204], "threshold": [66, 76, 145, 148, 154, 155, 197], "reconstitut": [66, 102], "theori": 66, "up": [66, 94, 96, 150, 180, 183], "error": [66, 87, 91, 92, 137, 138, 170], "eigendecomposit": 66, "recomposit": 66, "among": [66, 146, 159, 160, 165, 179, 180, 181, 182, 183, 184, 206], "margin": [66, 204], "occasion": 66, "insuffici": 66, "avoid": [66, 126, 127, 128, 129, 130, 137, 138], "numer": [66, 73, 91, 92, 107, 108, 110, 111, 112, 113, 114], "convert": [67, 68, 71, 83, 84, 207], "unlik": 67, "numpi": 67, "matlab": 67, "vectoris": 67, "sym": [68, 71], "offset": [68, 71, 179, 180, 182, 183], "ravel": [68, 71], "upper": [68, 71, 145], "triangl": [68, 71, 161], "main": [68, 71, 105, 179, 180, 182, 183, 204, 219], "vec": [68, 71, 74, 79, 201, 202], "delin": 69, "antisymmetri": 69, "fill_valu": [70, 151], "element": [70, 71, 74, 79, 90, 91, 92, 124, 140, 151, 154, 160, 162], "unless": [70, 162, 204, 216], "unspecifi": 70, "length": [71, 124, 140, 186], "choos": 71, "place": [71, 106, 119, 123, 124, 141, 142, 144, 149, 151, 161, 197, 206], "resid": [72, 107, 108, 109, 110, 111, 112, 113, 114], "driver": 72, "gelsd": 72, "ordinari": 72, "linear": [72, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 131, 132, 170, 175, 192, 194, 198, 199, 204, 218, 222], "incorrect": [72, 142, 195], "linalg": [72, 195], "lstsq": [72, 195], "pinv": [72, 195], "orthogonalis": 72, "subspac": [72, 73, 74, 79, 149, 200, 201, 202], "explanatori": 72, "explain": 72, "routin": [72, 218], "solv": [72, 146, 204], "lapack": 72, "proper": [73, 200, 201, 202], "riemann": 73, "manifold": [73, 76, 82, 148, 201, 202], "nearli": [73, 136], "exhibit": 73, "instabl": 73, "tangent_project_spd": [73, 74, 216], "cone_project_spd": [73, 79, 216], "mean_euc_spd": [73, 216], "mean_harm_spd": [73, 216], "mean_logeuc_spd": [73, 216], "mean_geom_spd": [73, 216], "cone": [74, 75, 76, 77, 78, 79, 147, 148, 149, 179, 180, 181, 182, 183, 184, 200, 201, 202, 203, 216, 221], "tangenc": [74, 76, 79, 148, 149, 201, 202], "theta": [74, 79, 201, 202], "exp": [74, 78, 89, 201, 202], "exponenti": [74, 78, 88, 89, 144, 148, 179, 180, 182, 183], "promot": [74, 76, 79, 90, 91, 92, 148, 157, 159, 160, 161, 165, 170, 171, 177, 201, 202, 218], "convex": [74, 76, 79, 91, 148, 159, 201, 202, 204], "euclidean": [75, 76, 77, 78, 82, 86, 107, 108, 109, 110, 111, 112, 113, 114, 115, 148, 157, 167, 168, 171, 172, 202, 218], "familiar": [75, 148, 165], "arithmet": [75, 76, 148], "sum_": [75, 77, 78, 148, 158, 160], "x_": [75, 77, 78, 148], "max_it": [76, 148], "geometr": [76, 148], "descent": [76, 148], "geodes": [76, 86, 148, 157], "brief": [76, 148], "converg": [76, 148], "algorithm": [76, 146, 148], "frobeniu": [76, 148, 167], "harmon": [77, 148], "log": [78, 79, 90, 148, 161, 201, 202, 220, 221], "logarithm": [78, 79, 88, 90, 127, 130, 148, 161], "sphere_to_norm": [80, 216], "sphere_to_latlong": [80, 216], "spherical_geodes": [80, 82, 216], "spatial_conv": [80, 81, 85, 216], "spherical_conv": [80, 216], "euclidean_conv": [80, 216], "max_bin": [81, 82, 85, 106, 107, 108, 109, 110, 111, 112, 113, 114, 177], "10000": [81, 82, 85, 106, 107, 108, 109, 110, 111, 112, 113, 114, 177], "truncat": [81, 82, 85, 91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 177], "spatial": [81, 82, 85, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 157, 158, 160, 177], "metric": [81, 82, 87, 160, 206], "gaussian": [81, 85, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 144, 177, 204], "kernel_gaussian": 82, "isotrop": [82, 85, 144], "evalu": [82, 94, 95, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 207, 217, 221], "shorter": 82, "n_i": 82, "pairwis": [82, 86, 160], "spheric": [82, 83, 84, 86, 107, 108, 109, 110, 111, 112, 113, 114, 115, 157, 158, 216, 218, 221], "circl": [82, 86], "try": [82, 85], "decreas": [82, 85], "data_conv": [82, 85], "normal": [83, 84, 86, 140, 166], "latitud": [83, 84, 86], "longitud": [83, 84, 86], "z": [83, 84, 204], "centr": [83, 84, 144, 157, 158, 216, 221], "pretti": 85, "much": [85, 136, 146, 170], "dumbest": 85, "lie": [85, 124], "thing": 85, "openreview": 85, "net": 85, "pdf": 85, "hkbd5xzrb": 85, "haversin": 86, "pleas": [86, 213, 218], "n_x": 86, "n_y": 86, "surfac": [86, 105, 108, 110, 111, 115, 157, 158, 218], "dist": 86, "brainnetcnn": 87, "equip": [87, 212], "induct": 87, "favour": [87, 159, 162, 165, 170, 206], "learn": [87, 95, 97, 106, 124, 170, 177, 186, 187, 192, 197, 198, 202, 206, 218], "unord": 87, "dens": 87, "analog": [87, 158], "lot": 87, "quirk": 87, "usabl": 87, "crosshair_similar": [87, 206], "bank": [87, 186, 206], "step": [87, 107, 212], "c_": [87, 165, 179, 180, 181, 194, 209], "precursor": 87, "One": [87, 152, 161], "nonsquar": [87, 206], "bipartit": [87, 146, 206], "count": [87, 154, 206], "doubl": [87, 144, 150, 179, 180, 182, 183, 206], "parametris": [87, 124], "symexp": [88, 216], "symlog": [88, 216], "symsqrt": [88, 216], "symmap": [89, 90, 92, 216, 221], "q_x": [89, 90, 92], "lambda_x": [89, 90, 92], "matrix_exp": 89, "stabl": 89, "infeas": [90, 92], "guard": [90, 91, 92], "widetild": [90, 91, 92], "independ": [90, 91, 92, 159, 177], "uniformli": [90, 91, 92], "truncate_eigenvalu": 91, "convexcombin": 91, "nois": [91, 106, 107, 108, 109, 110, 111, 112, 113, 114, 123, 144, 149, 177, 179, 180, 181, 182, 183, 184, 185, 202, 203], "degener": [91, 159], "repeat": [91, 180, 183, 186], "nondegeneraci": 91, "veri": [91, 144, 170, 197], "tsconv2d": [93, 216], "basisconv2d": [93, 216], "polyconv2d": [93, 216], "basischan": [93, 216], "polychan": [93, 216], "tsconv": [94, 95, 96, 97, 98, 216, 221], "basis_funct": [94, 95, 199], "include_const": [94, 95, 96, 97], "ith": [94, 95, 96, 97], "constitut": [94, 216], "signatur": [94, 204], "constant": [94, 95, 96, 97, 117, 120], "conv": [95, 97, 98, 192], "view": [95, 97, 201, 223], "sequenti": [95, 97], "past": [95, 97], "divers": [95, 97, 105], "consist": [95, 97, 111], "penalis": [95, 97, 157, 159, 161, 165, 170, 171, 172], "spread": [95, 97], "conv2d": [95, 97, 207], "zeroth": [96, 97], "hideou": 99, "disorganis": 99, "hopefulli": 99, "somedai": 99, "disappear": 99, "altogeth": 99, "move": 99, "elsewher": [99, 220], "sad": 99, "blemish": 99, "conform_mask": [99, 100, 216], "apply_mask": [99, 103, 177, 216], "wmean": [99, 216], "complex_decompos": [99, 102, 216], "complex_recompos": [99, 101, 216], "msk": [100, 103], "ampl": [101, 102], "radian": [101, 102], "almost": [103, 142, 161, 201], "certainli": [103, 142, 161, 170], "keepdim": 104, "tool": [105, 139, 143, 217], "brain": [105, 108, 110, 220], "atlas": [105, 106, 109, 112, 113, 114, 115, 162], "princip": [105, 146, 162, 217], "distribut": [105, 106, 109, 110, 111, 115, 118, 119, 121, 123, 124, 140, 144, 161, 164, 165, 166, 218], "volumetr": [105, 108, 110, 111, 115, 218], "discret": [105, 107, 112, 115, 218], "hard": [105, 212, 218], "parcel": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 158, 159, 161, 162, 165, 170, 177, 186, 218], "overlap": [105, 112, 113, 114, 115], "unstructur": [105, 157], "leverag": [105, 159], "prior": [105, 115, 179, 180, 182, 183, 186], "knowledg": 105, "atlasinit": [105, 218], "abstract": [105, 109], "baseatla": [105, 106, 109, 177, 218], "incorpor": [105, 218], "mixin": [105, 107, 218, 221], "pointer": [105, 107, 108, 110, 111, 112, 113, 114], "annot": 105, "discretevolumetricatla": [105, 218], "volum": [105, 112, 113, 114, 115], "multivolumetricatla": [105, 114, 218], "multifilevolumetricatla": [105, 113, 218], "cortexsubcortexciftiatla": [105, 218], "cerebr": 105, "cortex": [105, 108, 110], "subcortex": [105, 108, 110], "dirichletinitvolumetricatla": [105, 110, 218], "dirichlet": [105, 106, 109, 110, 111, 115, 130, 218, 221], "dirichletinitsurfaceatla": [105, 111, 218], "flexibl": [105, 122], "straightforwardli": 105, "realiti": 105, "isol": [105, 107, 115], "compart": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 158, 177], "v_": [105, 165], "distinct": 105, "dirichletinitbaseatla": [105, 218], "init": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 177, 179, 180, 182, 183, 186, 194, 197, 206, 209, 217, 221], "spherical_scal": [106, 107, 108, 109, 110, 111, 112, 113, 114, 177], "kernel_sigma": [106, 177], "noise_sigma": [106, 177], "characteris": 106, "instanti": [106, 107, 115, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 186, 204], "blur": 106, "pointwis": 106, "inject": [106, 107, 108, 109, 110, 111, 112, 113, 114, 179, 180, 181, 182, 183, 184, 185, 203], "smooth": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 127, 130, 171, 177, 218], "establish": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115], "topolog": [106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 218], "deviat": [106, 140, 149, 177, 202, 203], "preimag": [106, 119, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 179, 180, 182, 183], "multilogit": [106, 124, 125, 177, 218], "pre": [106, 161, 165, 167, 168, 197, 204, 218], "simplex": [106, 124, 127, 130, 161, 162, 218], "ref_point": [107, 108, 112, 113, 114, 115], "mask_sourc": [107, 109, 111], "clear_cach": [107, 108, 112, 113, 114], "inherit": [107, 220], "sever": [107, 159, 169, 181, 184], "cover": 107, "frequent": [107, 159], "scenario": 107, "own": 107, "composition": 107, "_load_refer": 107, "referencemixin": [107, 218], "_create_mask": 107, "maskmixin": [107, 218], "_compartment_names_dict": 107, "compartmentmixin": [107, 218], "_create_compart": 107, "_configure_decod": 107, "labelmixin": [107, 218], "_populate_map_from_ref": 107, "_init_coor": 107, "meshmixin": [107, 218], "_configure_sigma": 107, "convmixin": [107, 218], "_convolv": 107, "abstractli": 107, "candid": [107, 197, 198], "inclus": [107, 108, 110, 111, 112, 113, 114, 115, 140], "subcompart": [107, 108, 109, 110, 111, 112, 113, 114, 115], "cortic": [107, 108, 110, 115, 158], "hemispher": [107, 108, 110, 115], "decod": [107, 108, 110, 111, 112, 113, 114, 115, 177], "wa": [107, 108, 110, 111, 112, 113, 114], "construct": [107, 108, 110, 111, 112, 113, 114], "statu": [107, 108, 110, 111, 112, 113, 114, 115], "extent": [107, 108, 110, 111, 112, 113, 114, 167, 168, 170], "cached_ref_data": [107, 108, 110, 111, 112, 113, 114], "purg": [107, 108, 110, 112, 113, 114], "overhead": [107, 108, 109, 110, 111, 112, 113, 114], "ceil": [107, 108, 109, 110, 111, 112, 113, 114], "mask_l": [108, 110], "mask_r": [108, 110], "surf_l": [108, 110], "surf_r": [108, 110], "cortex_l": [108, 110], "cifti_structure_cortex_left": [108, 110], "cortex_r": [108, 110], "cifti_structure_cortex_right": [108, 110], "subcort": [108, 110, 115], "grei": [108, 110], "matter": [108, 110], "endow": [108, 110], "gifti": [108, 110], "32k": [108, 110], "fslr": [108, 110], "medial": [108, 110, 115], "wall": [108, 110, 115], "nb": [108, 110, 111, 112, 113, 114], "nifti1imag": [108, 110, 111, 112, 113, 114], "to_imag": [108, 110, 115], "compartment_label": [109, 110, 115], "conc": [109, 110, 111], "template_imag": 109, "concentr": [109, 110, 111, 124, 157, 161, 165, 172], "cifti_templ": 110, "n_label": 111, "probabilist": [113, 114, 177], "segment": [113, 114], "ica": [113, 114], "_objectreferencemixin": 115, "_singlereferencemixin": 115, "disk": [115, 212], "_multireferencemixin": 115, "_phantomreferencemixin": 115, "unimport": 115, "_ciftireferencemixin": 115, "model_axi": 115, "substitut": [115, 194], "chri": 115, "markiewicz": 115, "tutori": 115, "_logicmaskmixin": 115, "tree": [115, 145, 207], "maskintersect": [115, 218], "maskthreshold": [115, 218], "leaf": [115, 145], "_cortexsubcortexciftimaskmixin": 115, "exclus": 115, "_fromnullmaskmixin": 115, "background": 115, "_singlecompartmentmixin": 115, "_multicompartmentmixin": 115, "extra": 115, "_cortexsubcortexcifticompartmentmixin": 115, "_discretelabelmixin": 115, "_continuouslabelmixin": 115, "valid": [115, 160, 212], "scheme": [115, 119, 169, 179, 180, 182, 183, 217, 221], "discretelabelmixin": 115, "_dirichletlabelmixin": 115, "_volumetricmeshmixin": 115, "evenli": 115, "_vertexciftimeshmixin": 115, "_evenlysampledconvmixin": 115, "unsupport": 115, "Its": 115, "_spatialconvmixin": 115, "from_distr_init_": [116, 118, 218], "constant_init_": [116, 117, 218], "identity_init_": [116, 218], "domaininitialis": [116, 117, 118, 218], "distributioninitialis": [116, 218], "constantinitialis": [116, 218], "throughout": [117, 120], "distr": [118, 121, 124], "preweight": [119, 177, 179, 180, 182, 183, 185, 186], "logist": [119, 129], "interv": [119, 127, 130, 136], "unconstrain": 119, "learnabl": [119, 140, 142, 179, 180, 181, 182, 183, 184, 185, 186, 194, 201, 202, 206, 209], "conveni": [119, 159, 161, 212], "functool": 119, "scalar": [120, 153, 154, 157, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 220], "delta": [123, 144, 165], "deltaplus_init_": 123, "loc": [123, 129, 132, 134, 137, 138, 144], "conjunct": [123, 124, 144, 146, 151, 162], "atanh": [123, 125, 140, 142, 144, 151, 177, 186, 218], "rang": [123, 126, 127, 128, 129, 130, 136, 137, 138, 144, 151], "dirichlet_init_": 124, "1d": [124, 127, 130], "understood": 124, "n_class": [124, 204], "logit": [125, 127, 130, 157, 161, 162, 164, 177, 218], "amplitudeatanh": [125, 140, 142, 186, 218], "amplitudemultilogit": [125, 186, 218], "handler": [126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 218], "mapper": [126, 127, 128, 129, 130, 132, 134, 135, 137, 138, 157, 161, 162, 177, 218, 221], "finit": [126, 128, 129], "reciproc": [126, 128, 129, 203], "never": 126, "min": [126, 128, 129, 133, 136], "purpos": [126, 127, 128, 129, 130, 181, 184], "supremum": [126, 127, 128, 129, 130, 197], "infimum": [126, 127, 128, 129, 130, 197], "asymptot": [126, 128, 129], "restrict": [126, 127, 128, 129, 130], "vanish": [126, 127, 128, 129, 130], "_outofdomainhandl": [126, 127, 128, 129, 130], "clip": [126, 127, 128, 129, 130, 131, 136, 218], "test": [126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 156, 185, 197, 212, 217, 218], "fall": [126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138], "bound": [126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 161], "handle_ood": [126, 127, 128, 129, 130, 132, 134, 135, 137, 138], "001": [127, 130, 159, 199], "multinomi": [127, 130], "natur": [127, 130], "serv": [127, 130], "sigmoid": [129, 165, 177, 197, 204], "well": [130, 153, 159, 204], "behav": 130, "increas": [130, 201, 204], "higher": 130, "entropi": [130, 162, 165, 220, 221], "equiprob": [130, 161, 162], "ood": [131, 140, 218], "_domain": [131, 218], "_phaseamplitudedomain": [131, 218], "affin": [131, 218], "domainbas": [132, 133, 134, 135, 136, 137, 138, 218, 221], "closest": [133, 140, 160], "allow": [133, 142, 179, 180, 182, 183, 207, 220], "prescrib": [133, 136], "exactli": [134, 144], "unmodifi": 134, "radic": 136, "extrem": [136, 170, 204, 218], "destroi": 136, "accommod": 136, "feasibl": 136, "obs_min": 136, "obs_max": 136, "lbound": 136, "ubound": 136, "safe": [137, 138], "manner": [137, 138, 142, 162], "superclass": [137, 138], "emul": [139, 140, 142, 143, 186], "replic": 139, "transfer": [139, 140, 141, 142, 186], "freqfilterspec": [139, 141, 142, 186, 218], "freqfilter_init_": [139, 186, 218], "clamp_init_": [139, 218], "freqfilt": [140, 141, 142, 218, 221, 222], "wn": [140, 143], "ftype": [140, 143], "butter": [140, 143], "btype": [140, 143], "bandpass": [140, 143], "fs": [140, 143], "rs": [140, 143], "20": [140, 143, 207], "ampl_loc": 140, "ampl_scal": 140, "phase_loc": 140, "phase_scal": 140, "02": [140, 144], "clamp": [140, 141, 186], "approxim": [140, 142, 144, 158, 204, 206], "curv": [140, 142], "iir": [140, 142, 218, 221, 222], "iirfilt": [140, 142, 218, 221, 222], "f": [140, 141, 142, 186, 187, 207], "bandstop": [140, 143], "critic": [140, 142, 143], "cutoff": [140, 143], "Not": 140, "ideal": [140, 143, 146], "cheby1": [140, 143], "cheby2": [140, 143], "ellip": [140, 143], "bessel": [140, 143], "randn": 140, "butterworth": [140, 143], "chebyshev": [140, 143], "ellipt": [140, 143], "thompson": [140, 143], "overst": 140, "remot": 140, "contrast": 140, "exact": 140, "lowpass": [140, 143], "highpass": [140, 143], "rippl": [140, 143], "stop": [140, 143], "mag": [140, 143], "scipi": [140, 142, 143], "clampabl": 140, "get_clamp": 140, "toler": [140, 154, 156], "excess": 140, "initialise_spectrum": 140, "worn": 140, "raw": [140, 142, 150, 177, 179, 180, 182, 183, 184, 186], "prevent": [140, 142, 146, 186, 201], "explos": [140, 142, 177, 186], "points_tensor": 141, "values_tensor": 141, "filter_spec": [141, 142, 186], "spec": [141, 142, 187], "even": 142, "kuznetsov": [143, 187], "initialise_coef": 143, "laplace_init_": 144, "excl_axi": 144, "multidimension": 144, "decai": 144, "rate": [144, 212], "atlasmixin": [145, 218, 221], "binaris": 145, "surviv": [145, 206], "morpholog": 145, "dilat": 145, "eros": 145, "hole": 145, "children": 145, "union": [145, 197], "intersect": [145, 197], "img": 145, "lattic": 146, "bipartitelatticeinit": 146, "n_out": 146, "n_lattic": [146, 207], "channel_multipli": [146, 207], "temperatur": 146, "random_init": 146, "attenu": 146, "prev": 146, "spars": 146, "biregular": 146, "compress": [146, 209, 210, 221, 222], "wrong": 146, "But": 146, "realli": 146, "common": [146, 185], "n_in": 146, "twice": [146, 165], "maximis": 146, "mutual": [146, 160], "allegi": 146, "n_": 146, "h_": [146, 209, 210], "w_": [146, 209, 210], "best": [146, 218], "uncompress": 146, "succeed": 146, "greedi": 146, "fuse": [146, 209], "join": 146, "redund": 146, "set_next": 146, "set_object": 146, "set_potenti": 146, "sign_vector": 146, "tangencyinit": [147, 218], "tangency_init_": [147, 218], "semidefinitemean": [147, 218], "spdeuclideanmean": [147, 218], "spdharmonicmean": [147, 218], "spdlogeuclideanmean": [147, 218], "spdgeometricmean": [147, 218], "exp_m": 148, "log_m": 148, "mean_spec": [149, 201, 202], "init_data": [149, 202], "std": [149, 202, 203], "_semidefinitemean": [149, 201, 202], "central": [149, 201, 202], "tendenc": [149, 201, 202], "sylo_init_": 150, "fan_in": 150, "nonlinear": [150, 194, 206], "leaky_relu": 150, "kaim": [150, 194], "fan": 150, "m": [150, 219], "recept": 150, "crosshair": 150, "hack": 150, "theoret": 150, "justif": 150, "believ": 150, "toeplitz_init_": 151, "pretransform": 152, "lossschem": [152, 220, 221], "hand": 152, "register_act": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "register_sentri": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "sentri": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 220], "action": [152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "nu": [153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172], "slicewis": 153, "criterion": [153, 177], "alwai": [153, 159, 162], "listen": [153, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 220], "batchcorr": [154, 155, 156], "tol": [154, 155, 156], "tol_sig": [154, 155], "auto_tol": [154, 220, 221], "fc": 155, "qc": 155, "edgewis": 155, "batchcorrel": [155, 220, 221], "scanner": 155, "motion": 155, "scan": 155, "batch_siz": [156, 176], "tail": 156, "mass": [157, 158, 216, 221], "simul": 157, "collaps": 157, "quantiti": [157, 170, 171, 172], "dispers": 157, "unpenalis": 157, "ball": 157, "proport": 157, "ell": 158, "ell_": 158, "lh": 158, "rh": 158, "moder": 158, "strong": [158, 159], "analysi": 159, "properti": [159, 218], "suit": 159, "concav": [159, 161], "global": 159, "optimis": [159, 165, 202, 204], "seek": 159, "weaker": 159, "induc": [159, 165], "cluster": [159, 160], "four": 159, "presum": 159, "advantag": 159, "certain": 159, "denomin": [159, 165], "unstabl": [159, 212, 217], "simpl": [159, 217], "cor": 159, "straightforward": 159, "v": [160, 177, 186, 204], "mathcal": [160, 165], "v_i": 160, "v_j": 160, "half": 160, "Such": 160, "centroid": 160, "proxim": 160, "l1": [160, 167, 168, 171, 172, 197], "notion": 160, "commut": 160, "cartoon": [161, 170], "schemat": 161, "contour": 161, "superpos": 161, "categori": 161, "applic": [161, 177, 187], "minimis": [161, 171], "afford": 161, "unbound": 161, "capac": 161, "undesir": 161, "parameteris": [161, 197], "precompos": [161, 162, 165, 167, 168], "unnormalis": [162, 170], "shrink": 162, "situat": 162, "trivial": 162, "uninterest": 162, "minima": 162, "prob_axi": 162, "hing": 163, "svm": [163, 221, 222], "jensen": 164, "shannon": 164, "diverg": 164, "jsdiv": 164, "js": 164, "affiliation_xfm": 165, "_q": 165, "nu_q": 165, "undirect": 165, "calcul": 165, "notat": 165, "account": 165, "lend": [165, 177, 218], "intuit": [165, 177, 218], "quantif": 165, "similarli": [165, 206], "wherein": 165, "equilibrium": [165, 220, 221], "loop": 165, "mvkurtosi": 166, "dimensional_sc": 166, "kurtosi": 166, "mardia": 166, "laumann": 166, "colleagu": 166, "stationari": 166, "infinit": 166, "optimum": 166, "configur": [167, 204], "manhattan": [167, 168, 171, 172], "unreduc": [167, 168], "unilater": [168, 206], "normedloss": [168, 220, 221], "nonposit": 168, "verbos": [169, 204], "homogen": 170, "AT": 170, "core": 170, "illustr": 170, "intens": 170, "lavend": 170, "blue": 170, "green": 170, "practic": [170, 197, 212, 218], "uneven": 170, "omit": 170, "voxelwis": [170, 175], "too": [170, 207], "fortun": 170, "broken": [170, 180, 183], "down": 170, "affect": 170, "reactivetermin": 170, "caution": 170, "improp": 170, "destruct": 170, "skip_normalis": 170, "tend": 170, "standardise_data": 170, "standardise_mu": 170, "transit": 171, "smoother": 171, "diff": 171, "bimod": 172, "symbimod": 172, "synthet": 172, "experi": [172, 212], "prefer": 172, "correlationnorm": [173, 222], "nn": [174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 210, 211, 216, 217, 221], "grad_path": 174, "labelwis": 175, "atlaslinear": [175, 176, 222], "atlasaccumulin": [175, 222], "image_kei": 176, "influx": 176, "efflux": 176, "line": 176, "transmit_filt": 176, "receive_filt": 176, "skip_loc": 176, "nonlocal_argmap": 176, "rebatch": 176, "mask_input": 177, "spatial_dropout": 177, "min_voxel": 177, "dropout": [177, 179, 180, 181, 182, 183, 184, 185], "discount": 177, "conjectur": 177, "grow": 177, "absmean": 177, "zscore": 177, "psc": 177, "strategi": 177, "percent": 177, "postweight": [177, 179, 180, 181, 182, 183, 184, 185, 197], "consider": 177, "concatenate_and_decod": 177, "reset_paramet": [177, 186, 197, 199, 206], "select_compart": 177, "_cov": [178, 222], "unarycovari": [178, 222], "unarycovariancetw": [178, 222], "unarycovarianceuw": [178, 222], "binarycovari": [178, 222], "binarycovariancetw": [178, 222], "binarycovarianceuw": [178, 222], "max_lag": [179, 180, 182, 183, 185], "out_channel": [179, 180, 181, 182, 183, 184, 185, 194, 206], "stochast": [179, 180, 181, 182, 183, 184], "c_1": [179, 180, 181], "c_2": [179, 180, 181], "unari": [179, 182, 183, 184], "lag": [179, 180, 181, 182, 183, 184], "noisesourc": [179, 180, 181, 182, 183, 184], "dropoutsourc": [179, 180, 181, 182, 183, 184], "bootstrap": [179, 180, 181, 182, 183, 184], "prepreweight_c": [180, 183], "prepreweight_r": [180, 183], "lead": [180, 183], "prepreweight": [180, 183], "nonetheless": [181, 184], "comprehens": 185, "frequencydomainfilt": 186, "time_dim": 186, "suppli": 186, "uncertain": 186, "entail": 186, "predomain": 186, "clamp_point": 186, "clamp_valu": 186, "rnn": 187, "bori": 187, "kuz": 187, "differentiable_iir_filt": 187, "publish": 187, "cite": 187, "parker": 187, "jd": 187, "esqueda": 187, "2020": 187, "machin": [187, 204], "dafx2020": 187, "vienna": 187, "austria": 187, "septemb": 187, "21": 187, "yet": 187, "dtdf": 187, "iirfiltfilt": 187, "spectralinterpol": [188, 222], "weightedinterpol": [188, 222], "hybridinterpol": [188, 222], "1x1": [192, 194], "queryencod": [192, 222], "recombin": [193, 207, 221, 222], "num_embed": 193, "embedding_dim": 193, "query_dim": 193, "common_layer_dim": 193, "specific_layer_dim": 193, "nlin": [193, 207], "progressive_specif": 193, "noise_dim": 193, "in_channel": [194, 206, 207], "positive_onli": 194, "mixtur": 194, "math": 194, "denois": 196, "responsefunctionlinearselector": [196, 222], "linearcombinationselector": [196, 222], "eliminationselector": [196, 222], "n_column": [197, 198, 199], "or_dim": 197, "and_dim": 197, "elimin": 197, "gentler": 197, "slope": 197, "did": 197, "didn": 197, "look": 197, "carefulli": 197, "someon": 197, "model_dim": [198, 199], "n_response_funct": 199, "response_function_len": 199, "9": 199, "init_lin": 199, "init_conv": 199, "leak": 199, "tangentproject": [200, 222], "batchtangentproject": [200, 222], "inertia": 201, "transport": [201, 202], "destin": [201, 202], "idea": [201, 212], "somehow": 201, "updat": [201, 220, 223], "inerti": 201, "eta": 201, "omega_t": 201, "omega_": 201, "describ": 201, "histor": 201, "tangencypoint": 201, "skip": 201, "heavili": 201, "dest": [201, 202], "fix": [202, 206], "noisi": 203, "necessarili": 203, "theorem": 203, "spsdnoisesourc": 203, "rbf": 204, "coef0": 204, "class_weight": 204, "decision_function_shap": 204, "ovr": 204, "01": 204, "formulate_on_forward_pass": 204, "solver": 204, "n_observ": 204, "sample_weight": 204, "kernelis": 204, "dpp": 204, "complianc": 204, "sacrific": 204, "quickli": 204, "prohibit": 204, "analyt": 204, "custom": 204, "sklearn": 204, "Or": 204, "libsvm": 204, "end": 204, "hyperparamet": [204, 220], "strength": 204, "poli": 204, "gram": 204, "precomput": 204, "unbalanc": 204, "vs": 204, "rest": 204, "classifi": 204, "formul": 204, "eco": 204, "sc": 204, "decis": 204, "diffcp": 204, "incred": 204, "compar": 204, "dedic": 204, "dual": 204, "soft": [204, 206], "15": 204, "www": 204, "youtub": 204, "watch": 204, "zzn80wmclnw": 204, "cxvpylay": 204, "disciplin": [204, 218], "parametr": 204, "program": [204, 216, 218, 220], "syloresnet": [205, 222], "learnable_al": 206, "disabl": 206, "simultan": 206, "respond": [206, 220], "rectifi": 206, "c_in": 206, "c_out": 206, "third": 206, "relu": [206, 207], "sylo": [207, 216, 218, 221, 222], "in_dim": 207, "dim_sequ": 207, "channel_sequ": 207, "block_sequ": 207, "lattice_order_sequ": 207, "compression_init": 207, "norm_lay": 207, "syloresblock": 207, "community_dim": 207, "submodul": [207, 212, 217, 218, 220], "regular": 207, "__init__": 207, "super": 207, "conv1": 207, "conv2": 207, "verticalcompress": [208, 222], "vertical_compress": [208, 222], "vertcom": [209, 210, 221, 222], "in_featur": 209, "out_featur": 209, "fold_channel": [209, 210], "forward_oper": 209, "row_compressor": 210, "col_compressor": 210, "remove_diagon": 210, "rightarrow": 210, "compressor": 210, "window_s": 211, "augmentation_factor": 211, "nonoverlap": 211, "augmentation_axi": 211, "workflow": [212, 217, 218], "ingest": 212, "pipelin": 212, "bold": 212, "torchvis": 212, "instruct": 212, "tar": [212, 219], "archiv": [212, 219, 220], "shard": 212, "api": [212, 217, 218], "fairli": [212, 217], "brittl": 212, "atom": [212, 216], "coverag": [212, 218], "poor": 212, "grab": 212, "quit": 212, "read": 212, "speed": 212, "suboptim": 212, "welcom": [212, 223], "contribut": 212, "parallelis": 212, "head": 212, "hour": 212, "upward": 212, "dai": 212, "preprint": [213, 223], "elementari": 216, "miscellan": [216, 221], "softwar": 217, "librari": 217, "incipi": 217, "hub": 217, "focus": 217, "guidelin": 217, "soon": 217, "benchmark": [217, 221], "visualis": [217, 221], "instal": 217, "framework": [217, 218, 219], "eval": [217, 221], "viz": [217, 221], "page": 217, "integr": 218, "expertis": 218, "transpar": 218, "start": [218, 220], "modif": 218, "clean": 218, "slate": 218, "experiment": 218, "inadequ": 218, "warrant": 218, "report": 218, "bug": 218, "deltaplu": [218, 221], "deltaplus_init": 218, "deltaplusinit": 218, "dirichlet_init": 218, "dirichletinit": 218, "iirfilterspec": 218, "laplac": [218, 221], "laplace_init": 218, "laplaceinit": 218, "maskuthreshold": 218, "maskdil": 218, "maskeros": 218, "maskopen": 218, "maskclos": 218, "maskfillhol": 218, "maskneg": 218, "maskunion": 218, "floatleaf": 218, "maskleaf": 218, "mpbl": [218, 221], "toeplitz_init": 218, "toeplitzinit": 218, "pip": 219, "rciric": 219, "gz": 219, "cuda": 219, "cudnn": 219, "underli": 219, "helper": 220, "lossappli": [220, 221], "lossargu": 220, "send": 220, "event": 220, "cours": 220, "tune": 220, "epoch": 220, "reducingloss": [220, 221], "qcfc": [220, 221], "hemisphericteth": [220, 221], "logdetcorr": 220, "detcorr": 220, "logdet": 220, "vectordispers": [220, 221], "softmaxentropi": [220, 221], "softmaxequilibrium": [220, 221], "hingeloss": [220, 221], "jsdiverg": [220, 221], "softmaxjsdiverg": [220, 221], "modularityloss": [220, 221], "multivariatekurtosi": [220, 221], "unilateralnormedloss": [220, 221], "secondmo": [220, 221], "secondmomentcentr": 220, "smoothnesspenalti": [220, 221], "symmetricbimod": [220, 221], "symmetricbimodalnorm": 220, "spdnois": [221, 222], "windowamplifi": [221, 222], "ohbm": 223, "unfortun": 223, "am": 223, "go": 223, "abl": 223, "invit": 223, "feel": 223, "free": 223, "reach": 223, "question": 223, "discuss": 223, "my": 223, "contact": 223, "email": 223, "post": 223, "arxiv": 223, "star": 223, "repositori": 223, "toward": 223, "alpha": 223, "releas": 223}, "objects": {"hypercoil": [[212, 0, 0, "-", "data"], [214, 0, 0, "-", "engine"], [215, 0, 0, "-", "eval"], [216, 0, 0, "-", "functional"], [218, 0, 0, "-", "init"], [220, 0, 0, "-", "loss"], [222, 0, 0, "-", "nn"]], "hypercoil.data": [[0, 0, 0, "-", "bids"], [6, 0, 0, "-", "collate"], [7, 0, 0, "-", "dataref"], [11, 0, 0, "-", "dataset"], [14, 0, 0, "-", "functional"], [24, 0, 0, "-", "hcp"]], "hypercoil.data.bids": [[1, 1, 1, "", "BIDSObjectFactory"], [2, 1, 1, "", "LightBIDSLayout"], [3, 1, 1, "", "LightBIDSObject"], [4, 1, 1, "", "fMRIPrepDataset"], [5, 3, 1, "", "fmriprep_references"]], "hypercoil.data.bids.fMRIPrepDataset": [[4, 2, 1, "", "add_data"]], "hypercoil.data.collate": [[6, 3, 1, "", "extend_and_bind"], [6, 3, 1, "", "gen_collate"]], "hypercoil.data.dataref": [[8, 1, 1, "", "DataQuery"], [9, 1, 1, "", "DataReference"], [10, 3, 1, "", "data_references"]], "hypercoil.data.dataref.DataQuery": [[8, 2, 1, "", "__call__"], [8, 2, 1, "", "variable_factory"]], "hypercoil.data.dataref.DataReference": [[9, 2, 1, "", "__call__"], [9, 2, 1, "", "__getattr__"], [9, 4, 1, "", "data"], [9, 2, 1, "", "get_var"], [9, 4, 1, "", "label"], [9, 4, 1, "", "outcome"], [9, 2, 1, "", "parse_ids"]], "hypercoil.data.dataset": [[12, 1, 1, "", "ReferencedDataLoader"], [13, 1, 1, "", "ReferencedDataset"]], "hypercoil.data.dataset.ReferencedDataLoader": [[12, 2, 1, "", "set_depth"]], "hypercoil.data.dataset.ReferencedDataset": [[13, 2, 1, "", "add_data"], [13, 2, 1, "", "set_depth"]], "hypercoil.data.functional": [[15, 3, 1, "", "apply_model_specs"], [17, 3, 1, "", "apply_to_select"], [17, 3, 1, "", "apply_transform"], [16, 3, 1, "", "change_extension"], [21, 3, 1, "", "consolidate_block"], [20, 3, 1, "", "cwb_cifti_header"], [18, 3, 1, "", "dump_data"], [21, 3, 1, "", "extend_to_max_size"], [21, 3, 1, "", "extend_to_size"], [19, 3, 1, "", "fillnan"], [15, 3, 1, "", "get_col"], [18, 3, 1, "", "get_metadata_variable"], [17, 3, 1, "", "get_path_from_var"], [17, 3, 1, "", "identity"], [19, 3, 1, "", "nanfill"], [20, 3, 1, "", "nifti_header"], [22, 3, 1, "", "normalise"], [22, 3, 1, "", "polynomial_detrend"], [22, 3, 1, "", "random_window"], [16, 3, 1, "", "read_data_frame"], [18, 3, 1, "", "read_json"], [20, 3, 1, "", "read_neuro_image"], [22, 3, 1, "", "standardise"], [21, 3, 1, "", "to_named_tensor"], [21, 3, 1, "", "to_tensor"], [17, 3, 1, "", "transform_block"], [17, 3, 1, "", "transpose"], [17, 3, 1, "", "unzip_blocked_dict"], [17, 3, 1, "", "vector_encode"], [22, 3, 1, "", "window"], [22, 3, 1, "", "window_map"]], "hypercoil.data.grabber": [[23, 1, 1, "", "LightGrabber"]], "hypercoil.data.grabber.LightGrabber": [[23, 2, 1, "", "find_files"], [23, 2, 1, "", "get"], [23, 2, 1, "", "getall"]], "hypercoil.data.hcp": [[25, 3, 1, "", "hcp_references"]], "hypercoil.data.neuro": [[26, 1, 1, "", "fMRIDataReference"]], "hypercoil.engine": [[27, 0, 0, "-", "accumulate"]], "hypercoil.engine.accumulate": [[28, 1, 1, "", "AccumulatingFunction"], [29, 1, 1, "", "Accumulator"]], "hypercoil.engine.accumulate.AccumulatingFunction": [[28, 2, 1, "", "apply"], [28, 2, 1, "", "backward"], [28, 2, 1, "", "forward"]], "hypercoil.engine.accumulate.Accumulator": [[29, 2, 1, "", "forward"], [29, 2, 1, "", "reset"], [29, 2, 1, "", "zero_grad"]], "hypercoil.functional": [[30, 0, 0, "-", "activation"], [34, 0, 0, "-", "cmass"], [39, 0, 0, "-", "cov"], [49, 0, 0, "-", "fourier"], [52, 0, 0, "-", "graph"], [57, 0, 0, "-", "interpolate"], [61, 0, 0, "-", "matrix"], [73, 0, 0, "-", "semidefinite"], [80, 0, 0, "-", "sphere"], [87, 0, 0, "-", "sylo"], [88, 0, 0, "-", "symmap"], [93, 0, 0, "-", "tsconv"], [99, 0, 0, "-", "utils"]], "hypercoil.functional.activation": [[31, 3, 1, "", "amplitude_atanh"], [32, 3, 1, "", "amplitude_tanh"], [33, 3, 1, "", "corrnorm"]], "hypercoil.functional.cmass": [[35, 3, 1, "", "cmass"], [36, 3, 1, "", "cmass_coor"], [37, 3, 1, "", "cmass_reference_displacement"], [37, 3, 1, "", "cmass_reference_displacement_grid"], [38, 3, 1, "", "diffuse"]], "hypercoil.functional.cov": [[40, 3, 1, "", "conditionalcorr"], [41, 3, 1, "", "conditionalcov"], [42, 3, 1, "", "corr"], [43, 3, 1, "", "cov"], [44, 3, 1, "", "pairedcorr"], [45, 3, 1, "", "pairedcov"], [46, 3, 1, "", "partialcorr"], [47, 3, 1, "", "partialcov"], [48, 3, 1, "", "precision"]], "hypercoil.functional.fourier": [[50, 3, 1, "", "product_filter"], [51, 3, 1, "", "product_filtfilt"]], "hypercoil.functional.graph": [[53, 3, 1, "", "coaffiliation"], [54, 3, 1, "", "girvan_newman_null"], [55, 3, 1, "", "modularity_matrix"], [56, 3, 1, "", "relaxed_modularity"]], "hypercoil.functional.interpolate": [[58, 3, 1, "", "hybrid_interpolate"], [59, 3, 1, "", "spectral_interpolate"], [60, 3, 1, "", "weighted_interpolate"]], "hypercoil.functional.matrix": [[62, 3, 1, "", "delete_diagonal"], [63, 3, 1, "", "expand_outer"], [64, 3, 1, "", "invert_spd"], [65, 3, 1, "", "recondition_eigenspaces"], [66, 3, 1, "", "spd"], [67, 3, 1, "", "squareform"], [68, 3, 1, "", "sym2vec"], [69, 3, 1, "", "symmetric"], [70, 3, 1, "", "toeplitz"], [71, 3, 1, "", "vec2sym"]], "hypercoil.functional.resid": [[72, 3, 1, "", "residualise"]], "hypercoil.functional.semidefinite": [[74, 3, 1, "", "cone_project_spd"], [75, 3, 1, "", "mean_euc_spd"], [76, 3, 1, "", "mean_geom_spd"], [77, 3, 1, "", "mean_harm_spd"], [78, 3, 1, "", "mean_logeuc_spd"], [79, 3, 1, "", "tangent_project_spd"]], "hypercoil.functional.sphere": [[81, 3, 1, "", "euclidean_conv"], [82, 3, 1, "", "spatial_conv"], [83, 3, 1, "", "sphere_to_latlong"], [84, 3, 1, "", "sphere_to_normals"], [85, 3, 1, "", "spherical_conv"], [86, 3, 1, "", "spherical_geodesic"]], "hypercoil.functional.sylo": [[87, 3, 1, "", "sylo"]], "hypercoil.functional.symmap": [[89, 3, 1, "", "symexp"], [90, 3, 1, "", "symlog"], [91, 3, 1, "", "symmap"], [92, 3, 1, "", "symsqrt"]], "hypercoil.functional.tsconv": [[94, 3, 1, "", "basischan"], [95, 3, 1, "", "basisconv2d"], [96, 3, 1, "", "polychan"], [97, 3, 1, "", "polyconv2d"], [98, 3, 1, "", "tsconv2d"]], "hypercoil.functional.utils": [[100, 3, 1, "", "apply_mask"], [101, 3, 1, "", "complex_decompose"], [102, 3, 1, "", "complex_recompose"], [103, 3, 1, "", "conform_mask"], [104, 3, 1, "", "wmean"]], "hypercoil.init": [[105, 0, 0, "-", "atlas"], [115, 0, 0, "-", "atlasmixins"], [116, 0, 0, "-", "base"], [123, 0, 0, "-", "deltaplus"], [124, 0, 0, "-", "dirichlet"], [125, 0, 0, "-", "domain"], [131, 0, 0, "-", "domainbase"], [139, 0, 0, "-", "freqfilter"], [143, 0, 0, "-", "iirfilter"], [144, 0, 0, "-", "laplace"], [146, 0, 0, "-", "mpbl"], [147, 0, 0, "-", "semidefinite"], [150, 0, 0, "-", "sylo"], [151, 0, 0, "-", "toeplitz"]], "hypercoil.init.atlas": [[106, 1, 1, "", "AtlasInit"], [107, 1, 1, "", "BaseAtlas"], [108, 1, 1, "", "CortexSubcortexCIfTIAtlas"], [109, 1, 1, "", "DirichletInitBaseAtlas"], [110, 1, 1, "", "DirichletInitSurfaceAtlas"], [111, 1, 1, "", "DirichletInitVolumetricAtlas"], [112, 1, 1, "", "DiscreteVolumetricAtlas"], [113, 1, 1, "", "MultiVolumetricAtlas"], [114, 1, 1, "", "MultifileVolumetricAtlas"]], "hypercoil.init.atlas.AtlasInit": [[106, 2, 1, "", "__call__"]], "hypercoil.init.atlas.BaseAtlas": [[107, 2, 1, "", "__call__"]], "hypercoil.init.atlas.CortexSubcortexCIfTIAtlas": [[108, 2, 1, "", "__call__"], [108, 2, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitBaseAtlas": [[109, 2, 1, "", "__call__"]], "hypercoil.init.atlas.DirichletInitSurfaceAtlas": [[110, 2, 1, "", "__call__"], [110, 2, 1, "", "to_image"]], "hypercoil.init.atlas.DirichletInitVolumetricAtlas": [[111, 2, 1, "", "__call__"]], "hypercoil.init.atlas.DiscreteVolumetricAtlas": [[112, 2, 1, "", "__call__"]], "hypercoil.init.atlas.MultiVolumetricAtlas": [[113, 2, 1, "", "__call__"]], "hypercoil.init.atlas.MultifileVolumetricAtlas": [[114, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins": [[145, 1, 1, "", "FloatLeaf"], [145, 1, 1, "", "MaskClosing"], [145, 1, 1, "", "MaskDilation"], [145, 1, 1, "", "MaskErosion"], [145, 1, 1, "", "MaskFillHoles"], [145, 1, 1, "", "MaskIntersection"], [145, 1, 1, "", "MaskLeaf"], [145, 1, 1, "", "MaskNegation"], [145, 1, 1, "", "MaskOpening"], [145, 1, 1, "", "MaskThreshold"], [145, 1, 1, "", "MaskUThreshold"], [145, 1, 1, "", "MaskUnion"], [115, 1, 1, "", "_CIfTIReferenceMixin"], [115, 1, 1, "", "_ContinuousLabelMixin"], [115, 1, 1, "", "_CortexSubcortexCIfTICompartmentMixin"], [115, 1, 1, "", "_CortexSubcortexCIfTIMaskMixin"], [115, 1, 1, "", "_DirichletLabelMixin"], [115, 1, 1, "", "_DiscreteLabelMixin"], [115, 1, 1, "", "_EvenlySampledConvMixin"], [115, 1, 1, "", "_FromNullMaskMixin"], [115, 1, 1, "", "_LogicMaskMixin"], [115, 1, 1, "", "_MultiCompartmentMixin"], [115, 1, 1, "", "_MultiReferenceMixin"], [115, 1, 1, "", "_ObjectReferenceMixin"], [115, 1, 1, "", "_PhantomReferenceMixin"], [115, 1, 1, "", "_SingleCompartmentMixin"], [115, 1, 1, "", "_SingleReferenceMixin"], [115, 1, 1, "", "_SpatialConvMixin"], [115, 1, 1, "", "_VertexCIfTIMeshMixin"], [115, 1, 1, "", "_VolumetricMeshMixin"]], "hypercoil.init.atlasmixins.FloatLeaf": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskClosing": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskDilation": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskErosion": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskFillHoles": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskIntersection": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskLeaf": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskNegation": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskOpening": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskThreshold": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskUThreshold": [[145, 2, 1, "", "__call__"]], "hypercoil.init.atlasmixins.MaskUnion": [[145, 2, 1, "", "__call__"]], "hypercoil.init.base": [[117, 3, 1, "", "ConstantInitialiser"], [118, 3, 1, "", "DistributionInitialiser"], [119, 1, 1, "", "DomainInitialiser"], [120, 3, 1, "", "constant_init_"], [121, 3, 1, "", "from_distr_init_"], [122, 3, 1, "", "identity_init_"]], "hypercoil.init.deltaplus": [[123, 1, 1, "", "DeltaPlusInit"], [123, 3, 1, "", "deltaplus_init_"]], "hypercoil.init.dirichlet": [[124, 1, 1, "", "DirichletInit"], [124, 3, 1, "", "dirichlet_init_"]], "hypercoil.init.domain": [[126, 1, 1, "", "AmplitudeAtanh"], [127, 1, 1, "", "AmplitudeMultiLogit"], [128, 1, 1, "", "Atanh"], [129, 1, 1, "", "Logit"], [130, 1, 1, "", "MultiLogit"]], "hypercoil.init.domain.AmplitudeAtanh": [[126, 2, 1, "", "handle_ood"], [126, 2, 1, "", "image"], [126, 2, 1, "", "preimage"], [126, 2, 1, "", "test"]], "hypercoil.init.domain.AmplitudeMultiLogit": [[127, 2, 1, "", "handle_ood"], [127, 2, 1, "", "image"], [127, 2, 1, "", "preimage"], [127, 2, 1, "", "test"]], "hypercoil.init.domain.Atanh": [[128, 2, 1, "", "handle_ood"], [128, 2, 1, "", "image"], [128, 2, 1, "", "preimage"], [128, 2, 1, "", "test"]], "hypercoil.init.domain.Logit": [[129, 2, 1, "", "handle_ood"], [129, 2, 1, "", "image"], [129, 2, 1, "", "preimage"], [129, 2, 1, "", "test"]], "hypercoil.init.domain.MultiLogit": [[130, 2, 1, "", "handle_ood"], [130, 2, 1, "", "image"], [130, 2, 1, "", "preimage"], [130, 2, 1, "", "test"]], "hypercoil.init.domainbase": [[132, 1, 1, "", "Affine"], [133, 1, 1, "", "Clip"], [134, 1, 1, "", "Identity"], [135, 1, 1, "", "Linear"], [136, 1, 1, "", "Normalise"], [137, 1, 1, "", "_Domain"], [138, 1, 1, "", "_PhaseAmplitudeDomain"]], "hypercoil.init.domainbase.Affine": [[132, 2, 1, "", "handle_ood"], [132, 2, 1, "", "image"], [132, 2, 1, "", "preimage"], [132, 2, 1, "", "test"]], "hypercoil.init.domainbase.Clip": [[133, 2, 1, "", "apply"], [133, 2, 1, "", "test"]], "hypercoil.init.domainbase.Identity": [[134, 2, 1, "", "handle_ood"], [134, 2, 1, "", "image"], [134, 2, 1, "", "preimage"], [134, 2, 1, "", "test"]], "hypercoil.init.domainbase.Linear": [[135, 2, 1, "", "handle_ood"], [135, 2, 1, "", "image"], [135, 2, 1, "", "preimage"], [135, 2, 1, "", "test"]], "hypercoil.init.domainbase.Normalise": [[136, 2, 1, "", "apply"], [136, 2, 1, "", "test"]], "hypercoil.init.domainbase._Domain": [[137, 2, 1, "", "handle_ood"], [137, 2, 1, "", "image"], [137, 2, 1, "", "preimage"], [137, 2, 1, "", "test"]], "hypercoil.init.domainbase._PhaseAmplitudeDomain": [[138, 2, 1, "", "handle_ood"], [138, 2, 1, "", "image"], [138, 2, 1, "", "preimage"], [138, 2, 1, "", "test"]], "hypercoil.init.freqfilter": [[140, 1, 1, "", "FreqFilterSpec"], [141, 3, 1, "", "clamp_init_"], [142, 3, 1, "", "freqfilter_init_"]], "hypercoil.init.freqfilter.FreqFilterSpec": [[140, 2, 1, "", "get_clamps"], [140, 2, 1, "", "initialise_spectrum"]], "hypercoil.init.iirfilter": [[143, 1, 1, "", "IIRFilterSpec"]], "hypercoil.init.iirfilter.IIRFilterSpec": [[143, 2, 1, "", "initialise_coefs"]], "hypercoil.init.laplace": [[144, 1, 1, "", "LaplaceInit"], [144, 3, 1, "", "laplace_init_"]], "hypercoil.init.mpbl": [[146, 1, 1, "", "BipartiteLatticeInit"]], "hypercoil.init.semidefinite": [[148, 1, 1, "", "SPDEuclideanMean"], [148, 1, 1, "", "SPDGeometricMean"], [148, 1, 1, "", "SPDHarmonicMean"], [148, 1, 1, "", "SPDLogEuclideanMean"], [149, 1, 1, "", "TangencyInit"], [149, 3, 1, "", "tangency_init_"]], "hypercoil.init.sylo": [[150, 3, 1, "", "sylo_init_"]], "hypercoil.init.toeplitz": [[151, 1, 1, "", "ToeplitzInit"], [151, 3, 1, "", "toeplitz_init_"]], "hypercoil.loss.base": [[152, 1, 1, "", "LossApply"], [153, 1, 1, "", "ReducingLoss"]], "hypercoil.loss.base.LossApply": [[152, 2, 1, "", "forward"], [152, 2, 1, "", "register_action"], [152, 2, 1, "", "register_sentry"]], "hypercoil.loss.base.ReducingLoss": [[153, 2, 1, "", "forward"], [153, 2, 1, "", "register_action"], [153, 2, 1, "", "register_sentry"]], "hypercoil.loss.batchcorr": [[154, 1, 1, "", "BatchCorrelation"], [155, 1, 1, "", "QCFC"], [156, 3, 1, "", "auto_tol"]], "hypercoil.loss.batchcorr.BatchCorrelation": [[154, 2, 1, "", "forward"], [154, 2, 1, "", "register_action"], [154, 2, 1, "", "register_sentry"]], "hypercoil.loss.batchcorr.QCFC": [[155, 2, 1, "", "forward"], [155, 2, 1, "", "register_action"], [155, 2, 1, "", "register_sentry"]], "hypercoil.loss.cmass": [[157, 1, 1, "", "Compactness"], [158, 1, 1, "", "HemisphericTether"]], "hypercoil.loss.cmass.Compactness": [[157, 2, 1, "", "forward"], [157, 2, 1, "", "register_action"], [157, 2, 1, "", "register_sentry"]], "hypercoil.loss.cmass.HemisphericTether": [[158, 2, 1, "", "forward"], [158, 2, 1, "", "register_action"], [158, 2, 1, "", "register_sentry"]], "hypercoil.loss": [[159, 0, 0, "-", "determinant"], [161, 0, 0, "-", "entropy"], [162, 0, 0, "-", "equilibrium"], [164, 0, 0, "-", "jsdiv"], [169, 0, 0, "-", "scheme"], [170, 0, 0, "-", "secondmoment"], [172, 0, 0, "-", "symbimodal"]], "hypercoil.loss.determinant": [[159, 1, 1, "", "DetCorr"], [159, 1, 1, "", "Determinant"], [159, 1, 1, "", "LogDet"], [159, 1, 1, "", "LogDetCorr"]], "hypercoil.loss.determinant.DetCorr": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.determinant.Determinant": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.determinant.LogDet": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.determinant.LogDetCorr": [[159, 2, 1, "", "forward"], [159, 2, 1, "", "register_action"], [159, 2, 1, "", "register_sentry"]], "hypercoil.loss.dispersion": [[160, 1, 1, "", "VectorDispersion"]], "hypercoil.loss.dispersion.VectorDispersion": [[160, 2, 1, "", "forward"], [160, 2, 1, "", "register_action"], [160, 2, 1, "", "register_sentry"]], "hypercoil.loss.entropy": [[161, 1, 1, "", "Entropy"], [161, 1, 1, "", "SoftmaxEntropy"]], "hypercoil.loss.entropy.Entropy": [[161, 2, 1, "", "forward"], [161, 2, 1, "", "register_action"], [161, 2, 1, "", "register_sentry"]], "hypercoil.loss.entropy.SoftmaxEntropy": [[161, 2, 1, "", "forward"], [161, 2, 1, "", "register_action"], [161, 2, 1, "", "register_sentry"]], "hypercoil.loss.equilibrium": [[162, 1, 1, "", "Equilibrium"], [162, 1, 1, "", "SoftmaxEquilibrium"]], "hypercoil.loss.equilibrium.Equilibrium": [[162, 2, 1, "", "forward"], [162, 2, 1, "", "register_action"], [162, 2, 1, "", "register_sentry"]], "hypercoil.loss.equilibrium.SoftmaxEquilibrium": [[162, 2, 1, "", "forward"], [162, 2, 1, "", "register_action"], [162, 2, 1, "", "register_sentry"]], "hypercoil.loss.hinge": [[163, 1, 1, "", "HingeLoss"]], "hypercoil.loss.hinge.HingeLoss": [[163, 2, 1, "", "forward"], [163, 2, 1, "", "register_action"], [163, 2, 1, "", "register_sentry"]], "hypercoil.loss.jsdiv": [[164, 1, 1, "", "JSDivergence"], [164, 1, 1, "", "SoftmaxJSDivergence"]], "hypercoil.loss.jsdiv.JSDivergence": [[164, 2, 1, "", "forward"], [164, 2, 1, "", "register_action"], [164, 2, 1, "", "register_sentry"]], "hypercoil.loss.jsdiv.SoftmaxJSDivergence": [[164, 2, 1, "", "forward"], [164, 2, 1, "", "register_action"], [164, 2, 1, "", "register_sentry"]], "hypercoil.loss.modularity": [[165, 1, 1, "", "ModularityLoss"]], "hypercoil.loss.modularity.ModularityLoss": [[165, 2, 1, "", "forward"], [165, 2, 1, "", "register_action"], [165, 2, 1, "", "register_sentry"]], "hypercoil.loss.mvkurtosis": [[166, 1, 1, "", "MultivariateKurtosis"]], "hypercoil.loss.mvkurtosis.MultivariateKurtosis": [[166, 2, 1, "", "forward"], [166, 2, 1, "", "register_action"], [166, 2, 1, "", "register_sentry"]], "hypercoil.loss.norm": [[167, 1, 1, "", "NormedLoss"], [168, 1, 1, "", "UnilateralNormedLoss"]], "hypercoil.loss.norm.NormedLoss": [[167, 2, 1, "", "forward"], [167, 2, 1, "", "register_action"], [167, 2, 1, "", "register_sentry"]], "hypercoil.loss.norm.UnilateralNormedLoss": [[168, 2, 1, "", "forward"], [168, 2, 1, "", "register_action"], [168, 2, 1, "", "register_sentry"]], "hypercoil.loss.scheme": [[169, 1, 1, "", "LossScheme"]], "hypercoil.loss.scheme.LossScheme": [[169, 2, 1, "", "forward"], [169, 2, 1, "", "register_action"], [169, 2, 1, "", "register_sentry"]], "hypercoil.loss.secondmoment": [[170, 1, 1, "", "SecondMoment"], [170, 1, 1, "", "SecondMomentCentred"]], "hypercoil.loss.secondmoment.SecondMoment": [[170, 2, 1, "", "forward"], [170, 2, 1, "", "register_action"], [170, 2, 1, "", "register_sentry"]], "hypercoil.loss.secondmoment.SecondMomentCentred": [[170, 2, 1, "", "forward"], [170, 2, 1, "", "register_action"], [170, 2, 1, "", "register_sentry"]], "hypercoil.loss.smoothness": [[171, 1, 1, "", "SmoothnessPenalty"]], "hypercoil.loss.smoothness.SmoothnessPenalty": [[171, 2, 1, "", "forward"], [171, 2, 1, "", "register_action"], [171, 2, 1, "", "register_sentry"]], "hypercoil.loss.symbimodal": [[172, 1, 1, "", "SymmetricBimodal"], [172, 1, 1, "", "SymmetricBimodalNorm"]], "hypercoil.loss.symbimodal.SymmetricBimodal": [[172, 2, 1, "", "forward"], [172, 2, 1, "", "register_action"], [172, 2, 1, "", "register_sentry"]], "hypercoil.loss.symbimodal.SymmetricBimodalNorm": [[172, 2, 1, "", "forward"], [172, 2, 1, "", "register_action"], [172, 2, 1, "", "register_sentry"]], "hypercoil.nn": [[173, 0, 0, "-", "activation"], [175, 0, 0, "-", "atlas"], [178, 0, 0, "-", "cov"], [187, 0, 0, "-", "iirfilter"], [188, 0, 0, "-", "interpolate"], [192, 0, 0, "-", "recombinator"], [196, 0, 0, "-", "select"], [200, 0, 0, "-", "semidefinite"], [205, 0, 0, "-", "sylo"], [208, 0, 0, "-", "vertcom"]], "hypercoil.nn.activation": [[174, 1, 1, "", "CorrelationNorm"]], "hypercoil.nn.atlas": [[176, 1, 1, "", "AtlasAccumuline"], [177, 1, 1, "", "AtlasLinear"]], "hypercoil.nn.cov": [[179, 1, 1, "", "BinaryCovariance"], [180, 1, 1, "", "BinaryCovarianceTW"], [181, 1, 1, "", "BinaryCovarianceUW"], [182, 1, 1, "", "UnaryCovariance"], [183, 1, 1, "", "UnaryCovarianceTW"], [184, 1, 1, "", "UnaryCovarianceUW"], [185, 1, 1, "", "_Cov"]], "hypercoil.nn.freqfilter": [[186, 1, 1, "", "FrequencyDomainFilter"]], "hypercoil.nn.iirfilter": [[187, 1, 1, "", "IIRFiltFilt"], [187, 1, 1, "", "IIRFilter"]], "hypercoil.nn.interpolate": [[189, 1, 1, "", "HybridInterpolate"], [190, 1, 1, "", "SpectralInterpolate"], [191, 1, 1, "", "WeightedInterpolate"]], "hypercoil.nn.recombinator": [[193, 3, 1, "", "QueryEncoder"], [194, 3, 1, "", "Recombinator"]], "hypercoil.nn.resid": [[195, 0, 0, "-", "Residualise"]], "hypercoil.nn.select": [[197, 1, 1, "", "EliminationSelector"], [198, 1, 1, "", "LinearCombinationSelector"], [199, 1, 1, "", "ResponseFunctionLinearSelector"]], "hypercoil.nn.semidefinite": [[201, 3, 1, "", "BatchTangentProject"], [202, 3, 1, "", "TangentProject"]], "hypercoil.nn.spdnoise": [[203, 1, 1, "", "SPDNoise"]], "hypercoil.nn.svm": [[204, 1, 1, "", "SVM"]], "hypercoil.nn.sylo": [[206, 1, 1, "", "Sylo"], [207, 3, 1, "", "SyloResNet"]], "hypercoil.nn.vertcom": [[209, 3, 1, "", "VerticalCompression"], [210, 3, 1, "", "vertical_compression"]], "hypercoil.nn.window": [[211, 1, 1, "", "WindowAmplifier"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"bid": 0, "interfac": [0, 24], "content": [0, 7, 11, 24, 27, 105, 212, 217, 218], "bidsobjectfactori": 1, "lightbidslayout": 2, "lightbidsobject": 3, "fmriprepdataset": 4, "fmriprep_refer": 5, "collat": 6, "batch": 6, "function": [6, 14, 30, 87, 173, 216], "dataref": 7, "data": [7, 14, 15, 212], "refer": [7, 37, 221], "dataqueri": 8, "datarefer": 9, "data_refer": 10, "dataset": [11, 20], "referenc": 11, "referenceddataload": 12, "referenceddataset": 13, "transform": 14, "categori": 14, "frame": 15, "get_col": 15, "apply_model_spec": 15, "read_data_fram": [15, 16], "i": 16, "o": 16, "filesystem": 16, "read_neuro_imag": [16, 20], "read_json": [16, 18], "change_extens": 16, "gener": 17, "us": 17, "ident": [17, 134], "get_path_from_var": 17, "apply_transform": 17, "apply_to_select": 17, "transform_block": 17, "unzip_blocked_dict": 17, "transpos": 17, "vector_encod": 17, "metadata": 18, "dump_data": 18, "get_metadata_vari": 18, "miss": 19, "valu": 19, "nanfil": 19, "fillnan": 19, "extend_to_max_s": [19, 21], "neuroimag": 20, "nifti_head": 20, "cwb_cifti_head": 20, "tensor": 21, "cast": 21, "bind": 21, "to_tensor": 21, "to_named_tensor": 21, "consolidate_block": 21, "extend_to_s": 21, "time": [22, 93], "seri": [22, 93], "polynomial_detrend": 22, "standardis": 22, "normalis": [22, 136, 174], "window": 22, "random_window": 22, "window_map": 22, "lightgrabb": 23, "hcp": 24, "hcp_refer": 25, "fmridatarefer": 26, "accumul": [27, 29, 176], "local": 27, "gradient": 27, "accumulatingfunct": 28, "activ": [30, 173], "amplitude_atanh": 31, "amplitude_tanh": 32, "corrnorm": 33, "cmass": [34, 35], "centr": [34, 35, 36, 37, 38], "mass": [34, 35, 36, 37, 38], "arrai": 35, "coordin": [35, 36, 80], "cmass_coor": 36, "ani": 36, "displac": 37, "from": 37, "diffus": 38, "around": 38, "cov": [39, 43, 178], "covari": [39, 41, 43, 45, 47, 48, 178, 185], "correl": [39, 40, 42, 44, 46, 174], "conditionalcorr": 40, "condit": [40, 41], "conditionalcov": 41, "corr": [42, 159], "pearson": 42, "pairedcorr": 44, "pair": [44, 45], "pairedcov": 45, "partialcorr": 46, "partial": [46, 47], "partialcov": 47, "precis": 48, "invers": 48, "fourier": 49, "frequenc": [49, 139, 186], "domain": [49, 125, 131, 186], "filter": [49, 51, 143, 186, 187], "product_filt": 50, "product_filtfilt": 51, "zero": 51, "phase": 51, "graph": 52, "network": [52, 222], "coaffili": 53, "commun": 53, "girvan_newman_nul": 54, "modularity_matrix": 55, "relaxed_modular": 56, "interpol": [57, 58, 188], "imput": 57, "hybrid_interpol": 58, "weight": 58, "spectral": 58, "spectral_interpol": 59, "weighted_interpol": 60, "matrix": [61, 88], "oper": 61, "delete_diagon": 62, "expand_out": 63, "invert_spd": 64, "recondition_eigenspac": 65, "spd": 66, "squareform": 67, "sym2vec": 68, "symmetr": [69, 88], "toeplitz": [70, 151], "vec2sym": 71, "residualis": [72, 195], "semidefinit": [73, 147, 200], "posit": 73, "cone": 73, "cone_project_spd": 74, "mean_euc_spd": 75, "mean_geom_spd": 76, "mean_harm_spd": 77, "mean_logeuc_spd": 78, "tangent_project_spd": 79, "sphere": 80, "spheric": 80, "euclidean_conv": 81, "spatial_conv": 82, "sphere_to_latlong": 83, "sphere_to_norm": 84, "spherical_conv": 85, "spherical_geodes": 86, "sylo": [87, 150, 205, 206], "symmap": [88, 91], "map": [88, 217], "symexp": 89, "symlog": 90, "symsqrt": 92, "tsconv": 93, "convolut": 93, "basischan": 94, "basisconv2d": 95, "polychan": 96, "polyconv2d": 97, "tsconv2d": 98, "util": 99, "miscellan": 99, "apply_mask": 100, "complex_decompos": 101, "complex_recompos": 102, "conform_mask": 103, "wmean": 104, "atla": [105, 115, 175, 176, 177], "initialis": [105, 116, 218], "atlasinit": 106, "baseatla": 107, "cortexsubcortexciftiatla": 108, "dirichletinitbaseatla": 109, "dirichletinitsurfaceatla": 110, "dirichletinitvolumetricatla": 111, "discretevolumetricatla": 112, "multivolumetricatla": 113, "multifilevolumetricatla": 114, "atlasmixin": 115, "mixin": 115, "referencemixin": 115, "maskmixin": 115, "compartmentmixin": 115, "labelmixin": 115, "meshmixin": 115, "convmixin": 115, "base": [116, 131, 159, 170, 185], "constantinitialis": 117, "distributioninitialis": 118, "domaininitialis": 119, "constant_init_": 120, "from_distr_init_": 121, "identity_init_": 122, "deltaplu": 123, "deltaplus_init": 123, "deltaplusinit": 123, "dirichlet": 124, "dirichlet_init": 124, "dirichletinit": 124, "mapper": [125, 131], "amplitudeatanh": 126, "amplitudemultilogit": 127, "atanh": 128, "logit": 129, "multilogit": 130, "domainbas": 131, "class": [131, 185], "affin": 132, "clip": 133, "ood": [133, 136], "handler": [133, 136], "linear": [135, 176, 177], "_domain": 137, "_phaseamplitudedomain": 138, "freqfilt": [139, 186], "band": 139, "init": [139, 143, 218], "freqfilterspec": 140, "clamp_init_": 141, "freqfilter_init_": 142, "iirfilt": [143, 187], "iir": [143, 187], "iirfilterspec": 143, "laplac": 144, "laplace_init": 144, "laplaceinit": 144, "mask": 145, "logic": 145, "maskthreshold": 145, "maskuthreshold": 145, "maskdil": 145, "maskeros": 145, "maskopen": 145, "maskclos": 145, "maskfillhol": 145, "maskneg": 145, "maskunion": 145, "maskintersect": 145, "floatleaf": 145, "maskleaf": 145, "mpbl": 146, "semidefinitemean": 148, "spdeuclideanmean": 148, "spdharmonicmean": 148, "spdlogeuclideanmean": 148, "spdgeometricmean": 148, "tangencyinit": 149, "tangency_init_": 149, "toeplitz_init": 151, "toeplitzinit": 151, "lossappli": 152, "reducingloss": 153, "batchcorrel": 154, "qcfc": 155, "auto_tol": 156, "compact": 157, "hemisphericteth": 158, "hemispher": 158, "tether": 158, "determin": 159, "log": 159, "loss": [159, 170, 220], "det": 159, "logdetcorr": 159, "detcorr": 159, "logdet": 159, "vectordispers": 160, "vector": 160, "dispers": 160, "entropi": 161, "softmaxentropi": 161, "equilibrium": 162, "softmaxequilibrium": 162, "hingeloss": 163, "jsdiverg": 164, "softmaxjsdiverg": 164, "modularityloss": 165, "girvan": 165, "newman": 165, "modular": 165, "relax": 165, "multivariatekurtosi": 166, "normedloss": 167, "unilateralnormedloss": 168, "lossschem": 169, "secondmo": 170, "second": 170, "moment": 170, "secondmomentcentr": 170, "smoothnesspenalti": 171, "symmetricbimod": 172, "symmetricbimodalnorm": 172, "modul": [173, 178, 222], "correlationnorm": 174, "layer": [175, 177, 186, 187, 188], "atlasaccumulin": 176, "atlaslinear": 177, "binarycovari": 179, "binarycovariancetw": 180, "binarycovarianceuw": 181, "unarycovari": 182, "unarycovariancetw": 183, "unarycovarianceuw": 184, "_cov": 185, "hybridinterpol": 189, "spectralinterpol": 190, "weightedinterpol": 191, "recombin": [192, 194], "queryencod": 193, "select": 196, "model": 196, "eliminationselector": 197, "linearcombinationselector": 198, "responsefunctionlinearselector": 199, "batchtangentproject": 201, "tangentproject": 202, "spdnois": 203, "svm": 204, "syloresnet": 207, "vertcom": 208, "vertex": 208, "compress": 208, "verticalcompress": 209, "vertical_compress": 210, "windowamplifi": 211, "engin": [212, 214], "framework": 213, "differenti": [214, 217], "eval": 215, "benchmark": 215, "evalu": 215, "program": 217, "brain": 217, "indic": 217, "tabl": 217, "scheme": 218, "instal": 219, "regularis": 220, "api": 221, "nn": 222, "neural": 222, "poster": 223, "land": 223, "page": 223, "viz": 224, "visualis": 224}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})